{
  "analysis_summary": {
    "total_violations": 5483,
    "by_priority": {
      "HIGH": 287,
      "MEDIUM": 3446,
      "LOW": 1750
    },
    "by_category": {
      "business_logic": 287,
      "configuration": 595,
      "domain_specific": 45,
      "suspicious_patterns": 4556
    }
  },
  "high_priority_violations": [
    {
      "value": 0.92,
      "line_number": 33,
      "context": "'nasa_compliance': results.get('nasa_compliance', {'score': 0.92}),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 50,
      "context": "'nasa_compliance': {'score': 0.92},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 278,
      "context": "\"overall_compliance\": 0.95 if len(critical_findings) <= critical_threshold and len(high_findings) <= high_threshold else 0.8",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 144,
      "context": "nasa_compliance_score = 0.95 if total_critical == 0 and total_high <= 3 else 0.8",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 147,
      "context": "\"compliant\": nasa_compliance_score >= 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 37,
      "context": "min_nasa_compliance = 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 116,
      "context": "'nasa_pot10_score': 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 528,
      "context": "return {\"score\": 0.95, \"passed\": True, \"recommendations\": []}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 424,
      "context": "\"NASA_POT10\": {\"rules\": 10, \"threshold\": 0.90},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 425,
      "context": "\"DFARS\": {\"sections\": [\"252.204-7012\"], \"threshold\": 0.95},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 521,
      "context": "\"passed\": compliance_score >= 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 42,
      "context": "\"nasa_compliance_threshold\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 167,
      "context": "'score': 0.92,  # Known good baseline",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 139,
      "context": "'score': 0.92,  # Known baseline from previous analysis",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 86,
      "context": "'score': unified_results.get('nasa_compliance', {}).get('score', 0.92),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 15,
      "context": "NASA_COMPLIANCE_THRESHOLD = 0.95  # Minimum NASA compliance score for passing",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 700,
      "context": "ENHANCED_NASA_COMPLIANCE_THRESHOLD = 0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 800,
      "context": "\"max_duplication_score\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 809,
      "context": "\"max_duplication_score\": 0.9,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 924,
      "context": "\"nasa_compliance_min\": 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 311,
      "context": "NASA_COMPLIANCE_THRESHOLD = 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 301,
      "context": "NASA_COMPLIANCE_THRESHOLD = getattr(constants, \"NASA_COMPLIANCE_THRESHOLD\", 0.95)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 49,
      "context": "compliance_threshold: float = 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 103,
      "context": "self.compliance_threshold = 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 561,
      "context": "SecurityLevel.ENHANCED: {\"compliance\": 0.90, \"theater\": 0.80, \"overall\": 0.85},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 562,
      "context": "SecurityLevel.CRITICAL: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.92},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 562,
      "context": "SecurityLevel.CRITICAL: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.92},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 562,
      "context": "SecurityLevel.CRITICAL: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.92},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 563,
      "context": "SecurityLevel.DEFENSE_INDUSTRY: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.95}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 563,
      "context": "SecurityLevel.DEFENSE_INDUSTRY: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.95}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 563,
      "context": "SecurityLevel.DEFENSE_INDUSTRY: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.95}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 401,
      "context": "result.nasa_compliance_score >= 0.95):  # Expect high compliance after fixes",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 109,
      "context": "'state': 'success' if result.nasa_compliance_score >= 0.9 else 'failure',",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 157,
      "context": "| NASA POT10 Compliance | {' Pass' if result.nasa_compliance_score >= 0.9 else ' Fail'} | {result.nasa_compliance_score:.1%} |",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 224,
      "context": "- **NASA POT10 Compliance**: {result.nasa_compliance_score:.1%} ({' Pass' if result.nasa_compliance_score >= 0.9 else ' Fail'})",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 275,
      "context": "| NASA POT10 Compliance | 90% | {result.nasa_compliance_score:.1%} | {'' if result.nasa_compliance_score >= 0.9 else ''} |",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 27,
      "context": "excellent_threshold: float = 0.95  # 95%+",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 28,
      "context": "good_threshold: float = 0.90       # 90%+",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 225,
      "context": "elif score < 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 350,
      "context": "if overall_score >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 271,
      "context": "'compliance_threshold': 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 352,
      "context": "elif overall_score >= 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 215,
      "context": "threshold=0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 426,
      "context": "threshold=0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 213,
      "context": "passed=nasa_score >= 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 424,
      "context": "passed=compliance_score >= 0.95,  # 95% compliance required",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 217,
      "context": "recommendation=\"Improve NASA Power of Ten compliance\" if nasa_score < 0.90 else \"Compliant\"",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 428,
      "context": "recommendation=\"Address DFARS compliance gaps\" if compliance_score < 0.95 else \"Compliant\"",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 51,
      "context": "nasa_compliance_threshold: float = 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 380,
      "context": "if result.nasa_compliance_score < 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 423,
      "context": "if result.nasa_compliance_score < 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 426,
      "context": "if result.theater_detection_score < 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 285,
      "context": "nasa_compliance_threshold=0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 237,
      "context": "if nasa_score < 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 94,
      "context": "nasa_compliance = {'score': 0.90, 'violations': []}  # Simplified",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 299,
      "context": "\"nasa_pot10\": {\"score\": 0.90, \"passed\": True},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 300,
      "context": "\"dfars\": {\"score\": 0.95, \"passed\": True}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 51,
      "context": "'min_compliance_score': 0.95   # 95% compliance for defense industry",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 371,
      "context": "if score >= 0.98:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 156,
      "context": "'improvement_needed': overall_score < 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 279,
      "context": "'defense_ready': nasa_data.get('score', 0.0) >= 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 280,
      "context": "'improvement_needed': nasa_data.get('score', 0.0) < 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 469,
      "context": "'nasa_compliant': result.nasa_compliance.get('score', 0.0) >= 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 283,
      "context": "'compliant': nasa_compliance.get('score', 0.0) >= 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 286,
      "context": "'defense_ready': nasa_compliance.get('score', 0.0) >= 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 913,
      "context": "return 0.95  # Assume good naming",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 513,
      "context": "if naming_compliance >= 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 246,
      "context": "\"nasa_compliance_score\": 0.9,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 247,
      "context": "\"duplication_score\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 93,
      "context": "NASA_COMPLIANCE_THRESHOLD = 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 78,
      "context": "NASA_COMPLIANCE_THRESHOLD = max(0.0, min(1.0, getattr(constants_module, 'NASA_COMPLIANCE_THRESHOLD', 0.90)))",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 29,
      "context": "'nasa': {'nasa_compliance': {'score': 0.92}},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 72,
      "context": "<p><strong>{data['nasa'].get('nasa_compliance', {}).get('score', 0.92):.1%}</strong></p>",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 48,
      "context": "- **Score**: {results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92):.1%}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 50,
      "context": "- **Defense Industry Ready**: {results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92) >= 0.90}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 49,
      "context": "- **Status**: {'[OK] APPROVED' if results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92) >= 0.90 else '[FAIL] NEEDS IMPROVEMENT'}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 50,
      "context": "- **Defense Industry Ready**: {results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92) >= 0.90}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 49,
      "context": "- **Status**: {'[OK] APPROVED' if results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92) >= 0.90 else '[FAIL] NEEDS IMPROVEMENT'}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 37,
      "context": "min_nasa_compliance: float = 0.92  # Minimum NASA compliance required",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 272,
      "context": "min_nasa_compliance=0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 279,
      "context": "min_nasa_compliance=0.95  # Higher compliance required for defense",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 286,
      "context": "min_nasa_compliance=0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 246,
      "context": "min_nasa_compliance=config.get('min_nasa_compliance', 0.92)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 452,
      "context": "if result.nasa_compliance_score < 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 406,
      "context": "analysis_passed = result.get(\"critical_count\", 0) == 0 and result.nasa_compliance_score >= 0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 498,
      "context": "\"nasa_compliance_score\": analysis_data.get(\"nasa_compliance\", 0.92),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 499,
      "context": "\"duplication_score\": analysis_data.get(\"duplication_score\", 0.95),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 383,
      "context": "- **NASA POT10 Compliance**: {result.get('nasa_compliance_score', 0.92):.1%}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 385,
      "context": "- **Duplication Score**: {result.get(\"duplication_score\", 0.95):.2f}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 538,
      "context": "\"analysis_passed\": result.get(\"critical_count\", 0) == 0 and result.nasa_compliance_score >= 0.9,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 285,
      "context": "'min_nasa_compliance': 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 292,
      "context": "'min_nasa_compliance': 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 299,
      "context": "'min_nasa_compliance': 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 176,
      "context": "if 0.90 <= value <= 0.99:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "line_number": 176,
      "context": "if 0.90 <= value <= 0.99:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 21,
      "context": "nasa_compliance_min: float = 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 58,
      "context": "nasa_compliance_min=0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 60,
      "context": "duplication_threshold=0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 67,
      "context": "nasa_compliance_min=0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 112,
      "context": "\"nasa_compliance_min\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 114,
      "context": "\"duplication_threshold\": 0.9,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 119,
      "context": "\"nasa_compliance_min\": 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 23,
      "context": "return {\"score\": 0.92, \"passed\": True}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 177,
      "context": "metrics.factuality_p90 = 0.92  # Default to threshold",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 114,
      "context": "'factuality_p90': 0.92,  # NASA POT10 compliance",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 115,
      "context": "'coverage_p95': 0.90,     # Connascence detection",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 40,
      "context": "\"current_score\": 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 48,
      "context": "\"current\": current_data.get('nasa_compliance', {}).get('score', 0.92),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 103,
      "context": "\"min_compliance_score\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 499,
      "context": "if success_rate >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 107,
      "context": "\"overall_compliance_score\": 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 244,
      "context": "\"score\": 0.98,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 236,
      "context": "metrics.get('nasa_compliance_score', 0) >= 0.90 and",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 246,
      "context": "metrics.get('nasa_compliance_score', 0) >= 0.90 and",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 50,
      "context": "'nasa_compliance_score': 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 304,
      "context": "if nasa_status.get('score', 0) < 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 50,
      "context": "'nasa_compliance': {'value': 0.90, 'critical': True},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 210,
      "context": "'defense_ready': (nasa_status.get('score', 0) >= 0.92 and avg_compliance >= 0.90),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 210,
      "context": "'defense_ready': (nasa_status.get('score', 0) >= 0.92 and avg_compliance >= 0.90),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 347,
      "context": "'nasa_compliance_score': 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 358,
      "context": "'required_score': 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 176,
      "context": "'passing': compliance_score >= 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 177,
      "context": "'defense_threshold': compliance_score >= 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 42,
      "context": "\"nasa_compliance\": 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 34,
      "context": "'nasa_compliance_min': 0.92,     # 92% minimum",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 507,
      "context": "if overall_score < 0.9:  # 90% overall compliance threshold",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 547,
      "context": "if overall_score >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 22,
      "context": "'rule_3': {'name': 'Assertions', 'weight': 0.2, 'min_score': 0.9},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 23,
      "context": "'rule_7': {'name': 'Memory Bounds', 'weight': 0.25, 'min_score': 0.95},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 528,
      "context": "if rule_score.get('score', 1.0) < 0.9:  # Below 90% compliance",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 549,
      "context": "elif overall_score >= 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 588,
      "context": "'overall_compliant': overall_score >= 0.9,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 589,
      "context": "'compliance_level': 'excellent' if overall_score >= 0.95 else 'good' if overall_score >= 0.9 else 'needs_improvement'",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 589,
      "context": "'compliance_level': 'excellent' if overall_score >= 0.95 else 'good' if overall_score >= 0.9 else 'needs_improvement'",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 322,
      "context": "\"audit_readiness\": \"high\" if compliance_data.get(\"overall_compliance_score\", 0) > 0.9 else \"medium\"",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 15,
      "context": "parser.add_argument('--nasa-score', type=float, default=0.92, help='NASA compliance score')",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 48,
      "context": "\"defense_industry_ready\": args.nasa_score >= 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 44,
      "context": "\"quality_status\": \"excellent\" if args.nasa_score >= 0.90 else \"good\"",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 29,
      "context": "significant_change = abs(args.nasa_score - 0.92) > 0.05 or args.current_violations > 5",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 643,
      "context": "avg_compliance_score >= 0.95 and",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 644,
      "context": "defense_readiness_rate >= 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 34,
      "context": "\"nasa_compliance_score\": 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 70,
      "context": "self.DFARS_THRESHOLD = 0.95  # 95% DFARS compliance required",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 71,
      "context": "self.NASA_POT10_THRESHOLD = 0.95  # 95% NASA compliance required",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 73,
      "context": "self.AUDIT_COVERAGE_MINIMUM = 0.90  # 90% audit trail coverage",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 331,
      "context": "validation_results[\"certification_ready\"] = overall_score >= 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 332,
      "context": "validation_results[\"defense_industry_ready\"] = overall_score >= 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 338,
      "context": "if overall_score >= 0.98:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 340,
      "context": "elif overall_score >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 92,
      "context": "print_result(\"Cryptographic Operations\", \"PASS\" if crypto_score >= 0.95 else \"FAIL\", crypto_score)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 334,
      "context": "print_result(\"Overall Compliance Score\", \"PASS\" if overall_score >= 0.95 else \"FAIL\", overall_score)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 342,
      "context": "elif overall_score >= 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 206,
      "context": "print_result(\"Configuration Compliance\", \"PASS\" if config_score >= 0.9 else \"FAIL\", config_score)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 501,
      "context": "\"score\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 32,
      "context": "ASSERTION_COVERAGE_TARGET = 0.90  # 90% coverage target",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 163,
      "context": "self.defense_industry_threshold = 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 164,
      "context": "self.target_overall_compliance = 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 38,
      "context": "\"target_compliance\": 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 45,
      "context": "\"target_compliance\": 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 52,
      "context": "\"target_compliance\": 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 59,
      "context": "\"target_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 66,
      "context": "\"target_compliance\": 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 73,
      "context": "\"target_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 87,
      "context": "\"target_compliance\": 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 94,
      "context": "\"target_compliance\": 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 101,
      "context": "\"target_compliance\": 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 150,
      "context": "\"rule_1\": 0.95,  # Control flow",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 349,
      "context": "if overall_compliance >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 98,
      "context": "self.target_compliance = 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 85,
      "context": "\"rule_1\": 0.95,  # Control flow",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 518,
      "context": "\"readiness_threshold\": 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 519,
      "context": "\"compliant\": self.current_overall_compliance >= 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 768,
      "context": "if self.injection_stats.nasa_compliance_rate < 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 582,
      "context": "return min(base_success_rate + quality_bonus, 0.95)  # Max 95% success rate",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 653,
      "context": "return any(pattern in rule for pattern in critical_patterns) or overall_score >= 0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 192,
      "context": "if score >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 100,
      "context": "return compliance_score >= 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 301,
      "context": "default=0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 514,
      "context": "self.metrics.defense_industry_compliance_score >= 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 432,
      "context": "self.metrics.defense_industry_compliance_score >= 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 437,
      "context": "self.metrics.defense_industry_compliance_score >= 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 222,
      "context": "\"defense_industry_ready\": critical_violations == 0 and avg_compliance >= 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 680,
      "context": "if overall_score < 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 717,
      "context": "if overall_score < 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 951,
      "context": "if assessment_result[\"overall_score\"] >= 0.98:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 239,
      "context": "\"substantial_compliance\": 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 240,
      "context": "\"full_compliance\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 241,
      "context": "\"defense_certified\": 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 256,
      "context": "return min(confidence, 0.95)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 318,
      "context": "if score >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 153,
      "context": "if c.status == ComplianceStatus.COMPLIANT and c.confidence > 0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 228,
      "context": "\"overall_score\": min(0.90, 0.82 + 0.008 * (base_time.day % 10)),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 237,
      "context": "\"overall_score\": min(0.98, 0.95 + 0.003 * (base_time.day % 10)),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "line_number": 246,
      "context": "\"compliance_rate\": min(0.99, 0.98 + 0.001 * (base_time.day % 10)),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 237,
      "context": "\"overall_score\": min(0.98, 0.95 + 0.003 * (base_time.day % 10)),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 246,
      "context": "\"compliance_rate\": min(0.99, 0.98 + 0.001 * (base_time.day % 10)),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 594,
      "context": "if current_score >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 263,
      "context": "confidence=0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 419,
      "context": "if compliance_score >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 776,
      "context": "\"current_score\": phase3_data.get(\"quantified_benefits\", {}).get(\"nasa_compliance\", {}).get(\"overall_compliance_score\", 0.98),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 420,
      "context": "scores.append(0.95)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 421,
      "context": "elif compliance_score >= 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 108,
      "context": "'nasa_compliance': 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 110,
      "context": "'security_score': 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 290,
      "context": "if evidence.get('compliance_score', 0) < 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 375,
      "context": "\"compliance_score\": 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 525,
      "context": "{\"id\": \"RV.1\", \"name\": \"Review Software Requirements\", \"status\": \"implemented\" if nasa_score > 0.9 else \"partial\"}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 197,
      "context": "\"compliance_score\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 149,
      "context": "'compliance_threshold': 0.9,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 451,
      "context": "\"nasa_compliance\": 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 357,
      "context": "if result.pattern_compliance_score < 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 809,
      "context": "if result.pattern_compliance_score < 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 351,
      "context": "compliance_score = 0.92  # Simulated score based on Phase 4 results",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 325,
      "context": "'target_score': 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 384,
      "context": "'score': 0.90,  # Simulated",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 49,
      "context": "assert flag.min_nasa_compliance == 0.92  # Default",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 67,
      "context": "assert flag.min_nasa_compliance == 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 98,
      "context": "assert flag.min_nasa_compliance == 0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 254,
      "context": "assert feature_info.min_nasa_compliance == 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "line_number": 297,
      "context": "result = self.manager.validate_nasa_compliance(0.99)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "line_number": 300,
      "context": "assert result['current_compliance'] == 0.99",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 306,
      "context": "result = self.manager.validate_nasa_compliance(0.90)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 309,
      "context": "assert result['current_compliance'] == 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 314,
      "context": "assert violation['required_compliance'] == 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 315,
      "context": "assert violation['current_compliance'] == 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 347,
      "context": "result = self.manager.validate_nasa_compliance(0.90)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 590,
      "context": "assert sixsigma.min_nasa_compliance == 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 596,
      "context": "assert dfars.min_nasa_compliance == 0.95  # Higher for defense",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 602,
      "context": "assert supply_chain.min_nasa_compliance == 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "line_number": 630,
      "context": "assert feature.min_nasa_compliance == 0.99",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 59,
      "context": "min_nasa_compliance=0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 96,
      "context": "min_nasa_compliance=0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 134,
      "context": "'min_nasa_compliance': 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 140,
      "context": "'min_nasa_compliance': 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.93,
      "line_number": 147,
      "context": "'min_nasa_compliance': 0.93",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_93",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 283,
      "context": "'min_nasa_compliance': 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "line_number": 288,
      "context": "'min_nasa_compliance': 0.99",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "line_number": 617,
      "context": "'min_nasa_compliance': 0.99,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 686,
      "context": "'min_nasa_compliance': 0.9 + (i % 10) / 100  # Vary compliance requirements",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 774,
      "context": "self.manager.validate_nasa_compliance(0.9)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 39,
      "context": "\"compliance_score\": 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 117,
      "context": "if nasa_compliance < 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.94,
      "line_number": 233,
      "context": "\"nasa_compliance\": 0.94,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_94",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 248,
      "context": "if analysis_results['success'] and analysis_results['nasa_compliance'] >= 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 52,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 60,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.93,
      "line_number": 68,
      "context": "\"min_nasa_compliance\": 0.93",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_93",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 76,
      "context": "\"min_nasa_compliance\": 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 84,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 96,
      "context": "\"nasa_compliance_threshold\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.93,
      "line_number": 270,
      "context": "compliance_validation = feature_manager.validate_nasa_compliance(0.93)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_93",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 349,
      "context": "validation = feature_manager.validate_nasa_compliance(0.92)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.94,
      "line_number": 354,
      "context": "adequate_validation = feature_manager.validate_nasa_compliance(0.94)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_94",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.94,
      "line_number": 380,
      "context": "validation = feature_manager.validate_nasa_compliance(0.94)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_94",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.96,
      "line_number": 384,
      "context": "high_validation = feature_manager.validate_nasa_compliance(0.96)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_96",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.94,
      "line_number": 491,
      "context": "validation = feature_manager.validate_nasa_compliance(0.94)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_94",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 498,
      "context": "self.assertEqual(quality_violation[\"required_compliance\"], 0.95)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 341,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.93,
      "line_number": 347,
      "context": "\"min_nasa_compliance\": 0.93",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_93",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 432,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 460,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 467,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 230,
      "context": "\"compliance_score\": 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 379,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 548,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 615,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 295,
      "context": "nasa_compliance_score=0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 296,
      "context": "duplication_score=0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 381,
      "context": "nasa_compliance_score=0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 382,
      "context": "duplication_score=0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 46,
      "context": "\"violation_id_determinism\": {\"threshold\": 0.95, \"baseline\": 0.85}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 592,
      "context": "compliance_forecaster.alert_thresholds['critical'] = 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 121,
      "context": "sample['current_metrics']['code_coverage'] = np.random.uniform(0.6, 0.95)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 301,
      "context": "assert compliance_forecaster._get_risk_level_name(0.95) == 'critical'",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 319,
      "context": "risk_score=0.9,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.96,
      "line_number": 596,
      "context": "assert compliance_forecaster._get_risk_level_name(0.96) == 'critical'",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_96",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 320,
      "context": "component_scores={'security': 0.8, 'operational': 0.9}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 420,
      "context": "self.assertGreaterEqual(projected_compliance, 0.90, \"Should achieve defense industry readiness\")",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 239,
      "context": "assert result.score > 0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 247,
      "context": "'compliance_score': 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 277,
      "context": "assert result.score == 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 238,
      "context": "passed=score >= 0.95,  # 95% compliance required",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 311,
      "context": "'target': 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 283,
      "context": "score=0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 56,
      "context": "if nasa_score is not None and nasa_score < 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 272,
      "context": "\"current_score\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 333,
      "context": "\"nasa_compliance\": {\"overall_compliance_score\": 0.98, \"rule_2_violations_eliminated\": 2},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    }
  ],
  "business_logic_violations": [
    {
      "value": 0.92,
      "line_number": 33,
      "context": "'nasa_compliance': results.get('nasa_compliance', {'score': 0.92}),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 50,
      "context": "'nasa_compliance': {'score': 0.92},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 278,
      "context": "\"overall_compliance\": 0.95 if len(critical_findings) <= critical_threshold and len(high_findings) <= high_threshold else 0.8",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 144,
      "context": "nasa_compliance_score = 0.95 if total_critical == 0 and total_high <= 3 else 0.8",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 147,
      "context": "\"compliant\": nasa_compliance_score >= 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 37,
      "context": "min_nasa_compliance = 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 116,
      "context": "'nasa_pot10_score': 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 528,
      "context": "return {\"score\": 0.95, \"passed\": True, \"recommendations\": []}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 424,
      "context": "\"NASA_POT10\": {\"rules\": 10, \"threshold\": 0.90},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 425,
      "context": "\"DFARS\": {\"sections\": [\"252.204-7012\"], \"threshold\": 0.95},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 521,
      "context": "\"passed\": compliance_score >= 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 42,
      "context": "\"nasa_compliance_threshold\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 167,
      "context": "'score': 0.92,  # Known good baseline",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 139,
      "context": "'score': 0.92,  # Known baseline from previous analysis",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 86,
      "context": "'score': unified_results.get('nasa_compliance', {}).get('score', 0.92),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 15,
      "context": "NASA_COMPLIANCE_THRESHOLD = 0.95  # Minimum NASA compliance score for passing",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 700,
      "context": "ENHANCED_NASA_COMPLIANCE_THRESHOLD = 0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 800,
      "context": "\"max_duplication_score\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 809,
      "context": "\"max_duplication_score\": 0.9,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 924,
      "context": "\"nasa_compliance_min\": 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 311,
      "context": "NASA_COMPLIANCE_THRESHOLD = 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 301,
      "context": "NASA_COMPLIANCE_THRESHOLD = getattr(constants, \"NASA_COMPLIANCE_THRESHOLD\", 0.95)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 49,
      "context": "compliance_threshold: float = 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 103,
      "context": "self.compliance_threshold = 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 561,
      "context": "SecurityLevel.ENHANCED: {\"compliance\": 0.90, \"theater\": 0.80, \"overall\": 0.85},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 562,
      "context": "SecurityLevel.CRITICAL: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.92},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 562,
      "context": "SecurityLevel.CRITICAL: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.92},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 562,
      "context": "SecurityLevel.CRITICAL: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.92},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 563,
      "context": "SecurityLevel.DEFENSE_INDUSTRY: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.95}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 563,
      "context": "SecurityLevel.DEFENSE_INDUSTRY: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.95}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 563,
      "context": "SecurityLevel.DEFENSE_INDUSTRY: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.95}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 401,
      "context": "result.nasa_compliance_score >= 0.95):  # Expect high compliance after fixes",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 109,
      "context": "'state': 'success' if result.nasa_compliance_score >= 0.9 else 'failure',",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 157,
      "context": "| NASA POT10 Compliance | {' Pass' if result.nasa_compliance_score >= 0.9 else ' Fail'} | {result.nasa_compliance_score:.1%} |",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 224,
      "context": "- **NASA POT10 Compliance**: {result.nasa_compliance_score:.1%} ({' Pass' if result.nasa_compliance_score >= 0.9 else ' Fail'})",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 275,
      "context": "| NASA POT10 Compliance | 90% | {result.nasa_compliance_score:.1%} | {'' if result.nasa_compliance_score >= 0.9 else ''} |",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 27,
      "context": "excellent_threshold: float = 0.95  # 95%+",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 28,
      "context": "good_threshold: float = 0.90       # 90%+",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 225,
      "context": "elif score < 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 350,
      "context": "if overall_score >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 271,
      "context": "'compliance_threshold': 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 352,
      "context": "elif overall_score >= 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 215,
      "context": "threshold=0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 426,
      "context": "threshold=0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 213,
      "context": "passed=nasa_score >= 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 424,
      "context": "passed=compliance_score >= 0.95,  # 95% compliance required",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 217,
      "context": "recommendation=\"Improve NASA Power of Ten compliance\" if nasa_score < 0.90 else \"Compliant\"",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 428,
      "context": "recommendation=\"Address DFARS compliance gaps\" if compliance_score < 0.95 else \"Compliant\"",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 51,
      "context": "nasa_compliance_threshold: float = 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 380,
      "context": "if result.nasa_compliance_score < 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 423,
      "context": "if result.nasa_compliance_score < 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 426,
      "context": "if result.theater_detection_score < 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 285,
      "context": "nasa_compliance_threshold=0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 237,
      "context": "if nasa_score < 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 94,
      "context": "nasa_compliance = {'score': 0.90, 'violations': []}  # Simplified",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 299,
      "context": "\"nasa_pot10\": {\"score\": 0.90, \"passed\": True},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 300,
      "context": "\"dfars\": {\"score\": 0.95, \"passed\": True}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 51,
      "context": "'min_compliance_score': 0.95   # 95% compliance for defense industry",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 371,
      "context": "if score >= 0.98:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 156,
      "context": "'improvement_needed': overall_score < 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 279,
      "context": "'defense_ready': nasa_data.get('score', 0.0) >= 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 280,
      "context": "'improvement_needed': nasa_data.get('score', 0.0) < 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 469,
      "context": "'nasa_compliant': result.nasa_compliance.get('score', 0.0) >= 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 283,
      "context": "'compliant': nasa_compliance.get('score', 0.0) >= 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 286,
      "context": "'defense_ready': nasa_compliance.get('score', 0.0) >= 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 913,
      "context": "return 0.95  # Assume good naming",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 513,
      "context": "if naming_compliance >= 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 246,
      "context": "\"nasa_compliance_score\": 0.9,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 247,
      "context": "\"duplication_score\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 93,
      "context": "NASA_COMPLIANCE_THRESHOLD = 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 78,
      "context": "NASA_COMPLIANCE_THRESHOLD = max(0.0, min(1.0, getattr(constants_module, 'NASA_COMPLIANCE_THRESHOLD', 0.90)))",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 29,
      "context": "'nasa': {'nasa_compliance': {'score': 0.92}},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 72,
      "context": "<p><strong>{data['nasa'].get('nasa_compliance', {}).get('score', 0.92):.1%}</strong></p>",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 48,
      "context": "- **Score**: {results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92):.1%}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 50,
      "context": "- **Defense Industry Ready**: {results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92) >= 0.90}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 49,
      "context": "- **Status**: {'[OK] APPROVED' if results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92) >= 0.90 else '[FAIL] NEEDS IMPROVEMENT'}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 50,
      "context": "- **Defense Industry Ready**: {results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92) >= 0.90}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 49,
      "context": "- **Status**: {'[OK] APPROVED' if results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92) >= 0.90 else '[FAIL] NEEDS IMPROVEMENT'}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 37,
      "context": "min_nasa_compliance: float = 0.92  # Minimum NASA compliance required",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 272,
      "context": "min_nasa_compliance=0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 279,
      "context": "min_nasa_compliance=0.95  # Higher compliance required for defense",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 286,
      "context": "min_nasa_compliance=0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 246,
      "context": "min_nasa_compliance=config.get('min_nasa_compliance', 0.92)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 452,
      "context": "if result.nasa_compliance_score < 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 406,
      "context": "analysis_passed = result.get(\"critical_count\", 0) == 0 and result.nasa_compliance_score >= 0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 498,
      "context": "\"nasa_compliance_score\": analysis_data.get(\"nasa_compliance\", 0.92),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 499,
      "context": "\"duplication_score\": analysis_data.get(\"duplication_score\", 0.95),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 383,
      "context": "- **NASA POT10 Compliance**: {result.get('nasa_compliance_score', 0.92):.1%}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 385,
      "context": "- **Duplication Score**: {result.get(\"duplication_score\", 0.95):.2f}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 538,
      "context": "\"analysis_passed\": result.get(\"critical_count\", 0) == 0 and result.nasa_compliance_score >= 0.9,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 285,
      "context": "'min_nasa_compliance': 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 292,
      "context": "'min_nasa_compliance': 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 299,
      "context": "'min_nasa_compliance': 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 176,
      "context": "if 0.90 <= value <= 0.99:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "line_number": 176,
      "context": "if 0.90 <= value <= 0.99:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 21,
      "context": "nasa_compliance_min: float = 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 58,
      "context": "nasa_compliance_min=0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 60,
      "context": "duplication_threshold=0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 67,
      "context": "nasa_compliance_min=0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 112,
      "context": "\"nasa_compliance_min\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 114,
      "context": "\"duplication_threshold\": 0.9,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 119,
      "context": "\"nasa_compliance_min\": 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 23,
      "context": "return {\"score\": 0.92, \"passed\": True}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 177,
      "context": "metrics.factuality_p90 = 0.92  # Default to threshold",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 114,
      "context": "'factuality_p90': 0.92,  # NASA POT10 compliance",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 115,
      "context": "'coverage_p95': 0.90,     # Connascence detection",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 40,
      "context": "\"current_score\": 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 48,
      "context": "\"current\": current_data.get('nasa_compliance', {}).get('score', 0.92),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 103,
      "context": "\"min_compliance_score\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 499,
      "context": "if success_rate >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 107,
      "context": "\"overall_compliance_score\": 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 244,
      "context": "\"score\": 0.98,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 236,
      "context": "metrics.get('nasa_compliance_score', 0) >= 0.90 and",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 246,
      "context": "metrics.get('nasa_compliance_score', 0) >= 0.90 and",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 50,
      "context": "'nasa_compliance_score': 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 304,
      "context": "if nasa_status.get('score', 0) < 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 50,
      "context": "'nasa_compliance': {'value': 0.90, 'critical': True},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 210,
      "context": "'defense_ready': (nasa_status.get('score', 0) >= 0.92 and avg_compliance >= 0.90),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 210,
      "context": "'defense_ready': (nasa_status.get('score', 0) >= 0.92 and avg_compliance >= 0.90),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 347,
      "context": "'nasa_compliance_score': 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 358,
      "context": "'required_score': 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 176,
      "context": "'passing': compliance_score >= 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 177,
      "context": "'defense_threshold': compliance_score >= 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 42,
      "context": "\"nasa_compliance\": 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 34,
      "context": "'nasa_compliance_min': 0.92,     # 92% minimum",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 507,
      "context": "if overall_score < 0.9:  # 90% overall compliance threshold",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 547,
      "context": "if overall_score >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 22,
      "context": "'rule_3': {'name': 'Assertions', 'weight': 0.2, 'min_score': 0.9},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 23,
      "context": "'rule_7': {'name': 'Memory Bounds', 'weight': 0.25, 'min_score': 0.95},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 528,
      "context": "if rule_score.get('score', 1.0) < 0.9:  # Below 90% compliance",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 549,
      "context": "elif overall_score >= 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 588,
      "context": "'overall_compliant': overall_score >= 0.9,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 589,
      "context": "'compliance_level': 'excellent' if overall_score >= 0.95 else 'good' if overall_score >= 0.9 else 'needs_improvement'",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 589,
      "context": "'compliance_level': 'excellent' if overall_score >= 0.95 else 'good' if overall_score >= 0.9 else 'needs_improvement'",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 322,
      "context": "\"audit_readiness\": \"high\" if compliance_data.get(\"overall_compliance_score\", 0) > 0.9 else \"medium\"",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 15,
      "context": "parser.add_argument('--nasa-score', type=float, default=0.92, help='NASA compliance score')",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 48,
      "context": "\"defense_industry_ready\": args.nasa_score >= 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 44,
      "context": "\"quality_status\": \"excellent\" if args.nasa_score >= 0.90 else \"good\"",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 29,
      "context": "significant_change = abs(args.nasa_score - 0.92) > 0.05 or args.current_violations > 5",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 643,
      "context": "avg_compliance_score >= 0.95 and",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 644,
      "context": "defense_readiness_rate >= 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 34,
      "context": "\"nasa_compliance_score\": 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 70,
      "context": "self.DFARS_THRESHOLD = 0.95  # 95% DFARS compliance required",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 71,
      "context": "self.NASA_POT10_THRESHOLD = 0.95  # 95% NASA compliance required",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 73,
      "context": "self.AUDIT_COVERAGE_MINIMUM = 0.90  # 90% audit trail coverage",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 331,
      "context": "validation_results[\"certification_ready\"] = overall_score >= 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 332,
      "context": "validation_results[\"defense_industry_ready\"] = overall_score >= 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 338,
      "context": "if overall_score >= 0.98:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 340,
      "context": "elif overall_score >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 92,
      "context": "print_result(\"Cryptographic Operations\", \"PASS\" if crypto_score >= 0.95 else \"FAIL\", crypto_score)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 334,
      "context": "print_result(\"Overall Compliance Score\", \"PASS\" if overall_score >= 0.95 else \"FAIL\", overall_score)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 342,
      "context": "elif overall_score >= 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 206,
      "context": "print_result(\"Configuration Compliance\", \"PASS\" if config_score >= 0.9 else \"FAIL\", config_score)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 501,
      "context": "\"score\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 32,
      "context": "ASSERTION_COVERAGE_TARGET = 0.90  # 90% coverage target",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 163,
      "context": "self.defense_industry_threshold = 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 164,
      "context": "self.target_overall_compliance = 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 38,
      "context": "\"target_compliance\": 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 45,
      "context": "\"target_compliance\": 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 52,
      "context": "\"target_compliance\": 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 59,
      "context": "\"target_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 66,
      "context": "\"target_compliance\": 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 73,
      "context": "\"target_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 87,
      "context": "\"target_compliance\": 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 94,
      "context": "\"target_compliance\": 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 101,
      "context": "\"target_compliance\": 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 150,
      "context": "\"rule_1\": 0.95,  # Control flow",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 349,
      "context": "if overall_compliance >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 98,
      "context": "self.target_compliance = 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 85,
      "context": "\"rule_1\": 0.95,  # Control flow",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 518,
      "context": "\"readiness_threshold\": 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 519,
      "context": "\"compliant\": self.current_overall_compliance >= 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 768,
      "context": "if self.injection_stats.nasa_compliance_rate < 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 582,
      "context": "return min(base_success_rate + quality_bonus, 0.95)  # Max 95% success rate",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 653,
      "context": "return any(pattern in rule for pattern in critical_patterns) or overall_score >= 0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 192,
      "context": "if score >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 100,
      "context": "return compliance_score >= 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 301,
      "context": "default=0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 514,
      "context": "self.metrics.defense_industry_compliance_score >= 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 432,
      "context": "self.metrics.defense_industry_compliance_score >= 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 437,
      "context": "self.metrics.defense_industry_compliance_score >= 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 222,
      "context": "\"defense_industry_ready\": critical_violations == 0 and avg_compliance >= 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 680,
      "context": "if overall_score < 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 717,
      "context": "if overall_score < 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 951,
      "context": "if assessment_result[\"overall_score\"] >= 0.98:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 239,
      "context": "\"substantial_compliance\": 0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 240,
      "context": "\"full_compliance\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 241,
      "context": "\"defense_certified\": 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 256,
      "context": "return min(confidence, 0.95)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 318,
      "context": "if score >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 153,
      "context": "if c.status == ComplianceStatus.COMPLIANT and c.confidence > 0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 228,
      "context": "\"overall_score\": min(0.90, 0.82 + 0.008 * (base_time.day % 10)),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 237,
      "context": "\"overall_score\": min(0.98, 0.95 + 0.003 * (base_time.day % 10)),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "line_number": 246,
      "context": "\"compliance_rate\": min(0.99, 0.98 + 0.001 * (base_time.day % 10)),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 237,
      "context": "\"overall_score\": min(0.98, 0.95 + 0.003 * (base_time.day % 10)),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 246,
      "context": "\"compliance_rate\": min(0.99, 0.98 + 0.001 * (base_time.day % 10)),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 594,
      "context": "if current_score >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 263,
      "context": "confidence=0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 419,
      "context": "if compliance_score >= 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 776,
      "context": "\"current_score\": phase3_data.get(\"quantified_benefits\", {}).get(\"nasa_compliance\", {}).get(\"overall_compliance_score\", 0.98),",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 420,
      "context": "scores.append(0.95)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 421,
      "context": "elif compliance_score >= 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 108,
      "context": "'nasa_compliance': 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 110,
      "context": "'security_score': 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 290,
      "context": "if evidence.get('compliance_score', 0) < 0.95:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 375,
      "context": "\"compliance_score\": 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 525,
      "context": "{\"id\": \"RV.1\", \"name\": \"Review Software Requirements\", \"status\": \"implemented\" if nasa_score > 0.9 else \"partial\"}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 197,
      "context": "\"compliance_score\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 149,
      "context": "'compliance_threshold': 0.9,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 451,
      "context": "\"nasa_compliance\": 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 357,
      "context": "if result.pattern_compliance_score < 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 809,
      "context": "if result.pattern_compliance_score < 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 351,
      "context": "compliance_score = 0.92  # Simulated score based on Phase 4 results",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 325,
      "context": "'target_score': 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 384,
      "context": "'score': 0.90,  # Simulated",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 49,
      "context": "assert flag.min_nasa_compliance == 0.92  # Default",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 67,
      "context": "assert flag.min_nasa_compliance == 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 98,
      "context": "assert flag.min_nasa_compliance == 0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 254,
      "context": "assert feature_info.min_nasa_compliance == 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "line_number": 297,
      "context": "result = self.manager.validate_nasa_compliance(0.99)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "line_number": 300,
      "context": "assert result['current_compliance'] == 0.99",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 306,
      "context": "result = self.manager.validate_nasa_compliance(0.90)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 309,
      "context": "assert result['current_compliance'] == 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 314,
      "context": "assert violation['required_compliance'] == 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 315,
      "context": "assert violation['current_compliance'] == 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 347,
      "context": "result = self.manager.validate_nasa_compliance(0.90)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 590,
      "context": "assert sixsigma.min_nasa_compliance == 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 596,
      "context": "assert dfars.min_nasa_compliance == 0.95  # Higher for defense",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 602,
      "context": "assert supply_chain.min_nasa_compliance == 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "line_number": 630,
      "context": "assert feature.min_nasa_compliance == 0.99",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 59,
      "context": "min_nasa_compliance=0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 96,
      "context": "min_nasa_compliance=0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 134,
      "context": "'min_nasa_compliance': 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 140,
      "context": "'min_nasa_compliance': 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.93,
      "line_number": 147,
      "context": "'min_nasa_compliance': 0.93",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_93",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 283,
      "context": "'min_nasa_compliance': 0.98",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "line_number": 288,
      "context": "'min_nasa_compliance': 0.99",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "line_number": 617,
      "context": "'min_nasa_compliance': 0.99,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 686,
      "context": "'min_nasa_compliance': 0.9 + (i % 10) / 100  # Vary compliance requirements",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 774,
      "context": "self.manager.validate_nasa_compliance(0.9)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 39,
      "context": "\"compliance_score\": 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 117,
      "context": "if nasa_compliance < 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.94,
      "line_number": 233,
      "context": "\"nasa_compliance\": 0.94,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_94",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 248,
      "context": "if analysis_results['success'] and analysis_results['nasa_compliance'] >= 0.9:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 52,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 60,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.93,
      "line_number": 68,
      "context": "\"min_nasa_compliance\": 0.93",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_93",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 76,
      "context": "\"min_nasa_compliance\": 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 84,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 96,
      "context": "\"nasa_compliance_threshold\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.93,
      "line_number": 270,
      "context": "compliance_validation = feature_manager.validate_nasa_compliance(0.93)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_93",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 349,
      "context": "validation = feature_manager.validate_nasa_compliance(0.92)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.94,
      "line_number": 354,
      "context": "adequate_validation = feature_manager.validate_nasa_compliance(0.94)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_94",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.94,
      "line_number": 380,
      "context": "validation = feature_manager.validate_nasa_compliance(0.94)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_94",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.96,
      "line_number": 384,
      "context": "high_validation = feature_manager.validate_nasa_compliance(0.96)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_96",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.94,
      "line_number": 491,
      "context": "validation = feature_manager.validate_nasa_compliance(0.94)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_94",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 498,
      "context": "self.assertEqual(quality_violation[\"required_compliance\"], 0.95)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 341,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.93,
      "line_number": 347,
      "context": "\"min_nasa_compliance\": 0.93",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_93",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 432,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 460,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 467,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 230,
      "context": "\"compliance_score\": 0.90",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 379,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 548,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 615,
      "context": "\"min_nasa_compliance\": 0.92",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 295,
      "context": "nasa_compliance_score=0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 296,
      "context": "duplication_score=0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 381,
      "context": "nasa_compliance_score=0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 382,
      "context": "duplication_score=0.90,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 46,
      "context": "\"violation_id_determinism\": {\"threshold\": 0.95, \"baseline\": 0.85}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 592,
      "context": "compliance_forecaster.alert_thresholds['critical'] = 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 121,
      "context": "sample['current_metrics']['code_coverage'] = np.random.uniform(0.6, 0.95)",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 301,
      "context": "assert compliance_forecaster._get_risk_level_name(0.95) == 'critical'",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 319,
      "context": "risk_score=0.9,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.96,
      "line_number": 596,
      "context": "assert compliance_forecaster._get_risk_level_name(0.96) == 'critical'",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_96",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 320,
      "context": "component_scores={'security': 0.8, 'operational': 0.9}",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 420,
      "context": "self.assertGreaterEqual(projected_compliance, 0.90, \"Should achieve defense industry readiness\")",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 239,
      "context": "assert result.score > 0.9",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "line_number": 247,
      "context": "'compliance_score': 0.92,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 277,
      "context": "assert result.score == 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 238,
      "context": "passed=score >= 0.95,  # 95% compliance required",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 311,
      "context": "'target': 0.95",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 283,
      "context": "score=0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "line_number": 56,
      "context": "if nasa_score is not None and nasa_score < 0.90:",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "line_number": 272,
      "context": "\"current_score\": 0.95,",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "line_number": 333,
      "context": "\"nasa_compliance\": {\"overall_compliance_score\": 0.98, \"rule_2_violations_eliminated\": 2},",
      "category": "replace",
      "business_meaning": "NASA POT10 compliance threshold",
      "suggested_name": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "priority": "HIGH",
      "justification": "Regulatory compliance requirement"
    }
  ],
  "configuration_violations": [
    {
      "value": 900,
      "line_number": 38,
      "context": "\"analysis_time\": 900,  # 15 minutes",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 480,
      "line_number": 99,
      "context": "signal.alarm(480)  # 8 minute timeout for analysis",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.82,
      "line_number": 52,
      "context": "\"cache_efficiency\": 0.82,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_82",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.68,
      "line_number": 53,
      "context": "\"memory_utilization\": 0.68",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_68",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 240,
      "line_number": 31,
      "context": "], capture_output=True, text=True, timeout=240, cwd=\".\")",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 107,
      "context": "], capture_output=True, text=True, timeout=300, cwd=\".\")",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 30,
      "context": "], capture_output=True, text=True, timeout=300)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 29,
      "context": "], capture_output=True, text=True, timeout=300)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 25,
      "context": "DEFAULT_TIMEOUT_SECONDS = 300",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 4,
      "line_number": 63,
      "context": "MAX_WORKER_THREADS = 4",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 600,
      "line_number": 151,
      "context": "PARALLEL_TIMEOUT_SECONDS = 600  # 10 minutes",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 142,
      "line_number": 134,
      "context": "'io_operations': 142,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_142",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 89,
      "line_number": 135,
      "context": "'cache_hits': 89,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_89",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 11,
      "line_number": 136,
      "context": "'cache_misses': 11",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_11",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 112,
      "context": "cache_retention_hours = max(0.1, min(168.0, config.get(\"cache_ttl\", 300) / 3600))",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 124,
      "context": "def __init__(self, max_size=1000, ttl_seconds=300):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 196,
      "context": "event = self.event_queue.get(timeout=0.1)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 168.0,
      "line_number": 112,
      "context": "cache_retention_hours = max(0.1, min(168.0, config.get(\"cache_ttl\", 300) / 3600))",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_168_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 112,
      "context": "cache_retention_hours = max(0.1, min(168.0, config.get(\"cache_ttl\", 300) / 3600))",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 336,
      "context": "\"cpu_percent\": process.cpu_percent(interval=0.1),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 433,
      "context": "\"parallel\": {\"enabled\": True, \"max_workers\": 4},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1005,
      "line_number": 316,
      "context": "\"PATH_NOT_ACCESSIBLE\": 1005,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1006,
      "line_number": 317,
      "context": "\"UNSUPPORTED_FILE_TYPE\": 1006,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1007,
      "line_number": 318,
      "context": "\"TIMEOUT_ERROR\": 1007,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1008,
      "line_number": 319,
      "context": "\"MEMORY_ERROR\": 1008,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 443,
      "line_number": 458,
      "context": "443: \"network_port\",",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_443",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "line_number": 459,
      "context": "80: \"network_port\",",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_80",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 8080,
      "line_number": 599,
      "context": "\"default_port\": 8080,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300.0,
      "line_number": 59,
      "context": "timeout_seconds: float = 300.0",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.583,
      "line_number": 266,
      "context": "\"performance_improvement\": 0.583,  # 58.3% improvement",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_583",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.85,
      "line_number": 267,
      "context": "\"cache_hit_rate\": 0.85,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_85",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.75,
      "line_number": 268,
      "context": "\"parallel_efficiency\": 0.75",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_75",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.2,
      "line_number": 239,
      "context": "await asyncio.sleep(0.2)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_2",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "line_number": 254,
      "context": "await asyncio.sleep(0.3)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_3",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 25,
      "line_number": 211,
      "context": "metrics = {\"files_processed\": 25, \"linter_rules_applied\": 50}",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_25",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 211,
      "context": "metrics = {\"files_processed\": 25, \"linter_rules_applied\": 50}",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 708,
      "context": "timeout_seconds=phase_config.get('timeout', 300)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.85,
      "line_number": 600,
      "context": "return 0.85  # Mock 85% hit rate",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_85",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "line_number": 496,
      "context": "if avg_cache_hit_rate < 0.8:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.25,
      "line_number": 503,
      "context": "expected_improvement=0.25,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_25",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1800,
      "line_number": 197,
      "context": "self.maintenance_interval = 1800  # 30 minutes",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1800",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 604800,
      "line_number": 751,
      "context": "if current_time - self.storage_stats.get(\"last_vacuum\", 0) > 604800:  # 7 days",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_604800",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 46,
      "context": "max_workers: int = 4",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.583,
      "line_number": 244,
      "context": "performance_target=0.583",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_583",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 403,
      "context": "self.cleanup_interval = 300  # 5 minutes",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 143.0,
      "line_number": 999,
      "context": "\"current_value\": 143.0,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_143_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 69,
      "context": "self.max_worker_threads = self._get_config('max_worker_threads', 4)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 6,
      "line_number": 207,
      "context": "'components_loaded': 6,  # detector, classifier, metrics, reporter, fixer, cache",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_6",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 129,
      "context": "CLEANUP_INTERVAL = 300  # 5 minutes",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 600,
      "line_number": 130,
      "context": "MAX_IDLE_TIME = 600     # 10 minutes",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_600",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 246,
      "context": "time.sleep(0.001)  # 1ms backoff",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 308,
      "context": "def warm_cache(self, file_paths: List[Union[str, Path]], max_workers: int = 4):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "line_number": 429,
      "context": "if self.cache_stats[\"size_bytes\"] <= self.max_size_bytes * 0.9:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_9",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 34,
      "context": "def __init__(self, max_memory_mb: int = 50):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "line_number": 198,
      "context": "if hit_rate < 0.6:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_6",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "line_number": 200,
      "context": "elif hit_rate > 0.9:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_9",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 148,
      "context": "for key in old_entries[:50]:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 600,
      "line_number": 145,
      "context": "if hasattr(entry, 'last_accessed') and (current_time - entry.last_accessed) > 600:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_600",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 72,
      "context": "\"max_workers\": self.streaming_config.get(\"max_workers\", 4),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 75,
      "context": "self.cache_manager = CacheManager(max_memory_mb=50)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "line_number": 512,
      "context": "confidence=0.9,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_9",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 133,
      "context": "], capture_output=True, text=True, timeout=300)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1.8,
      "line_number": 236,
      "context": "'performance_overhead_target': 1.8,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 238,
      "context": "'max_workers': 4,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 239,
      "context": "'timeout_seconds': 300",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1.8,
      "line_number": 339,
      "context": "'performance_overhead_target': 1.8,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 341,
      "context": "'max_workers': 4,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 342,
      "context": "'timeout_seconds': 300,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1.8,
      "line_number": 455,
      "context": "'performance_overhead_target': sc_config.get('performance_overhead_target', 1.8),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 457,
      "context": "'max_workers': sc_config.get('max_workers', 4),",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 458,
      "context": "'timeout_seconds': sc_config.get('timeout_seconds', 300)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1.8,
      "line_number": 551,
      "context": "'performance_overhead_target': sc_config.get('performance_overhead_target', 1.8),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 553,
      "context": "'max_workers': sc_config.get('max_workers', 4),",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 4,
      "line_number": 359,
      "context": "max_workers = sc_config.get('max_workers', 4)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 366,
      "context": "timeout = sc_config.get('timeout_seconds', 300)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 600,
      "line_number": 367,
      "context": "if timeout > 600:  # 10 minutes",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 280,
      "context": "cmd, capture_output=True, text=True, env=env, timeout=300",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 157,
      "context": "cmd, capture_output=True, text=True, env=env, timeout=300",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 187,
      "context": "cmd, capture_output=True, text=True, env=env, timeout=300",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 4,
      "line_number": 53,
      "context": "self.max_workers = config.get('max_workers', 4)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 54,
      "context": "self.timeout_seconds = config.get('timeout_seconds', 300)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 140,
      "context": "cache_ttl: int = 300",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 83,
      "context": "def __init__(self, ttl_seconds: int = 300, max_size: int = 100):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 505,
      "context": "\"nodes_per_second\": profile[\"nodes_visited\"] / max((end_time - profile[\"start_time\"]), 0.001),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 74,
      "context": "def __init__(self, max_memory: int = 50 * 1024 * 1024):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 70,
      "line_number": 289,
      "context": "if cache_stats[\"hit_rate_percent\"] < 70:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_70",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 55,
      "context": "print(\"=\" * 50)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 79,
      "context": "assert 0.1 <= memory_sample_interval <= 10.0, \"Interval must be 0.1-10.0 seconds\"",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15.0,
      "line_number": 541,
      "context": "phase_improvements['phase_3_5_caching_optimization'] = 15.0  # Conservative estimate",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_15_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 6,
      "line_number": 192,
      "context": "parallel_workers=6,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_6",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90.0,
      "line_number": 236,
      "context": "file_hit_rate >= 90.0 and  # File cache: 90%+ hit rate",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_90_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 75.0,
      "line_number": 237,
      "context": "ast_hit_rate >= 75.0 and   # AST cache: 75%+ hit rate",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_75_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "line_number": 238,
      "context": "warming_results['files_warmed'] >= 20 and  # At least 20 files warmed",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 85.0,
      "line_number": 246,
      "context": "target_improvement_percent=85.0,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_85_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15.0,
      "line_number": 324,
      "context": "warming_time < 15.0 and                # <15 seconds warming time",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_15_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 25,
      "line_number": 355,
      "context": "streaming_files = self.test_files[:25]  # 25 files for streaming test",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_25",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 466,
      "context": "for file_path in self.test_files[:50]:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90,
      "line_number": 472,
      "context": "if current_usage.get('utilization_percent', 0) > 90:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_90",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90,
      "line_number": 527,
      "context": "if file_hit_rate > 90:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_90",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 85,
      "line_number": 534,
      "context": "if ast_hit_rate > 85:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_85",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20.0,
      "line_number": 439,
      "context": "target_improvement_percent=20.0,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 40,
      "line_number": 271,
      "context": "priority_files=self.test_files[:40],  # More files for better testing",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_40",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 371,
      "context": "await asyncio.sleep(0.001)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.0005,
      "line_number": 403,
      "context": "await asyncio.sleep(0.0005)  # Faster with caching",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_0005",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 75,
      "line_number": 528,
      "context": "cache_improvements.append(file_hit_rate - 75)  # Baseline 75%",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_75",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 70,
      "line_number": 535,
      "context": "cache_improvements.append(ast_hit_rate - 70)  # Baseline 70%",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_70",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 86,
      "context": "parallel_workers: int = 4",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 87,
      "context": "batch_size: int = 50",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 931,
      "context": "parallel_workers=4,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "line_number": 955,
      "context": "if file_results.get(\"avg_hit_rate_percent\", 100) < 80:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_80",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 961,
      "context": "if file_results.get(\"avg_access_time_ms\", 0) > 50:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 70,
      "line_number": 971,
      "context": "if ast_results.get(\"avg_hit_rate_percent\", 100) < 70:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_70",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 368,
      "context": "await asyncio.sleep(0.01)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "line_number": 930,
      "context": "priority_files=test_files[:20],  # Prioritize first 20 files",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "line_number": 738,
      "context": "elif queue_utilization > 0.9:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_9",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 31.7,
      "line_number": 892,
      "context": "\"memory_usage_reduction_percent\": 31.7,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_31_7",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 73.4,
      "line_number": 893,
      "context": "\"thread_contention_reduction_percent\": 73.4,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_73_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 257.8,
      "line_number": 904,
      "context": "\"detector_initialization_time_ms\": 257.8,  # Reduced from 453.2ms",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_257_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "line_number": 641,
      "context": "if queue.current_size() < self.config.max_pool_size * 0.8:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 655,
      "context": "if pooled_detector and current_time - pooled_detector.last_used > 300:  # 5 minutes idle",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 551,
      "context": "for future in as_completed(future_to_task, timeout=300):  # 5 minute timeout",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300.0,
      "line_number": 67,
      "context": "pool_cleanup_interval: float = 300.0):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 75,
      "context": "assert 4 <= max_shared_pools <= 64, \"max_shared_pools must be 4-64\"",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80.0,
      "line_number": 601,
      "context": "if self._calculate_data_sharing_efficiency() > 80.0:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_80_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 70.0,
      "line_number": 661,
      "context": "if cache_efficiency < 70.0:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_70_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 673,
      "context": "if stats.get(\"pool_utilization\", 0.0) < 0.5:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 178,
      "context": "pool.reference_count < 4):  # Max 4 files per pool",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.4,
      "line_number": 578,
      "context": "return (utilization * 0.4 + cache_efficiency * 0.6) * 100.0",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "line_number": 578,
      "context": "return (utilization * 0.4 + cache_efficiency * 0.6) * 100.0",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_6",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.005,
      "line_number": 295,
      "context": "len(pool.violation_patterns_cache) * 0.005  # ~5KB per pattern",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_005",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 294,
      "context": "len(pool.analysis_results_cache) * 0.01 +  # ~10KB per result",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 292,
      "context": "len(pool.ast_cache) * 0.1 +  # ~100KB per AST",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.05,
      "line_number": 293,
      "context": "len(pool.source_cache) * 0.05 +  # ~50KB per source",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_05",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 95.0,
      "line_number": 240,
      "context": "improvement_percent = min(warming_effectiveness, 95.0)  # Based on real measurements",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_95_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15.0,
      "line_number": 1097,
      "context": "avg_miss_time = 15.0  # 15ms average for cache miss",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_15_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 25,
      "line_number": 220,
      "context": "batch_size=25,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_25",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "line_number": 292,
      "context": "success = optimized_hit_rate >= target_hit_rate * 0.9  # 90% of target",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_9",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 609,
      "context": "for future in as_completed(futures, timeout=300):  # 5 minute timeout",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 98.0,
      "line_number": 1027,
      "context": "return min(improved_rate, 98.0)  # Cap at realistic maximum",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_98_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "line_number": 170,
      "context": "sample_files = project_files[:20]  # Sample for baseline",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20.0,
      "line_number": 253,
      "context": "baseline_time_ms=expected_files * 20.0,  # Estimated cold cache time",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 217,
      "context": "priority_files=project_files[:50],  # Top 50 files",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2000,
      "line_number": 405,
      "context": "current_time = baseline_metrics.get(\"ast_cache\", {}).get(\"baseline_parse_time_ms\", 2000)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_2000",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 597,
      "context": "speedup_factor = sequential_equivalent / max(parallel_time, 0.001)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 282,
      "context": "speedup = sequential_time / max(parallel_time, 0.001)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.2,
      "line_number": 310,
      "context": "\"parallel_processing_effective\": overall_speedup > 1.2,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_2",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 847,
      "context": "time.sleep(0.5)  # Sample every 500ms",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50.0,
      "line_number": 863,
      "context": "if overall_improvement >= 50.0:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 40,
      "line_number": 418,
      "context": "streaming_files = self.test_files[:40]  # Use 40 files for streaming test",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_40",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15.0,
      "line_number": 508,
      "context": "time_improvement >= 15.0 and       # 15%+ time improvement",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_15_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "line_number": 510,
      "context": "len(optimized_operations) >= len(baseline_operations) * 0.9  # Process most files",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_9",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 511,
      "context": "wait_time_std = (sum((x - wait_time_avg) ** 2 for x in wait_times) / len(wait_times)) ** 0.5",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 552,
      "context": "assert 0.5 <= monitoring_interval <= 60.0, \"monitoring_interval must be 0.5-60 seconds\"",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 25.0,
      "line_number": 125,
      "context": "\"critical\": 25.0 / sensitivity,   # 25ms wait time",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_25_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50.0,
      "line_number": 126,
      "context": "\"emergency\": 50.0 / sensitivity   # 50ms wait time",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.7,
      "line_number": 134,
      "context": "\"warning\": 0.7 / sensitivity,     # 70% pool utilization",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_7",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "line_number": 135,
      "context": "\"critical\": 0.9 / sensitivity,    # 90% pool utilization",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_9",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.98,
      "line_number": 136,
      "context": "\"emergency\": 0.98 / sensitivity   # 98% pool utilization",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_98",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80.0,
      "line_number": 425,
      "context": "elif metrics.cpu_usage_percent > 80.0 and metrics.active_threads > 8:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_80_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "line_number": 901,
      "context": "for i in range(20):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15,
      "line_number": 910,
      "context": "if i < 15:  # Build baseline first",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_15",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 925,
      "context": "await asyncio.sleep(0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 911,
      "context": "await asyncio.sleep(0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 75.0,
      "line_number": 1008,
      "context": "metrics.buffer_utilization_percent = 75.0  # Simulated",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_75_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "line_number": 1049,
      "context": "if efficiency < 0.8:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "line_number": 966,
      "context": "metrics.processing_velocity = rate * 0.8  # 80% efficiency",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90.0,
      "line_number": 967,
      "context": "metrics.buffer_utilization_percent = min(90.0, rate * 2)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_90_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 965,
      "context": "metrics.stream_processing_latency_ms = 10.0 + rate * 0.5",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 968,
      "context": "metrics.incremental_update_time_ms = 5.0 + rate * 0.1",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 986,
      "context": "await asyncio.sleep(0.001)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 993,
      "context": "await asyncio.sleep(0.001)  # 1ms pause",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 206,
      "context": "profiling_interval: float = 0.5):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 215,
      "context": "assert 0.1 <= profiling_interval <= 5.0, \"profiling_interval must be 0.1-5.0 seconds\"",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300.0,
      "line_number": 539,
      "context": "assert 5.0 <= test_duration_seconds <= 300.0, \"test_duration must be 5-300 seconds\"",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "line_number": 679,
      "context": "if efficiency > 0.8:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "line_number": 752,
      "context": "elif efficiency < 80:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_80",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "line_number": 681,
      "context": "elif efficiency > 0.6:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_6",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.4,
      "line_number": 683,
      "context": "elif efficiency > 0.4:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 577,
      "context": "time.sleep(0.001)  # 1ms work simulation",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 95,
      "context": "def __init__(self, max_threads: int = 4, max_memory_mb: int = 512):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1440,
      "line_number": 88,
      "context": "assert 5 <= metrics_retention_minutes <= 1440, \"Retention must be 5min-24hrs\"",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1440",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300.0,
      "line_number": 90,
      "context": "assert 5.0 <= health_check_interval_seconds <= 300.0, \"Health interval must be 5s-5min\"",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50.0,
      "line_number": 465,
      "context": "if cache_hit_rate < 50.0:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 85,
      "line_number": 574,
      "context": "if memory_usage_percent > 85:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_85",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 376,
      "context": "cpu_percent = psutil.cpu_percent(interval=0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 5000,
      "line_number": 96,
      "context": "max_partial_results: int = 5000,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_5000",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 100000,
      "line_number": 107,
      "context": "assert 100 <= max_partial_results <= 100000, \"max_partial_results must be 100-100000\"",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_100000",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 100000,
      "line_number": 108,
      "context": "assert 100 <= max_dependency_nodes <= 100000, \"max_dependency_nodes must be 100-100000\"",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_100000",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 109,
      "context": "assert 0.1 <= cache_retention_hours <= 168.0, \"cache_retention_hours must be 0.1-168\"",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 168.0,
      "line_number": 109,
      "context": "assert 0.1 <= cache_retention_hours <= 168.0, \"cache_retention_hours must be 0.1-168\"",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_168_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 239,
      "context": "max_workers: int = 4,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50000,
      "line_number": 252,
      "context": "assert 10 <= max_queue_size <= 50000, \"max_queue_size must be 10-50000\"",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50000",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 100000,
      "line_number": 254,
      "context": "assert 100 <= cache_size <= 100000, \"cache_size must be 100-100000\"",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_100000",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 408,
      "context": "'max_analysis_time_seconds': 300,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 409,
      "context": "'parallel_workers': 4,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 166,
      "context": "max_analysis_time_seconds=analysis_data.get('max_analysis_time_seconds', 300),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 167,
      "context": "parallel_workers=analysis_data.get('parallel_workers', 4),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.7,
      "line_number": 257,
      "context": "if 0.7 <= value <= 0.9:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_7",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "line_number": 257,
      "context": "if 0.7 <= value <= 0.9:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_9",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "line_number": 412,
      "context": "prediction_probability = 0.3 + (0.4 * learning_factor)  # 30% -> 70%",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_3",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "line_number": 415,
      "context": "actual_hit = random.random() < 0.6  # 60% actual hit rate",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_6",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 441,
      "context": "\"target_hit_rate\": 0.5,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.005,
      "line_number": 35,
      "context": "time.sleep(random.uniform(0.005, 0.020))  # 5-20ms",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_005",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.02,
      "line_number": 35,
      "context": "time.sleep(random.uniform(0.005, 0.020))  # 5-20ms",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_02",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 176,
      "context": "with ThreadPoolExecutor(max_workers=50) as executor:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50.0,
      "line_number": 411,
      "context": "learning_factor = min(1.0, i / 50.0)  # Improves over first 50 operations",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.4,
      "line_number": 412,
      "context": "prediction_probability = 0.3 + (0.4 * learning_factor)  # 30% -> 70%",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 442,
      "context": "\"exceeds_target\": cache_hit_rate > 0.5",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 245,
      "context": "max_workers: int = 4) -> Dict:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 350,
      "context": "def run(self, max_files: Optional[int] = None, max_workers: int = 4):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 395,
      "context": "parser.add_argument('--workers', type=int, default=4, help='Number of parallel workers')",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "line_number": 843,
      "context": "print(\"=\" * 80)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_80",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 86,
      "context": "self.max_workers = max_workers or min(os.cpu_count() or 4, 8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1800,
      "line_number": 211,
      "context": "timeout=1800  # 30 minutes timeout",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 13,
      "line_number": 61,
      "context": "(\"src/intelligence/data_pipeline/streaming/failover_manager.py\", 13, \"unexpected indent\"),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_13",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15,
      "line_number": 625,
      "context": "return random.randint(5, 15)  # Number of files formatted",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_15",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 141,
      "context": "'timeout_seconds': 300,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.5,
      "line_number": 512,
      "context": "await asyncio.sleep(0.5)  # Simulate API call delay",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "line_number": 554,
      "context": "await asyncio.sleep(0.3)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_3",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "line_number": 660,
      "context": "await asyncio.sleep(0.8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 697,
      "context": "await asyncio.sleep(0.5)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.5,
      "line_number": 798,
      "context": "await asyncio.sleep(1.5)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.5,
      "line_number": 898,
      "context": "await asyncio.sleep(1.5)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "line_number": 950,
      "context": "await asyncio.sleep(0.8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 1066,
      "context": "await asyncio.sleep(0.5)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "line_number": 1078,
      "context": "await asyncio.sleep(0.3)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_3",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15,
      "line_number": 302,
      "context": "elif failure_rate >= 15 or failure_count >= 3:",
      "category": "config",
      "business_meaning": "Retry configuration",
      "suggested_name": "DEFAULT_RETRY_COUNT",
      "priority": "LOW",
      "justification": "Operational parameter that may need tuning"
    },
    {
      "value": 202,
      "line_number": 763,
      "context": "if response.status_code in [200, 201, 202]:",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 15,
      "line_number": 134,
      "context": "('mece', 15),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_15",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15,
      "line_number": 135,
      "context": "('cache', 15),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_15",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 120,
      "context": "time.sleep(duration * 0.01)  # Scale down for simulation",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 6,
      "line_number": 149,
      "context": "with concurrent.futures.ThreadPoolExecutor(max_workers=6) as executor:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_6",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "line_number": 87,
      "context": "if timeout_val <= 20:",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 50,
      "line_number": 192,
      "context": "cache = FileContentCache(max_memory=50 * 1024 * 1024)  # 50MB",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 35,
      "line_number": 89,
      "context": "elif timeout_val <= 35:",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 96.7,
      "line_number": 96,
      "context": "if overall_hit_rate >= 96.7:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_96_7",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 42,
      "line_number": 58,
      "context": "print(\"-\" * 42)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_42",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 43.0,
      "line_number": 216,
      "context": "'Memory Efficiency': {'value': 43.0, 'unit': '% improvement', 'target': 40.0},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_43_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 40.0,
      "line_number": 216,
      "context": "'Memory Efficiency': {'value': 43.0, 'unit': '% improvement', 'target': 40.0},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_40_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 73.0,
      "line_number": 217,
      "context": "'Thread Contention Reduction': {'value': 73.0, 'unit': '% reduction', 'target': 70.0},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_73_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 70.0,
      "line_number": 217,
      "context": "'Thread Contention Reduction': {'value': 73.0, 'unit': '% reduction', 'target': 70.0},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_70_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 97.4,
      "line_number": 218,
      "context": "'Cache Hit Rate': {'value': 97.4, 'unit': '% hit rate', 'target': 96.7},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_97_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 96.7,
      "line_number": 218,
      "context": "'Cache Hit Rate': {'value': 97.4, 'unit': '% hit rate', 'target': 96.7},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_96_7",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 6482.0,
      "line_number": 219,
      "context": "'Aggregation Throughput': {'value': 6482.0, 'unit': ' violations/sec', 'target': 1000.0},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_6482_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 58.3,
      "line_number": 220,
      "context": "'Cumulative Improvement': {'value': 58.3, 'unit': '% total gain', 'target': 50.0}",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_58_3",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50.0,
      "line_number": 220,
      "context": "'Cumulative Improvement': {'value': 58.3, 'unit': '% total gain', 'target': 50.0}",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 188,
      "context": "with concurrent.futures.ThreadPoolExecutor(max_workers=50) as executor:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 95.2,
      "line_number": 65,
      "context": "'file_cache': [MockCacheMetrics(95.2, 1200, 80)],",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_95_2",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1200,
      "line_number": 65,
      "context": "'file_cache': [MockCacheMetrics(95.2, 1200, 80)],",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1200",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "line_number": 65,
      "context": "'file_cache': [MockCacheMetrics(95.2, 1200, 80)],",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_80",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 97.8,
      "line_number": 66,
      "context": "'ast_cache': [MockCacheMetrics(97.8, 800, 20)],",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_97_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 800,
      "line_number": 66,
      "context": "'ast_cache': [MockCacheMetrics(97.8, 800, 20)],",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_800",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "line_number": 66,
      "context": "'ast_cache': [MockCacheMetrics(97.8, 800, 20)],",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 99.1,
      "line_number": 67,
      "context": "'memory_cache': [MockCacheMetrics(99.1, 2000, 18)]",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_99_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2000,
      "line_number": 67,
      "context": "'memory_cache': [MockCacheMetrics(99.1, 2000, 18)]",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_2000",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 18,
      "line_number": 67,
      "context": "'memory_cache': [MockCacheMetrics(99.1, 2000, 18)]",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_18",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 134,
      "context": "capture_output=True, text=True, timeout=300)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 180,
      "line_number": 143,
      "context": "capture_output=True, text=True, timeout=180)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 120,
      "line_number": 162,
      "context": "capture_output=True, text=True, timeout=120)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 4,
      "line_number": 174,
      "context": "with ThreadPoolExecutor(max_workers=4) as executor:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 180,
      "line_number": 295,
      "context": "result = subprocess.run(cmd, capture_output=True, text=True, timeout=180)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 50.0,
      "line_number": 46,
      "context": "\"cache_performance\": 50.0,  # 50% improvement in cache hit rates",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 45.0,
      "line_number": 47,
      "context": "\"parallel_processing\": 45.0,  # 45% reduction in processing time",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_45_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "line_number": 164,
      "context": "await asyncio.sleep(baseline_time * 0.3)  # 70% improvement simulation",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_3",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "line_number": 60,
      "context": "CONNECTION_POOL_SIZE = 20",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 61,
      "context": "WORKER_THREAD_COUNT = 4",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "line_number": 217,
      "context": "pattern.confidence = max(0.3, pattern.confidence - 0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_3",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 217,
      "context": "pattern.confidence = max(0.3, pattern.confidence - 0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 160,
      "context": "metric.cpu_percent = process.cpu_percent(interval=0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 212,
      "context": "cpu_percent = process.cpu_percent(interval=0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 176,
      "context": "cache_key = f\"{project_path}_{int(time.time() // 300)}\"  # 5-minute cache",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 1003,
      "context": "{\"thread_id\": 3, \"memory_location\": \"pool_size\", \"access_type\": \"write\", \"value\": 4}",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 1015,
      "context": "{\"thread_id\": 4, \"memory_location\": \"detector_state\", \"access_type\": \"write\", \"value\": \"available\"},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 5000,
      "line_number": 242,
      "context": "self.pool_operations: deque = deque(maxlen=5000)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_5000",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 865,
      "context": "with concurrent.futures.ThreadPoolExecutor(max_workers=4) as executor:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "line_number": 470,
      "context": "return {'critical': 0.9, 'high': 0.7, 'medium': 0.4, 'low': 0.2}.get(violation.severity, 0.3)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_3",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "line_number": 470,
      "context": "return {'critical': 0.9, 'high': 0.7, 'medium': 0.4, 'low': 0.2}.get(violation.severity, 0.3)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_9",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.7,
      "line_number": 470,
      "context": "return {'critical': 0.9, 'high': 0.7, 'medium': 0.4, 'low': 0.2}.get(violation.severity, 0.3)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_7",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.4,
      "line_number": 470,
      "context": "return {'critical': 0.9, 'high': 0.7, 'medium': 0.4, 'low': 0.2}.get(violation.severity, 0.3)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.2,
      "line_number": 470,
      "context": "return {'critical': 0.9, 'high': 0.7, 'medium': 0.4, 'low': 0.2}.get(violation.severity, 0.3)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_2",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 19,
      "context": "timeout_per_tool: int = 300  # seconds",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 124,
      "context": "'timeout_per_tool': 300",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1800,
      "line_number": 338,
      "context": "\"resolution_timeout\": 1800,  # 30 minutes",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 4,
      "line_number": 69,
      "context": "max_workers=self.config.get(\"max_test_workers\", 4)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 919,
      "context": "await asyncio.sleep(0.5)  # Simulate deployment time",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1800,
      "line_number": 71,
      "context": "self.resolution_timeout = self.config.get(\"resolution_timeout\", 1800)  # 30 minutes",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 600,
      "line_number": 765,
      "context": "\"resolution_timeout\": 600",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 30000,
      "line_number": 223,
      "context": "new_timeout = 30000  # 30 seconds",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.9,
      "line_number": 94,
      "context": "success_rate=0.90,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 4,
      "line_number": 62,
      "context": "max_workers: int = 4):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 173,
      "context": "timeout=300  # 5 minute timeout",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.95,
      "line_number": 245,
      "context": "def calculate_confidence_interval(data: List[float], confidence: float = 0.95) -> Tuple[float, float]:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_95",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 1034,
      "context": "'slow_detector': lambda *args, **kwargs: (time.sleep(0.1), {'result': 'slow'})[1],",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.85,
      "line_number": 809,
      "context": "cache_efficiency=0.85,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_85",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.65,
      "line_number": 810,
      "context": "memory_usage=0.65,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_65",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.008,
      "line_number": 811,
      "context": "total_overhead=0.008",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_008",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 674,
      "context": "if cache_efficiency < 0.5:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.85,
      "line_number": 698,
      "context": "if load['memory'] > 0.85:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_85",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 874,
      "context": "time.sleep(0.1)  # Simulate work",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.05,
      "line_number": 879,
      "context": "time.sleep(0.05)  # Simulate lighter work",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_05",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 903,
      "context": "adaptive_results = pool.execute_adaptive(configs, target_overhead=0.01)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 857,
      "context": "time.sleep(0.01)  # 10ms work",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 861,
      "context": "time.sleep(0.1)  # 100ms work",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 865,
      "context": "time.sleep(0.5)  # 500ms work",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 637,
      "context": "time.sleep(0.001)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 467,
      "context": "self.max_workers = max_workers or min(32, (psutil.cpu_count() or 1) + 4)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 677,
      "context": "time.sleep(0.001)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 371,
      "context": "time.sleep(0.001)  # 1ms idle sleep",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 393,
      "context": "time.sleep(0.1)  # Brief recovery pause",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.05,
      "line_number": 29,
      "context": "time.sleep(0.05)  # 50ms simulated processing",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_05",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.03,
      "line_number": 43,
      "context": "time.sleep(0.03)  # 30ms simulated processing",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_03",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.03,
      "line_number": 50,
      "context": "\"analysis_time\": 0.03,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_03",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.08,
      "line_number": 71,
      "context": "time.sleep(0.08)  # 80ms simulated processing",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_08",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.12,
      "line_number": 85,
      "context": "time.sleep(0.12)  # 120ms simulated processing",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_12",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.07,
      "line_number": 113,
      "context": "time.sleep(0.07)  # 70ms simulated processing",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_07",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "line_number": 395,
      "context": "if np.random.random() < 0.3:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_3",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.02,
      "line_number": 397,
      "context": "time.sleep(0.02)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_02",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "line_number": 423,
      "context": "for _ in range(20):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.234,
      "line_number": 47,
      "context": "{\"function\": \"data_processor\", \"cpu_time\": 0.234, \"memory_mb\": 45.2},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_234",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 45.2,
      "line_number": 47,
      "context": "{\"function\": \"data_processor\", \"cpu_time\": 0.234, \"memory_mb\": 45.2},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_45_2",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.456,
      "line_number": 48,
      "context": "{\"function\": \"network_handler\", \"io_wait\": 0.456, \"requests\": 1024}",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_456",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 257,
      "context": "results = pool.execute_adaptive(detector_configs, target_overhead=0.01)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.7,
      "line_number": 516,
      "context": "cache_hit_rate = 0.7  # Would get from actual cache metrics",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_7",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 379,
      "context": "min_interval = math.log(exec_count + 1) * 0.1  # Logarithmic backoff",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 602,
      "context": "max_threads=4,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 603,
      "context": "max_concurrent_detectors=4,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 541,
      "context": "cache_size = max(1000, int(base_cache_size * 0.5))",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 536,
      "context": "optimal_concurrency = max(1, int(optimal_concurrency * 0.5))",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 23,
      "line_number": 558,
      "context": "\"vpn_connections\": 23",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_23",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 156,
      "context": "if level.value >= 4:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 263,
      "context": "await self.redis.setex(cache_key, 300, serialized)  # 5 min cache",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 30,
      "context": "flush_interval: float = 0.1  # 100ms",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.05,
      "line_number": 31,
      "context": "max_latency: float = 0.05   # 50ms target",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_05",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 41,
      "context": "processing_threads: int = 4",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 120,
      "line_number": 213,
      "context": "await asyncio.sleep(120)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_120",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50.0,
      "line_number": 363,
      "context": "collector.record_processing_time(\"test_comp\", \"sample_op\", 50.0 + i, True)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 364,
      "context": "await asyncio.sleep(0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 126,
      "context": "def __init__(self, max_size: int = 10000, ttl_seconds: int = 300):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 5000,
      "line_number": 181,
      "context": "def __init__(self, max_size: int = 5000, ttl_seconds: int = 60):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_5000",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2.1,
      "line_number": 434,
      "context": "time.sleep(2.1)  # Wait for TTL expiration",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_2_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.75,
      "line_number": 442,
      "context": "test_prediction = {\"prediction\": 0.75, \"confidence\": 0.8}",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_75",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "line_number": 442,
      "context": "test_prediction = {\"prediction\": 0.75, \"confidence\": 0.8}",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 453,
      "context": "test_features = np.random.randn(50)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 40,
      "line_number": 413,
      "context": "print(\"=\" * 40)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_40",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 304,
      "context": "self.l1_cache = LRUCache(max_size=l1_size, default_ttl=300)  # 5 min TTL",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 362,
      "context": "ttl_seconds=config.get('prediction_cache_ttl', 300)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 5000,
      "line_number": 366,
      "context": "max_size=config.get('feature_cache_size', 5000),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_5000",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 596,
      "context": "def __init__(self, batch_size: int = 32, max_wait_ms: int = 50):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 277,
      "context": "if not self.request_queue.put(request, timeout=0.1):",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.1,
      "line_number": 531,
      "context": "request = self.request_queue.get(timeout=0.1)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.01,
      "line_number": 607,
      "context": "request = inference_engine.request_queue.get(timeout=0.01)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1.96,
      "line_number": 469,
      "context": "lower_bound = predictions - 1.96 * risk * (1 - confidence)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_96",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.96,
      "line_number": 470,
      "context": "upper_bound = predictions + 1.96 * risk * (1 - confidence)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_96",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 54,
      "context": "nn.Conv2d(out_channels, out_channels // 4, 1),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 140,
      "context": "nn.Linear(planes, planes // 4),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 204,
      "context": "\"timeout_seconds\": 300",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 120,
      "line_number": 224,
      "context": "\"timeout_seconds\": 120",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 24,
      "context": "timeout_seconds: int = 300",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 144,
      "context": "timeout: int = 300  # seconds",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 4,
      "line_number": 58,
      "context": "worker_threads: int = 4",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "line_number": 59,
      "context": "connection_pool_size: int = 20",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 371,
      "context": "time.sleep(0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 343,
      "context": "with ThreadPoolExecutor(max_workers=4) as executor:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.2,
      "line_number": 226,
      "context": "risk_result.var *= 1.2  # 20% buffer",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_2",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.2,
      "line_number": 227,
      "context": "risk_result.cvar *= 1.2",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_2",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 424,
      "context": "await asyncio.sleep(0.5)  # Simulate TouchID delay",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.2,
      "line_number": 192,
      "context": "return await asyncio.wait_for(self.broker.get_positions(), timeout=0.2)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.3,
      "line_number": 214,
      "context": "timeout=0.3",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.999,
      "line_number": 72,
      "context": "self.sla_target = self.config.get('sla_target', 0.999)  # 99.9% default",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_999",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 17280,
      "line_number": 87,
      "context": "lambda: deque(maxlen=self.config.get('max_samples', 17280))  # 24h at 5s intervals",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_17280",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 95,
      "line_number": 261,
      "context": "if 'disk_usage' in failure_context and failure_context['disk_usage'] > 95:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_95",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 900,
      "line_number": 121,
      "context": "SESSION_TIMEOUT = 900  # 15 minutes",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 760,
      "context": "await asyncio.sleep(300)  # Run every 5 minutes",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 384,
      "line_number": 396,
      "context": "key_file.chmod(0o600)  # Restrict permissions",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_384",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90,
      "line_number": 407,
      "context": "return intervals.get(classification, 90 * 24 * 3600)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_90",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 659,
      "context": "monitoring_interval: int = 300) -> bool:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 100,
      "context": "\"drift_detection_interval\": 300,  # 5 minutes",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 900,
      "line_number": 504,
      "context": "\"timeout\": 900",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 900,
      "line_number": 197,
      "context": "\"timeout\": 900",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 21600,
      "line_number": 380,
      "context": "discovery_interval = 21600  # 6 hours",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_21600",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1800,
      "line_number": 143,
      "context": "\"assessment_interval\": 1800,  # 30 minutes",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1800",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1800,
      "line_number": 270,
      "context": "\"update_interval\": 1800,  # More frequent updates for commercial feeds",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1800",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 281,
      "context": "\"update_interval\": 300,  # 5 minutes for internal feeds",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 133,
      "context": "self.executor = ThreadPoolExecutor(max_workers=4)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 6,
      "line_number": 222,
      "context": "with ThreadPoolExecutor(max_workers=6) as executor:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_6",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90,
      "line_number": 32,
      "context": "key_rotation_interval: int = 90  # days",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_90",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 72,
      "line_number": 145,
      "context": "self.notification_timeout = timedelta(hours=72)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 249,
      "context": "\"emergency_escalation_delay\": 300,  # 5 minutes",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 900,
      "line_number": 250,
      "context": "\"critical_escalation_delay\": 900,   # 15 minutes",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_900",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1800,
      "line_number": 1061,
      "context": "time.sleep(1800)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1800",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 928,
      "context": "time.sleep(0.001)  # 1ms baseline",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 935,
      "context": "time.sleep(0.001 + (claimed_overhead / 100 * 0.001))  # Add claimed overhead",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 935,
      "context": "time.sleep(0.001 + (claimed_overhead / 100 * 0.001))  # Add claimed overhead",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 262,
      "context": "await asyncio.sleep(300)  # Check every 5 minutes",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 120,
      "line_number": 294,
      "context": "await asyncio.sleep(120)  # Check every 2 minutes",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_120",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 600,
      "line_number": 345,
      "context": "await asyncio.sleep(600)  # Check every 10 minutes",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_600",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 900,
      "line_number": 371,
      "context": "await asyncio.sleep(900)  # Check every 15 minutes",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_900",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 236,
      "context": "await asyncio.sleep(300)  # Wait longer on error",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 600,
      "line_number": 266,
      "context": "await asyncio.sleep(600)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_600",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 298,
      "context": "await asyncio.sleep(300)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 900,
      "line_number": 349,
      "context": "await asyncio.sleep(900)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_900",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1200,
      "line_number": 375,
      "context": "await asyncio.sleep(1200)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1200",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1800,
      "line_number": 404,
      "context": "await asyncio.sleep(1800)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1800",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 367,
      "context": "async def _run_command(self, cmd: List[str], timeout: int = 300, cwd: Path = None) -> subprocess.CompletedProcess:",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 180,
      "line_number": 82,
      "context": "\"timeout\": 180,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 120,
      "line_number": 87,
      "context": "\"timeout\": 120,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 102,
      "context": "\"session_timeout\": 300",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.5,
      "line_number": 142,
      "context": "return 0.5, components",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.95,
      "line_number": 181,
      "context": "\"hit_rate\": min(0.95, 0.85 + variance),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_95",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.98,
      "line_number": 182,
      "context": "\"efficiency\": min(0.98, 0.92 + variance)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_98",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.8,
      "line_number": 185,
      "context": "\"analysis_speed\": 1.8 * (1 + variance),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.4,
      "line_number": 186,
      "context": "\"memory_efficiency\": 1.4 * (1 - variance),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2.1,
      "line_number": 187,
      "context": "\"cache_effectiveness\": 2.1 * (1 + variance)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_2_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 404,
      "context": "time.sleep(300)  # 5 minute retry on error",
      "category": "config",
      "business_meaning": "Retry configuration",
      "suggested_name": "DEFAULT_RETRY_COUNT",
      "priority": "LOW",
      "justification": "Operational parameter that may need tuning"
    },
    {
      "value": 0.85,
      "line_number": 181,
      "context": "\"hit_rate\": min(0.95, 0.85 + variance),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_85",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.92,
      "line_number": 182,
      "context": "\"efficiency\": min(0.98, 0.92 + variance)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_92",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "line_number": 71,
      "context": "file_weight: float = 0.6,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_6",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.4,
      "line_number": 72,
      "context": "incremental_weight: float = 0.4) -> CacheHealthMetrics:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 149,
      "context": "if combined_hit_rate < 0.5:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "line_number": 155,
      "context": "if combined_memory_utilization > 0.9:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_9",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.7,
      "line_number": 151,
      "context": "elif combined_hit_rate < 0.7:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_7",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "line_number": 157,
      "context": "elif combined_memory_utilization < 0.3:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_3",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.2,
      "line_number": 164,
      "context": "if file_hit_rate < incremental_hit_rate - 0.2:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_2",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.2,
      "line_number": 166,
      "context": "elif incremental_hit_rate < file_hit_rate - 0.2:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_2",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.75,
      "line_number": 171,
      "context": "def create_cache_mock(hit_rate: float = 0.75) -> Mock:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_75",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 75,
      "line_number": 175,
      "context": "hits=75,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_75",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 25,
      "line_number": 176,
      "context": "misses=25,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_25",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 47,
      "context": "'parallel_workers': 4,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.03,
      "line_number": 31,
      "context": "await asyncio.sleep(0.03)  # 30ms delay",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_03",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 35,
      "context": "await asyncio.sleep(0.01)  # 10ms per close",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 282,
      "context": "time.sleep(0.001)  # Simulate work",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 205,
      "context": "time.sleep(0.01)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 96,
      "context": "def __init__(self, position_count=5, delay_ms=50):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "line_number": 169,
      "context": "{'positions': 3, 'delay_ms': 20, 'name': 'Light Load'},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "line_number": 171,
      "context": "{'positions': 20, 'delay_ms': 40, 'name': 'Heavy Load'},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 40,
      "line_number": 171,
      "context": "{'positions': 20, 'delay_ms': 40, 'name': 'Heavy Load'},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_40",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 6,
      "line_number": 399,
      "context": "min_detectors = 6 if use_real_pool else 4",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_6",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 399,
      "context": "min_detectors = 6 if use_real_pool else 4",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 268,
      "context": "monitor = RealTimePerformanceMonitor(monitoring_interval=0.5)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 279,
      "context": "time.sleep(0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "line_number": 345,
      "context": "return {\"hit_rate\": 0.8, \"pool_size\": 8}",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 176,
      "context": "'max_analysis_time_seconds': 300,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 177,
      "context": "'parallel_workers': 4,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.8,
      "line_number": 64,
      "context": "'performance_overhead_target': 1.8,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 342,
      "context": "self.executor = ThreadPoolExecutor(max_workers=4)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15,
      "line_number": 241,
      "context": "15: {",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_15",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 124,
      "context": "self.executor = ThreadPoolExecutor(max_workers=4)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 277,
      "context": "time.sleep(0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 455,
      "context": "lock_sequence=[f\"lock_{j}\" for j in range(random.randint(1, 4))],",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "line_number": 243,
      "context": "file_weight = 0.6",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_6",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.4,
      "line_number": 244,
      "context": "incremental_weight = 0.4",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "line_number": 290,
      "context": "if combined_hit_rate < 0.6:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_6",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 70,
      "line_number": 703,
      "context": "print(\"=\"*70)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_70",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.35,
      "line_number": 567,
      "context": "\"cache_efficiency\": 0.35,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_35",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.45,
      "line_number": 568,
      "context": "\"memory_utilization\": 0.45",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_45",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 70,
      "line_number": 701,
      "context": "print(\"\\n\" + \"=\"*70)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_70",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.7,
      "line_number": 227,
      "context": "\"cache_efficiency\": stats.hit_rate() * (1 - abs((memory_usage[\"utilization_percent\"] / 100.0) - 0.7)),",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_7",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "line_number": 185,
      "context": "if hit_rate < 0.6:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_6",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 144,
      "context": "await asyncio.sleep(0.01)  # Simulate work",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 464,
      "context": "await asyncio.sleep(0.01)  # Simulate async work",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 43,
      "context": "await asyncio.sleep(0.1)  # Simulate analysis time",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 55,
      "context": "await asyncio.sleep(0.01)  # Simulate async work",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.05,
      "line_number": 82,
      "context": "await asyncio.sleep(0.05)  # Longer simulation",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_05",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 912,
      "context": "await asyncio.sleep(0.01)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 914,
      "context": "await asyncio.sleep(0.01)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 768,
      "context": "tasks = [run_analysis(i) for i in range(50)]",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 733,
      "context": "assert cached_duration < 0.01  # Very fast for cached calls",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 944,
      "context": "time.sleep(0.001)  # Small delay",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 464,
      "context": "time.sleep(0.1)  # Small delay",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 482,
      "context": "time.sleep(0.001)  # Ensure different timestamps",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.2,
      "line_number": 33,
      "context": "time.sleep(0.2)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_2",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 8890,
      "line_number": 31,
      "context": "server = MockGitHubServer(port=8890)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_8890",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 25,
      "line_number": 272,
      "context": "\"Missing response caching\": 25,",
      "category": "config",
      "business_meaning": "Retry configuration",
      "suggested_name": "DEFAULT_RETRY_COUNT",
      "priority": "LOW",
      "justification": "Operational parameter that may need tuning"
    },
    {
      "value": 300,
      "line_number": 92,
      "context": "\"analysis_timeout\": 300,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.1,
      "line_number": 416,
      "context": "self.assertEqual(timeout, 0.1)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.1,
      "line_number": 405,
      "context": "return 0.1  # Very short timeout",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.2,
      "line_number": 35,
      "context": "time.sleep(0.2)  # Ensure server is ready",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_2",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.2,
      "line_number": 306,
      "context": "time.sleep(0.2)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_2",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 8888,
      "line_number": 33,
      "context": "cls.server = MockGitHubServer(port=8888)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_8888",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 8889,
      "line_number": 304,
      "context": "cls.server = MockGitHubServer(port=8889)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_8889",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "line_number": 386,
      "context": "\"analysis_timeout\": 300,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 555,
      "context": "\"analysis_timeout\": 300,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "line_number": 622,
      "context": "\"analysis_timeout\": 300,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.1,
      "line_number": 113,
      "context": "self.assertLess(first_duration, 0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.1,
      "line_number": 206,
      "context": "time.sleep(1.1)  # Wait for TTL to expire",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 127,
      "context": "@retry_with_backoff(max_retries=3, base_delay=0.01)  # Fast for testing",
      "category": "config",
      "business_meaning": "Retry configuration",
      "suggested_name": "DEFAULT_RETRY_COUNT",
      "priority": "LOW",
      "justification": "Operational parameter that may need tuning"
    },
    {
      "value": 0.01,
      "line_number": 144,
      "context": "@retry_with_backoff(max_retries=2, base_delay=0.01)",
      "category": "config",
      "business_meaning": "Retry configuration",
      "suggested_name": "DEFAULT_RETRY_COUNT",
      "priority": "LOW",
      "justification": "Operational parameter that may need tuning"
    },
    {
      "value": 300,
      "line_number": 483,
      "context": "cache = APICache(ttl_seconds=300, max_size=100)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_300",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 486,
      "context": "time.sleep(0.001)  # Simulate network delay",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 45,
      "line_number": 383,
      "context": "result = self.run_node_test(test_code, timeout=45)",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 2500,
      "line_number": 453,
      "context": "'princess_failure': 2500,  # ms",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 5000,
      "line_number": 454,
      "context": "'consensus_timeout': 5000,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1500,
      "line_number": 455,
      "context": "'byzantine_detection': 1500,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 3000,
      "line_number": 456,
      "context": "'context_reconstruction': 3000,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 15.0,
      "line_number": 418,
      "context": "timeout=15.0",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 45.0,
      "line_number": 528,
      "context": "timeout=45.0",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 202,
      "line_number": 244,
      "context": "assert response.status == 202  # Accepted",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_202",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 202,
      "line_number": 573,
      "context": "assert response.status == 202",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_202",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "line_number": 686,
      "context": "for _ in range(50):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_50",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.75,
      "line_number": 61,
      "context": "assert post_failure_health[\"system_health\"] == 0.75  # 3/4 nodes healthy",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_75",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 180,
      "line_number": 137,
      "context": "coordinator.mesh_nodes[\"api-docs\"].last_heartbeat = current_time - 180  # 3 minutes old",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_180",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15,
      "line_number": 345,
      "context": "large_violations = [{\"tool\": \"flake8\", \"rule\": \"E501\"} for _ in range(15)]",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_15",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 446,
      "context": "await asyncio.sleep(0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 63,
      "context": "assert result[\"total_nodes\"] == 4",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 30000,
      "line_number": 227,
      "context": "mock_tool.timeout = 30000",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.1,
      "line_number": 244,
      "context": "await asyncio.sleep(0.1)  # Simulate work",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "line_number": 511,
      "context": "for _ in range(20):  # Sample for ~10 seconds",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 513,
      "context": "await asyncio.sleep(0.5)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 30000,
      "line_number": 43,
      "context": "self.timeout = 30000",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1500,
      "line_number": 109,
      "context": "assert flake8_alloc.throttleInterval == 1500",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1500",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2000,
      "line_number": 653,
      "context": "assert allocation.throttleInterval == 2000",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_2000",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2000,
      "line_number": 645,
      "context": "throttleInterval=2000",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_2000",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 301,
      "context": "await asyncio.sleep(0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 88,
      "line_number": 618,
      "context": "rules={\"max-line-length\": 88, \"ignore\": [\"E203\", \"W503\"]},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_88",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 45.0,
      "line_number": 283,
      "context": "\"performance_gain\": 45.0",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_45_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.85,
      "line_number": 300,
      "context": "assert pattern[\"pattern_strength\"] == 0.85",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_85",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 367,
      "context": "time.sleep(0.001)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "line_number": 374,
      "context": "executor.submit(store_entries, thread_id, 20)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 406,
      "context": "time.sleep(0.001)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "line_number": 411,
      "context": "with ThreadPoolExecutor(max_workers=4) as executor:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15,
      "line_number": 413,
      "context": "executor.submit(create_correlations, thread_id, 15)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_15",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 456,
      "context": "time.sleep(0.001)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 6,
      "line_number": 461,
      "context": "with ThreadPoolExecutor(max_workers=6) as executor:",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_6",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.95,
      "line_number": 35,
      "context": "'confidence_interval': 0.95,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_95",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 96.7,
      "line_number": 137,
      "context": "'cache_hit_rate': 96.7,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_96_7",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 36953,
      "line_number": 138,
      "context": "'aggregation_throughput': 36953,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_36953",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 54.55,
      "line_number": 139,
      "context": "'ast_traversal_reduction': 54.55,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_54_55",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 97.4,
      "line_number": 147,
      "context": "'cache_hit_rate': 97.4,  # Exceeds target",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_97_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 36953,
      "line_number": 148,
      "context": "'aggregation_throughput': 36953,  # Meets target",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_36953",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 54.55,
      "line_number": 149,
      "context": "'ast_traversal_reduction': 54.55,  # Meets target",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_54_55",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 54.55,
      "line_number": 291,
      "context": "'ast_traversal_efficiency': {'before': 54.55, 'after': 54.55, 'tolerance': 0.02},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_54_55",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 54.55,
      "line_number": 291,
      "context": "'ast_traversal_efficiency': {'before': 54.55, 'after': 54.55, 'tolerance': 0.02},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_54_55",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.02,
      "line_number": 291,
      "context": "'ast_traversal_efficiency': {'before': 54.55, 'after': 54.55, 'tolerance': 0.02},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_02",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 43.0,
      "line_number": 292,
      "context": "'memory_efficiency': {'before': 43.0, 'after': 43.0, 'tolerance': 0.02},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_43_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 43.0,
      "line_number": 292,
      "context": "'memory_efficiency': {'before': 43.0, 'after': 43.0, 'tolerance': 0.02},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_43_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.02,
      "line_number": 292,
      "context": "'memory_efficiency': {'before': 43.0, 'after': 43.0, 'tolerance': 0.02},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_02",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 96.7,
      "line_number": 293,
      "context": "'cache_hit_rate': {'before': 96.7, 'after': 97.4, 'tolerance': 0.02},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_96_7",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 97.4,
      "line_number": 293,
      "context": "'cache_hit_rate': {'before': 96.7, 'after': 97.4, 'tolerance': 0.02},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_97_4",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.02,
      "line_number": 293,
      "context": "'cache_hit_rate': {'before': 96.7, 'after': 97.4, 'tolerance': 0.02},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_02",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 312,
      "context": "'cache_method_addition': {'overhead_percent': 0.5, 'max_acceptable': 2.0},",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15.0,
      "line_number": 314,
      "context": "'byzantine_coordination': {'overhead_percent': 10.0, 'max_acceptable': 15.0}",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_15_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1080,
      "line_number": 600,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1080",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "line_number": 600,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1920",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1080,
      "line_number": 902,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1080",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "line_number": 902,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1920",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1080,
      "line_number": 948,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1080",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "line_number": 948,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1920",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1080,
      "line_number": 622,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1080",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "line_number": 622,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1920",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1080,
      "line_number": 649,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1080",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "line_number": 649,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1920",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1080,
      "line_number": 712,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1080",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "line_number": 712,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1920",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1080,
      "line_number": 798,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1080",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "line_number": 798,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1920",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1080,
      "line_number": 852,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1080",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "line_number": 852,
      "context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_1920",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.002,
      "line_number": 157,
      "context": "time.sleep(0.002)  # 2ms processing time",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_002",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 272,
      "context": "cpu_percent = process.cpu_percent(interval=0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.025,
      "line_number": 117,
      "context": "await asyncio.sleep(0.025)  # 25ms detection time",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_025",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.05,
      "line_number": 156,
      "context": "await asyncio.sleep(0.05)  # 50ms activation time",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_05",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.005,
      "line_number": 105,
      "context": "processing_delay = np.random.uniform(0.005, 0.015)  # 5-15ms",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_005",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.015,
      "line_number": 105,
      "context": "processing_delay = np.random.uniform(0.005, 0.015)  # 5-15ms",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_015",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "line_number": 549,
      "context": "for _ in range(20):",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_20",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 134,
      "context": "time.sleep(random.uniform(0.1, 0.5))",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "line_number": 134,
      "context": "time.sleep(random.uniform(0.1, 0.5))",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "line_number": 96,
      "context": "time.sleep(random.uniform(0.001, 0.005))  # 1-5ms per file",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.005,
      "line_number": 96,
      "context": "time.sleep(random.uniform(0.001, 0.005))  # 1-5ms per file",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_005",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2.5,
      "line_number": 408,
      "context": "large_file_processing_time = 2.5  # Simulated time",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_2_5",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 54.55,
      "line_number": 35,
      "context": "'ast_traversal_reduction': 54.55,          # percent",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_54_55",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 43.0,
      "line_number": 36,
      "context": "'memory_efficiency': 43.0,                 # percent improvement",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_43_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 96.7,
      "line_number": 37,
      "context": "'cache_hit_rate': 96.7,                    # percent",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_96_7",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 73.0,
      "line_number": 38,
      "context": "'thread_contention_reduction': 73.0,       # percent",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_73_0",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 58.3,
      "line_number": 39,
      "context": "'cumulative_improvement': 58.3              # percent",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_58_3",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "line_number": 46,
      "context": "'memory_efficiency': 0.90,         # 90% of baseline",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_9",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.95,
      "line_number": 47,
      "context": "'cache_hit_rate': 0.95,            # 95% of baseline",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_95",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.85,
      "line_number": 48,
      "context": "'thread_contention_reduction': 0.85, # 85% of baseline",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_85",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.85,
      "line_number": 49,
      "context": "'cumulative_improvement': 0.85      # 85% of baseline",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_85",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 394,
      "context": "time.sleep(0.1)  # Simulate processing time",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "line_number": 398,
      "context": "time.sleep(random.uniform(0.01, 0.05))",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_01",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.05,
      "line_number": 398,
      "context": "time.sleep(random.uniform(0.01, 0.05))",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_05",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 89.7,
      "line_number": 383,
      "context": "return 89.7",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_89_7",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 96.8,
      "line_number": 385,
      "context": "return 96.8",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_96_8",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.999,
      "line_number": 100,
      "context": "'sla_target': 0.999,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_999",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.999,
      "line_number": 298,
      "context": "'sla_target': 0.999,",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_999",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 300,
      "context": "'check_interval_seconds': 0.1,  # Fast checks for testing",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 143,
      "context": "time.sleep(0.1)  # Simulate work",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15.0,
      "line_number": 244,
      "context": "timeout_seconds=15.0,",
      "category": "config",
      "business_meaning": "Operation timeout configuration",
      "suggested_name": "DEFAULT_TIMEOUT_SECONDS",
      "priority": "LOW",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.001,
      "line_number": 563,
      "context": "time.sleep(0.001)  # Small delay",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_001",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 152,
      "context": "time.sleep(0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 3.2,
      "line_number": 203,
      "context": "collector.collect_metric(\"sigma_level\", 3.2)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_3_2",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "line_number": 207,
      "context": "time.sleep(0.1)",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_1",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 102,
      "line_number": 41,
      "context": "\"test_3\": 102",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_102",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.99,
      "line_number": 44,
      "context": "\"hit_rate\": 0.99,  # Suspiciously high",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_99",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.98,
      "line_number": 45,
      "context": "\"efficiency\": 0.98",
      "category": "config",
      "business_meaning": "Configuration parameter",
      "suggested_name": "CONFIG_VALUE_0_98",
      "priority": "LOW",
      "justification": "Configuration value requiring external control"
    }
  ],
  "domain_specific_violations": [
    {
      "value": 0.85,
      "line_number": 299,
      "context": "confidence=0.85,",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 1.5,
      "line_number": 299,
      "context": "self.violation_weights.get(v.get('severity', 'medium'), 2) * 1.5",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_1_5",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 2.5,
      "line_number": 363,
      "context": "\"weight\": 2.5,",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_2_5",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 0.8,
      "line_number": 681,
      "context": "if memory_utilization > 0.8:",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 96.71,
      "line_number": 992,
      "context": "\"current_value\": 96.71,",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_96_71",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 0.9,
      "line_number": 811,
      "context": "if self._calculate_current_memory() > self.memory_stats.max_memory_bytes * 0.9:",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 1.5,
      "line_number": 253,
      "context": "multiplier *= 1.5",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_1_5",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 1.3,
      "line_number": 257,
      "context": "multiplier *= 1.3",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_1_3",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 1.2,
      "line_number": 261,
      "context": "multiplier *= 1.2",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_1_2",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 0.7,
      "line_number": 198,
      "context": "return (increasing_count / (len(memory_values) - 1)) > 0.7",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 1.5,
      "line_number": 187,
      "context": "'connascence_of_type': 1.5,",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_1_5",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 3.77,
      "line_number": 58,
      "context": "'parallel_speedup_factor': 3.77     # Phase 2 measured",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_3_77",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 0.9,
      "line_number": 380,
      "context": "estimated_memory_efficiency = baseline_memory_efficiency * 0.9  # Conservative estimate",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.85,
      "line_number": 187,
      "context": "'success_rate': 0.85,               # Phase 3 target",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.85,
      "line_number": 188,
      "context": "'memory_efficiency': 0.85,          # Phase 2 achieved",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.8,
      "line_number": 221,
      "context": "actual_efficiency = actual_metrics.get('memory_efficiency', 0.80)  # Fallback estimate",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.85,
      "line_number": 292,
      "context": "estimated_efficiency = 0.85 * (baseline_exec_time / exec_time) if exec_time > 0 else 0.85",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.85,
      "line_number": 292,
      "context": "estimated_efficiency = 0.85 * (baseline_exec_time / exec_time) if exec_time > 0 else 0.85",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.7,
      "line_number": 584,
      "context": "confidence=0.7",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.7,
      "line_number": 863,
      "context": "potential_savings_bytes = int(memory_impact['total_estimated_bytes'] * 0.7)",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.8,
      "line_number": 98,
      "context": "'rule_5_assertions': 0.8,       # High safety impact",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.8,
      "line_number": 253,
      "context": "'rule_5_assertions': 0.8,",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.8,
      "line_number": 341,
      "context": "'memory_allocation': 0.8,   # Memory patterns - high complexity",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.75,
      "line_number": 762,
      "context": "'rule_1_control_flow': 0.75,  # Moderate complexity",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.85,
      "line_number": 763,
      "context": "'rule_2_loop_bounds': 0.85,   # Well-understood patterns",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.7,
      "line_number": 764,
      "context": "'rule_3_memory_mgmt': 0.70,   # High complexity",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.9,
      "line_number": 765,
      "context": "'rule_4_function_size': 0.90, # Automated tooling available",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.9,
      "line_number": 775,
      "context": "'rule_1_control_flow': 0.9,",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.85,
      "line_number": 776,
      "context": "'rule_2_loop_bounds': 0.85,",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.9,
      "line_number": 777,
      "context": "'rule_3_memory_mgmt': 0.9,",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.7,
      "line_number": 779,
      "context": "'rule_5_assertions': 0.7",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.7,
      "line_number": 837,
      "context": "'worker_count_adjustment': abs(utilization - 0.7) > 0.2,",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.7,
      "line_number": 198,
      "context": "if dpi_value > 0.7:",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.7,
      "line_number": 200,
      "context": "adjustment_factor = 1.0 + (dpi_value - 0.7) * 0.5",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 1.67,
      "line_number": 203,
      "context": "adjustment_factor = 0.5 + dpi_value * 1.67  # Scale 0-0.3 to 0.5-1.0",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_1_67",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 7.5,
      "line_number": 55,
      "context": "assert violation_dict[\"weight\"] == 7.5, \"Weight field missing\"",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_7_5",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 2.5,
      "line_number": 146,
      "context": "weight=2.5,",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_2_5",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 2.5,
      "line_number": 110,
      "context": "weight=2.5,",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_2_5",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 1.5,
      "line_number": 181,
      "context": "weight=1.5,",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_1_5",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 15.5,
      "line_number": 93,
      "context": "summary_metrics={\"total_weight\": 15.5}",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_15_5",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 21.5,
      "line_number": 86,
      "context": "summary_metrics={\"total_weight\": 21.5, \"average_weight\": 5.375}",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_21_5",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 5.375,
      "line_number": 86,
      "context": "summary_metrics={\"total_weight\": 21.5, \"average_weight\": 5.375}",
      "category": "formula",
      "business_meaning": "Scoring weight or factor",
      "suggested_name": "SCORING_WEIGHT_5_375",
      "priority": "MEDIUM",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 0.85,
      "line_number": 143,
      "context": "assert correlation.correlation_strength == 0.85",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.9,
      "line_number": 167,
      "context": "temp_memory_model.correlate_phases(\"phase1\", \"phase2\", \"performance\", 0.9)",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.8,
      "line_number": 168,
      "context": "temp_memory_model.correlate_phases(\"phase1\", \"phase2\", \"pattern\", 0.8)",
      "category": "replace",
      "business_meaning": "Performance threshold",
      "suggested_name": "CACHE_PRESSURE_THRESHOLD",
      "priority": "MEDIUM",
      "justification": "Performance tuning parameter"
    }
  ],
  "replacement_suggestions": [
    {
      "value": 0.92,
      "current_context": "'nasa_compliance': results.get('nasa_compliance', {'score': 0.92}),",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'nasa_compliance': {'score': 0.92},",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"overall_compliance\": 0.95 if len(critical_findings) <= critical_threshold and len(high_findings) <= high_threshold else 0.8",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "nasa_compliance_score = 0.95 if total_critical == 0 and total_high <= 3 else 0.8",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"compliant\": nasa_compliance_score >= 0.92,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "min_nasa_compliance = 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'nasa_pot10_score': 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "return {\"score\": 0.95, \"passed\": True, \"recommendations\": []}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"NASA_POT10\": {\"rules\": 10, \"threshold\": 0.90},",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"DFARS\": {\"sections\": [\"252.204-7012\"], \"threshold\": 0.95},",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"passed\": compliance_score >= 0.90,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"nasa_compliance_threshold\": 0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'score': 0.92,  # Known good baseline",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'score': 0.92,  # Known baseline from previous analysis",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'score': unified_results.get('nasa_compliance', {}).get('score', 0.92),",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "NASA_COMPLIANCE_THRESHOLD = 0.95  # Minimum NASA compliance score for passing",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "ENHANCED_NASA_COMPLIANCE_THRESHOLD = 0.9",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"max_duplication_score\": 0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"max_duplication_score\": 0.9,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"nasa_compliance_min\": 0.90,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "NASA_COMPLIANCE_THRESHOLD = 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "NASA_COMPLIANCE_THRESHOLD = getattr(constants, \"NASA_COMPLIANCE_THRESHOLD\", 0.95)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "compliance_threshold: float = 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "self.compliance_threshold = 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "SecurityLevel.ENHANCED: {\"compliance\": 0.90, \"theater\": 0.80, \"overall\": 0.85},",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "SecurityLevel.CRITICAL: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.92},",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "SecurityLevel.CRITICAL: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.92},",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "SecurityLevel.CRITICAL: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.92},",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "SecurityLevel.DEFENSE_INDUSTRY: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.95}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "SecurityLevel.DEFENSE_INDUSTRY: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.95}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "SecurityLevel.DEFENSE_INDUSTRY: {\"compliance\": 0.95, \"theater\": 0.90, \"overall\": 0.95}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "result.nasa_compliance_score >= 0.95):  # Expect high compliance after fixes",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'state': 'success' if result.nasa_compliance_score >= 0.9 else 'failure',",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "| NASA POT10 Compliance | {' Pass' if result.nasa_compliance_score >= 0.9 else ' Fail'} | {result.nasa_compliance_score:.1%} |",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "- **NASA POT10 Compliance**: {result.nasa_compliance_score:.1%} ({' Pass' if result.nasa_compliance_score >= 0.9 else ' Fail'})",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "| NASA POT10 Compliance | 90% | {result.nasa_compliance_score:.1%} | {'' if result.nasa_compliance_score >= 0.9 else ''} |",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "excellent_threshold: float = 0.95  # 95%+",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "good_threshold: float = 0.90       # 90%+",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "elif score < 0.90:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "if overall_score >= 0.95:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'compliance_threshold': 0.90,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "elif overall_score >= 0.90:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "threshold=0.90,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "threshold=0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "passed=nasa_score >= 0.90,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "passed=compliance_score >= 0.95,  # 95% compliance required",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "recommendation=\"Improve NASA Power of Ten compliance\" if nasa_score < 0.90 else \"Compliant\"",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "recommendation=\"Address DFARS compliance gaps\" if compliance_score < 0.95 else \"Compliant\"",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "nasa_compliance_threshold: float = 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "if result.nasa_compliance_score < 0.95:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "if result.nasa_compliance_score < 0.95:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if result.theater_detection_score < 0.9:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "nasa_compliance_threshold=0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if nasa_score < 0.90:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "nasa_compliance = {'score': 0.90, 'violations': []}  # Simplified",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"nasa_pot10\": {\"score\": 0.90, \"passed\": True},",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"dfars\": {\"score\": 0.95, \"passed\": True}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "'min_compliance_score': 0.95   # 95% compliance for defense industry",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "if score >= 0.98:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'improvement_needed': overall_score < 0.90,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "'defense_ready': nasa_data.get('score', 0.0) >= 0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'improvement_needed': nasa_data.get('score', 0.0) < 0.90",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "'nasa_compliant': result.nasa_compliance.get('score', 0.0) >= 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "'compliant': nasa_compliance.get('score', 0.0) >= 0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "'defense_ready': nasa_compliance.get('score', 0.0) >= 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "return 0.95  # Assume good naming",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if naming_compliance >= 0.9:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"nasa_compliance_score\": 0.9,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"duplication_score\": 0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "NASA_COMPLIANCE_THRESHOLD = 0.90",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "NASA_COMPLIANCE_THRESHOLD = max(0.0, min(1.0, getattr(constants_module, 'NASA_COMPLIANCE_THRESHOLD', 0.90)))",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'nasa': {'nasa_compliance': {'score': 0.92}},",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "<p><strong>{data['nasa'].get('nasa_compliance', {}).get('score', 0.92):.1%}</strong></p>",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "- **Score**: {results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92):.1%}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "- **Defense Industry Ready**: {results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92) >= 0.90}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "- **Status**: {'[OK] APPROVED' if results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92) >= 0.90 else '[FAIL] NEEDS IMPROVEMENT'}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "- **Defense Industry Ready**: {results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92) >= 0.90}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "- **Status**: {'[OK] APPROVED' if results.get('nasa', {}).get('nasa_compliance', {}).get('score', 0.92) >= 0.90 else '[FAIL] NEEDS IMPROVEMENT'}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "min_nasa_compliance: float = 0.92  # Minimum NASA compliance required",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "min_nasa_compliance=0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "min_nasa_compliance=0.95  # Higher compliance required for defense",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "min_nasa_compliance=0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "min_nasa_compliance=config.get('min_nasa_compliance', 0.92)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if result.nasa_compliance_score < 0.9:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "analysis_passed = result.get(\"critical_count\", 0) == 0 and result.nasa_compliance_score >= 0.9",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"nasa_compliance_score\": analysis_data.get(\"nasa_compliance\", 0.92),",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"duplication_score\": analysis_data.get(\"duplication_score\", 0.95),",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "- **NASA POT10 Compliance**: {result.get('nasa_compliance_score', 0.92):.1%}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "- **Duplication Score**: {result.get(\"duplication_score\", 0.95):.2f}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"analysis_passed\": result.get(\"critical_count\", 0) == 0 and result.nasa_compliance_score >= 0.9,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'min_nasa_compliance': 0.92,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "'min_nasa_compliance': 0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'min_nasa_compliance': 0.92,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if 0.90 <= value <= 0.99:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "current_context": "if 0.90 <= value <= 0.99:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "nasa_compliance_min: float = 0.90",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "nasa_compliance_min=0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "duplication_threshold=0.9",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "nasa_compliance_min=0.90,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"nasa_compliance_min\": 0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"duplication_threshold\": 0.9,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"nasa_compliance_min\": 0.90,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "return {\"score\": 0.92, \"passed\": True}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "metrics.factuality_p90 = 0.92  # Default to threshold",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'factuality_p90': 0.92,  # NASA POT10 compliance",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'coverage_p95': 0.90,     # Connascence detection",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"current_score\": 0.92,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"current\": current_data.get('nasa_compliance', {}).get('score', 0.92),",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"min_compliance_score\": 0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "if success_rate >= 0.95:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"overall_compliance_score\": 0.92,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "\"score\": 0.98,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "metrics.get('nasa_compliance_score', 0) >= 0.90 and",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "metrics.get('nasa_compliance_score', 0) >= 0.90 and",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'nasa_compliance_score': 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if nasa_status.get('score', 0) < 0.90:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'nasa_compliance': {'value': 0.90, 'critical': True},",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'defense_ready': (nasa_status.get('score', 0) >= 0.92 and avg_compliance >= 0.90),",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'defense_ready': (nasa_status.get('score', 0) >= 0.92 and avg_compliance >= 0.90),",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'nasa_compliance_score': 0.90,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'required_score': 0.92,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'passing': compliance_score >= 0.90,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'defense_threshold': compliance_score >= 0.92,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"nasa_compliance\": 0.92,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'nasa_compliance_min': 0.92,     # 92% minimum",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if overall_score < 0.9:  # 90% overall compliance threshold",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "if overall_score >= 0.95:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'rule_3': {'name': 'Assertions', 'weight': 0.2, 'min_score': 0.9},",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "'rule_7': {'name': 'Memory Bounds', 'weight': 0.25, 'min_score': 0.95},",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if rule_score.get('score', 1.0) < 0.9:  # Below 90% compliance",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "elif overall_score >= 0.90:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'overall_compliant': overall_score >= 0.9,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "'compliance_level': 'excellent' if overall_score >= 0.95 else 'good' if overall_score >= 0.9 else 'needs_improvement'",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'compliance_level': 'excellent' if overall_score >= 0.95 else 'good' if overall_score >= 0.9 else 'needs_improvement'",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"audit_readiness\": \"high\" if compliance_data.get(\"overall_compliance_score\", 0) > 0.9 else \"medium\"",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "parser.add_argument('--nasa-score', type=float, default=0.92, help='NASA compliance score')",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"defense_industry_ready\": args.nasa_score >= 0.90",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"quality_status\": \"excellent\" if args.nasa_score >= 0.90 else \"good\"",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "significant_change = abs(args.nasa_score - 0.92) > 0.05 or args.current_violations > 5",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "avg_compliance_score >= 0.95 and",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "defense_readiness_rate >= 0.90",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"nasa_compliance_score\": 0.92,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "self.DFARS_THRESHOLD = 0.95  # 95% DFARS compliance required",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "self.NASA_POT10_THRESHOLD = 0.95  # 95% NASA compliance required",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "self.AUDIT_COVERAGE_MINIMUM = 0.90  # 90% audit trail coverage",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "validation_results[\"certification_ready\"] = overall_score >= 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "validation_results[\"defense_industry_ready\"] = overall_score >= 0.98",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "if overall_score >= 0.98:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "elif overall_score >= 0.95:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "print_result(\"Cryptographic Operations\", \"PASS\" if crypto_score >= 0.95 else \"FAIL\", crypto_score)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "print_result(\"Overall Compliance Score\", \"PASS\" if overall_score >= 0.95 else \"FAIL\", overall_score)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "elif overall_score >= 0.90:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "print_result(\"Configuration Compliance\", \"PASS\" if config_score >= 0.9 else \"FAIL\", config_score)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"score\": 0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "ASSERTION_COVERAGE_TARGET = 0.90  # 90% coverage target",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "self.defense_industry_threshold = 0.90",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "self.target_overall_compliance = 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "\"target_compliance\": 0.98",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"target_compliance\": 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "\"target_compliance\": 0.98",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"target_compliance\": 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"target_compliance\": 0.90",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"target_compliance\": 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"target_compliance\": 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"target_compliance\": 0.90",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "\"target_compliance\": 0.98",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"rule_1\": 0.95,  # Control flow",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "if overall_compliance >= 0.95:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "self.target_compliance = 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"rule_1\": 0.95,  # Control flow",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"readiness_threshold\": 0.90,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"compliant\": self.current_overall_compliance >= 0.90",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if self.injection_stats.nasa_compliance_rate < 0.9:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "return min(base_success_rate + quality_bonus, 0.95)  # Max 95% success rate",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "return any(pattern in rule for pattern in critical_patterns) or overall_score >= 0.9",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "if score >= 0.95:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "return compliance_score >= 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "default=0.90,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "self.metrics.defense_industry_compliance_score >= 0.98",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "self.metrics.defense_industry_compliance_score >= 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "self.metrics.defense_industry_compliance_score >= 0.98",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"defense_industry_ready\": critical_violations == 0 and avg_compliance >= 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "if overall_score < 0.95:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "if overall_score < 0.95:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "if assessment_result[\"overall_score\"] >= 0.98:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"substantial_compliance\": 0.90,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"full_compliance\": 0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "\"defense_certified\": 0.98",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "return min(confidence, 0.95)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "if score >= 0.95:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if c.status == ComplianceStatus.COMPLIANT and c.confidence > 0.9",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"overall_score\": min(0.90, 0.82 + 0.008 * (base_time.day % 10)),",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "\"overall_score\": min(0.98, 0.95 + 0.003 * (base_time.day % 10)),",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "current_context": "\"compliance_rate\": min(0.99, 0.98 + 0.001 * (base_time.day % 10)),",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"overall_score\": min(0.98, 0.95 + 0.003 * (base_time.day % 10)),",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "\"compliance_rate\": min(0.99, 0.98 + 0.001 * (base_time.day % 10)),",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "if current_score >= 0.95:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "confidence=0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "if compliance_score >= 0.95:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "\"current_score\": phase3_data.get(\"quantified_benefits\", {}).get(\"nasa_compliance\", {}).get(\"overall_compliance_score\", 0.98),",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "scores.append(0.95)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "elif compliance_score >= 0.90:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'nasa_compliance': 0.92,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "'security_score': 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "if evidence.get('compliance_score', 0) < 0.95:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"compliance_score\": 0.92,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "{\"id\": \"RV.1\", \"name\": \"Review Software Requirements\", \"status\": \"implemented\" if nasa_score > 0.9 else \"partial\"}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"compliance_score\": 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'compliance_threshold': 0.9,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"nasa_compliance\": 0.92,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if result.pattern_compliance_score < 0.9:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if result.pattern_compliance_score < 0.9:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "compliance_score = 0.92  # Simulated score based on Phase 4 results",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "'target_score': 0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'score': 0.90,  # Simulated",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "assert flag.min_nasa_compliance == 0.92  # Default",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "assert flag.min_nasa_compliance == 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "assert flag.min_nasa_compliance == 0.9",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "assert feature_info.min_nasa_compliance == 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "current_context": "result = self.manager.validate_nasa_compliance(0.99)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "current_context": "assert result['current_compliance'] == 0.99",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "result = self.manager.validate_nasa_compliance(0.90)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "assert result['current_compliance'] == 0.90",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "assert violation['required_compliance'] == 0.98",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "assert violation['current_compliance'] == 0.90",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "result = self.manager.validate_nasa_compliance(0.90)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "assert sixsigma.min_nasa_compliance == 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "assert dfars.min_nasa_compliance == 0.95  # Higher for defense",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "assert supply_chain.min_nasa_compliance == 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "current_context": "assert feature.min_nasa_compliance == 0.99",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "min_nasa_compliance=0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "min_nasa_compliance=0.9",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'min_nasa_compliance': 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "'min_nasa_compliance': 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.93,
      "current_context": "'min_nasa_compliance': 0.93",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_93",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "'min_nasa_compliance': 0.98",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "current_context": "'min_nasa_compliance': 0.99",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.99,
      "current_context": "'min_nasa_compliance': 0.99,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_99",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "'min_nasa_compliance': 0.9 + (i % 10) / 100  # Vary compliance requirements",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "self.manager.validate_nasa_compliance(0.9)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"compliance_score\": 0.90",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if nasa_compliance < 0.9:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.94,
      "current_context": "\"nasa_compliance\": 0.94,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_94",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if analysis_results['success'] and analysis_results['nasa_compliance'] >= 0.9:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"min_nasa_compliance\": 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"min_nasa_compliance\": 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.93,
      "current_context": "\"min_nasa_compliance\": 0.93",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_93",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"min_nasa_compliance\": 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"min_nasa_compliance\": 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"nasa_compliance_threshold\": 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.93,
      "current_context": "compliance_validation = feature_manager.validate_nasa_compliance(0.93)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_93",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "validation = feature_manager.validate_nasa_compliance(0.92)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.94,
      "current_context": "adequate_validation = feature_manager.validate_nasa_compliance(0.94)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_94",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.94,
      "current_context": "validation = feature_manager.validate_nasa_compliance(0.94)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_94",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.96,
      "current_context": "high_validation = feature_manager.validate_nasa_compliance(0.96)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_96",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.94,
      "current_context": "validation = feature_manager.validate_nasa_compliance(0.94)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_94",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "self.assertEqual(quality_violation[\"required_compliance\"], 0.95)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"min_nasa_compliance\": 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.93,
      "current_context": "\"min_nasa_compliance\": 0.93",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_93",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"min_nasa_compliance\": 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"min_nasa_compliance\": 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"min_nasa_compliance\": 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "\"compliance_score\": 0.90",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"min_nasa_compliance\": 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"min_nasa_compliance\": 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "\"min_nasa_compliance\": 0.92",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "nasa_compliance_score=0.92,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "duplication_score=0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "nasa_compliance_score=0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "duplication_score=0.90,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"violation_id_determinism\": {\"threshold\": 0.95, \"baseline\": 0.85}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "compliance_forecaster.alert_thresholds['critical'] = 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "sample['current_metrics']['code_coverage'] = np.random.uniform(0.6, 0.95)",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "assert compliance_forecaster._get_risk_level_name(0.95) == 'critical'",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "risk_score=0.9,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.96,
      "current_context": "assert compliance_forecaster._get_risk_level_name(0.96) == 'critical'",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_96",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "component_scores={'security': 0.8, 'operational': 0.9}",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "self.assertGreaterEqual(projected_compliance, 0.90, \"Should achieve defense industry readiness\")",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "assert result.score > 0.9",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.92,
      "current_context": "'compliance_score': 0.92,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_92",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "assert result.score == 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "passed=score >= 0.95,  # 95% compliance required",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "'target': 0.95",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "score=0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.9,
      "current_context": "if nasa_score is not None and nasa_score < 0.90:",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_90",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.95,
      "current_context": "\"current_score\": 0.95,",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_95",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.98,
      "current_context": "\"nasa_compliance\": {\"overall_compliance_score\": 0.98, \"rule_2_violations_eliminated\": 2},",
      "suggested_constant": "NASA_POT10_COMPLIANCE_THRESHOLD_98",
      "justification": "Regulatory compliance requirement"
    },
    {
      "value": 0.78,
      "current_context": "\"architectural_health\": 0.78,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.42,
      "current_context": "\"coupling_score\": 0.42,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_42",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.65,
      "current_context": "\"complexity_score\": 0.65,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.72,
      "current_context": "\"maintainability_index\": 0.72",
      "suggested_constant": "BUSINESS_THRESHOLD_0_72",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"overall_quality_score\": 0.75  # CI-safe score",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "\"score\": 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"overall_quality_score\": 0.75  # CI-safe score",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "\"score\": 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"score\": 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.65,
      "current_context": "if analysis_result.get(\"summary\", {}).get(\"overall_quality_score\", 0) < 0.65:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "analysis_result[\"summary\"][\"overall_quality_score\"] = 0.70",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "consolidated['overall_scores']['average_quality'] = 0.75",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "if avg_quality < 0.70:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "mece_analyzer = MECEAnalyzer(threshold=0.8)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.82,
      "current_context": "\"mece_score\": 0.82,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "\"coverage_score\": 0.82",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "min_mece_score = 0.70  # Lowered from 0.80 for CI/CD stability",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 15,
      "current_context": "max_duplications = 15  # Increased from 10 for realistic threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "if isinstance(dup, dict) and dup.get(\"similarity\", 0) > 0.9)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "\"health_score\": 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.78,
      "current_context": "\"hit_rate\": 0.78,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.22,
      "current_context": "\"optimization_potential\": 0.22",
      "suggested_constant": "BUSINESS_THRESHOLD_0_22",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "\"cpu_usage\": {\"efficiency_score\": 0.82},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.76,
      "current_context": "\"memory_usage\": {\"optimization_score\": 0.76}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_76",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"cache_health\": {\"health_score\": 0.80},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"resource_utilization\": {\"cpu_usage\": {\"efficiency_score\": 0.75}},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "nasa_threshold = 0.85",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "arch_threshold = 0.70",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "mece_threshold = 0.70",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "min_overall_quality = 0.75",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "'architectural_health': results.get('architectural_health', 0.85),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "'coupling_score': results.get('coupling_score', 0.3),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "'complexity_score': results.get('complexity_score', 0.4),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "'maintainability_index': results.get('maintainability_index', 75)",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'architectural_health': 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "'coupling_score': 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "'complexity_score': 0.4,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "'maintainability_index': 75",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "'health_score': cache_stats.get('health_score', 0.88),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.76,
      "current_context": "'hit_rate': cache_stats.get('hit_rate', 0.76),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_76",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "'memory_efficiency': cache_stats.get('memory_efficiency', 0.82)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "'health_score': 0.88,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.76,
      "current_context": "'hit_rate': 0.76,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_76",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "'memory_efficiency': 0.82",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'overall_quality_score': results.get('overall_score', 0.75),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "'violations': results.get('violations', [])[:50],  # Limit for JSON size",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'overall_quality_score': 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "mece_analyzer = MECEAnalyzer(threshold=0.8)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "\"mece_score\": 0.75,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"similarity_threshold\": 0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.82,
      "current_context": "\"cpu_usage\": {\"efficiency_score\": 0.82},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.76,
      "current_context": "\"memory_usage\": {\"optimization_score\": 0.76}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_76",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"cpu_usage\": {\"efficiency_score\": 0.75},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"memory_usage\": {\"optimization_score\": 0.70}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'efficiency_score': results.get('cpu_efficiency', 0.8),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 45,
      "current_context": "'peak_usage': results.get('peak_cpu', 45)",
      "suggested_constant": "BUSINESS_THRESHOLD_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'optimization_score': results.get('memory_optimization', 0.75),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'efficiency_score': 0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 45,
      "current_context": "'peak_usage': 45",
      "suggested_constant": "BUSINESS_THRESHOLD_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'optimization_score': 0.75,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "for violation in connascence.get(\"violations\", [])[:20]:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "high_threshold = 8 if tools_coverage >= 0.5 else 15",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "critical_threshold = 2 if tools_coverage >= 0.5 else 5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "high_threshold = 8 if tools_coverage >= 0.5 else 15",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"overall_compliance\": 0.95 if len(critical_findings) <= critical_threshold and len(high_findings) <= high_threshold else 0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 20,
      "current_context": "\"secrets\": secrets_found[:20],  # Limit for artifact size",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "critical_penalty = total_critical * 20  # 20 points per critical",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "nasa_compliance_score = 0.95 if total_critical == 0 and total_high <= 3 else 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "min_security_score = 0.80",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 300,
      "current_context": "], capture_output=True, text=True, timeout=300)",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "\"medium\": medium_vulns[:15],  # Limit for artifact size",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "DEFAULT_DUPLICATION_THRESHOLD = 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 4,
      "current_context": "DEFAULT_MAX_WORKERS = 4",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 34,
      "current_context": "'dependencies': 34,",
      "suggested_constant": "BUSINESS_THRESHOLD_34",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.28,
      "current_context": "'coupling_score': 0.28,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_28",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'cohesion_score': 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 72.5,
      "current_context": "'maintainability_index': 72.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_72_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.2,
      "current_context": "'average': 4.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18,
      "current_context": "'max': 18,",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "cache_batch = prioritized_files[:min(20, len(prioritized_files))]  # Limit to 20 files",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 864,
      "current_context": "age_score = 100 - min((stat.st_mtime % 86400) / 864, 100)  # Recent = higher",
      "suggested_constant": "BUSINESS_THRESHOLD_864",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "def __init__(self, recommendation_count=10, priority_threshold=0.7):",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "priority_threshold=config.get(\"priority_threshold\", 0.7)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.5,
      "current_context": "\"complexity_score\": 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "return {\"score\": 0.85, \"passed\": True, \"recommendations\": []}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "return {\"score\": 0.80, \"passed\": True, \"recommendations\": []}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"connascence\": {\"enabled\": True, \"threshold\": 0.7},",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "\"god_objects\": {\"enabled\": True, \"threshold\": 50},",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"ISO27001\": {\"controls\": [\"A.14.2.1\"], \"threshold\": 0.85}",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "return patterns[:50]  # Limit to top 50 patterns",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "\"analysis_timeout\": 300,",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"mece_quality_threshold\": 0.80",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "'overall_score': 0.75,  # Conservative baseline",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "base_score = 0.70 + (min(100, total_files) / 1000)  # 0.70-0.80 range",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'overall_score': unified_results.get('overall_score', 0.75),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "'violations': unified_results.get('violations', [])[:50],  # Limit for size",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "'weight': 6.0 if param_count > 5 else 4.0",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "'weight': 6.0 if param_count > 5 else 4.0",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.0,
      "current_context": "'weight': 9.0",
      "suggested_constant": "BUSINESS_THRESHOLD_9_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "NASA_PARAMETER_THRESHOLD = 6  # Rule #6: Function parameters should not exceed 6",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "GOD_OBJECT_METHOD_THRESHOLD = 20  # Classes with >20 methods are god objects",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 19,
      "current_context": "GOD_OBJECT_METHOD_THRESHOLD_CI = 19  # Temporary increase to allow CI/CD to pass",
      "suggested_constant": "BUSINESS_THRESHOLD_19",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "MECE_SIMILARITY_THRESHOLD = 0.8  # Minimum similarity for duplication detection",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "MECE_QUALITY_THRESHOLD = 0.70  # Lowered from 0.80 for CI/CD stability - Loop 3 optimization",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 300,
      "current_context": "MECE_TIMEOUT_SECONDS_CI = 300  # 5-minute timeout for CI/CD environments",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "POSITION_COUPLING_THRESHOLD = 4  # Parameter count before position coupling",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "OVERALL_QUALITY_THRESHOLD = 0.75  # Minimum overall quality score",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.55,
      "current_context": "OVERALL_QUALITY_THRESHOLD_CI = 0.55  # Temporary reduced threshold for CI/CD",
      "suggested_constant": "BUSINESS_THRESHOLD_0_55",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "MAX_ANALYSIS_TIME_SECONDS = 300  # Maximum time allowed for analysis",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "ENHANCED_MECE_SIMILARITY_THRESHOLD = 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 15,
      "current_context": "CONNASCENCE_COMPLEXITY_THRESHOLD = 15",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "PARALLEL_ANALYSIS_WORKERS = 4",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "ANALYSIS_TIMEOUT_SECONDS = 300",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "CROSS_PHASE_CORRELATION_THRESHOLD = 0.6",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9,
      "current_context": "9: \"CRITICAL\",  # God Objects, Globals >5",
      "suggested_constant": "BUSINESS_THRESHOLD_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "6: \"MODERATE\",  # Magic in conditionals",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2002,
      "current_context": "\"CONFIG_NOT_FOUND\": 2002,",
      "suggested_constant": "BUSINESS_THRESHOLD_2002",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2003,
      "current_context": "\"POLICY_INVALID\": 2003,",
      "suggested_constant": "BUSINESS_THRESHOLD_2003",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2004,
      "current_context": "\"THRESHOLD_INVALID\": 2004,",
      "suggested_constant": "BUSINESS_THRESHOLD_2004",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2005,
      "current_context": "\"PRESET_NOT_FOUND\": 2005,",
      "suggested_constant": "BUSINESS_THRESHOLD_2005",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3001,
      "current_context": "\"MCP_CONNECTION_FAILED\": 3001,",
      "suggested_constant": "BUSINESS_THRESHOLD_3001",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3002,
      "current_context": "\"MCP_RATE_LIMIT_EXCEEDED\": 3002,",
      "suggested_constant": "BUSINESS_THRESHOLD_3002",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3003,
      "current_context": "\"MCP_VALIDATION_FAILED\": 3003,",
      "suggested_constant": "BUSINESS_THRESHOLD_3003",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3004,
      "current_context": "\"CLI_ARGUMENT_INVALID\": 3004,",
      "suggested_constant": "BUSINESS_THRESHOLD_3004",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3005,
      "current_context": "\"VSCODE_EXTENSION_ERROR\": 3005,",
      "suggested_constant": "BUSINESS_THRESHOLD_3005",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4002,
      "current_context": "\"PERMISSION_DENIED\": 4002,",
      "suggested_constant": "BUSINESS_THRESHOLD_4002",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4003,
      "current_context": "\"RESOURCE_EXHAUSTED\": 4003,",
      "suggested_constant": "BUSINESS_THRESHOLD_4003",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4004,
      "current_context": "\"AUDIT_LOG_FAILURE\": 4004,",
      "suggested_constant": "BUSINESS_THRESHOLD_4004",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5001,
      "current_context": "\"INTERNAL_ERROR\": 5001,",
      "suggested_constant": "BUSINESS_THRESHOLD_5001",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 418,
      "current_context": "418: \"http_status\",  # I'm a teapot",
      "suggested_constant": "BUSINESS_THRESHOLD_418",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 429,
      "current_context": "429: \"http_status\",  # Rate limited",
      "suggested_constant": "BUSINESS_THRESHOLD_429",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 429,
      "current_context": "429: \"MCP_RATE_LIMIT_EXCEEDED\",",
      "suggested_constant": "BUSINESS_THRESHOLD_429",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"max_duplication_score\": 0.8,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 15,
      "current_context": "\"god_object_threshold\": 15,",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "\"max_connascence_violations\": 50,",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "\"max_duplication_score\": 0.6,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "\"god_object_threshold\": 25,",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "\"nasa_compliance_min\": 0.60,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "\"duplication_threshold\": MECE_QUALITY_THRESHOLD + 0.15,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "\"duplication_threshold\": MECE_QUALITY_THRESHOLD + 0.10,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "\"god_object_limit\": GOD_OBJECT_METHOD_THRESHOLD + 15,",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "\"duplication_threshold\": MECE_QUALITY_THRESHOLD - 0.20,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "\"max_complexity\": ALGORITHM_COMPLEXITY_THRESHOLD + 15,",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "\"max_parameters\": POSITION_COUPLING_THRESHOLD + 6,",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 99,
      "current_context": "thresholds.get(\"max_parameters\", 99) <= NASA_PARAMETER_THRESHOLD and",
      "suggested_constant": "BUSINESS_THRESHOLD_99",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 99,
      "current_context": "thresholds.get(\"critical_violations\", 99) <= CRITICAL_VIOLATION_LIMIT",
      "suggested_constant": "BUSINESS_THRESHOLD_99",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "return 0.5  # Default moderate score if no responsibilities detected",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "if cohesion_score < 0.3:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 800,
      "current_context": "\"loc_threshold\": 800,  # Higher LOC acceptable for config",
      "suggested_constant": "BUSINESS_THRESHOLD_800",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "\"method_threshold\": 25,  # Models can have many properties",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "\"method_threshold\": 20,  # One method per endpoint is reasonable",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 600,
      "current_context": "\"loc_threshold\": 600,  # Controllers coordinate, may be longer",
      "suggested_constant": "BUSINESS_THRESHOLD_600",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "\"parameter_threshold\": 6,  # HTTP methods should be simple",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "\"method_threshold\": 40,  # Utility classes can have many helpers",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "\"method_threshold\": 15,  # Strict for business logic",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "\"loc_threshold\": 300,  # Keep business logic focused",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "\"method_threshold\": 50,  # Framework classes can be large",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1200,
      "current_context": "\"loc_threshold\": 1200,  # Framework complexity acceptable",
      "suggested_constant": "BUSINESS_THRESHOLD_1200",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "\"method_threshold\": 25,  # Database/messaging classes",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 600,
      "current_context": "\"loc_threshold\": 600,  # Infrastructure coordination",
      "suggested_constant": "BUSINESS_THRESHOLD_600",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "\"method_threshold\": 40,  # Test classes can have many test methods",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 800,
      "current_context": "\"loc_threshold\": 800,  # Test files can be long",
      "suggested_constant": "BUSINESS_THRESHOLD_800",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18,
      "current_context": "\"method_threshold\": 18,  # Conservative default",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "\"parameter_threshold\": 6,  # NASA compliance",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if method_count > 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "consistency_score = 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "if context == ClassContext.BUSINESS_LOGIC and cohesion_score < 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "if cohesion_score < 0.4:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "if cohesion_score < 0.2 and method_count > 40:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "if cohesion_score < 0.2 and method_count > 40:",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "base_cohesion = (1.0 - responsibility_penalty * 0.6) * consistency_score",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "elif context not in [ClassContext.FRAMEWORK, ClassContext.UTILITY] and cohesion_score < 0.4:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if method_count > 30 and cohesion_score < 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if method_count > 50 and cohesion_score < 0.2:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "if method_count > 50 and cohesion_score < 0.2:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "MECE_QUALITY_THRESHOLD = 0.80",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "OVERALL_QUALITY_THRESHOLD = 0.75",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "NASA_COMPLIANCE_THRESHOLD = 0.80",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "MECE_QUALITY_THRESHOLD = 0.70",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.65,
      "current_context": "OVERALL_QUALITY_THRESHOLD = 0.65",
      "suggested_constant": "BUSINESS_THRESHOLD_0_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "if availability.get(\"availability_score\", 0) < 0.3:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "MECE_QUALITY_THRESHOLD = getattr(constants, \"MECE_QUALITY_THRESHOLD\", 0.80)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "OVERALL_QUALITY_THRESHOLD = getattr(constants, \"OVERALL_QUALITY_THRESHOLD\", 0.75)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.5,
      "current_context": "if availability.get(\"availability_score\", 0) > 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "def __init__(self, similarity_threshold=0.7):",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "parser.add_argument(\"--duplication-threshold\", type=float, default=0.7,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "parser.add_argument(\"--confidence-threshold\", type=float, default=0.8, help=\"Confidence threshold for correlations\")",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 95,
      "current_context": "parser.add_argument(\"--compliance-threshold\", type=int, default=95, help=\"Compliance threshold percentage (0-100)\")",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "parser.add_argument(\"--correlation-threshold\", type=float, default=0.7,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "if availability.get(\"availability_score\", 0) < 0.3:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"overall_quality_score\": 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "\"score\": 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"mece_analysis\": {\"score\": 0.75, \"duplications\": []},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "self.overall_quality_score = 0.75",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "self.nasa_compliance_score = 0.85",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "return {\"connascence_violations\": [], \"nasa_violations\": [], \"nasa_compliance_score\": 0.85}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "self.duplication_analyzer = UnifiedDuplicationAnalyzer(similarity_threshold=0.7)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "\"score\": 0.8,  # Fallback score",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"mece_analysis\": {\"score\": 0.75, \"duplications\": []},  # Fallback score",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "quality_score = max(0.0, 1.0 - (total_violations * 0.01))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 88,
      "current_context": "line_number=88,",
      "suggested_constant": "BUSINESS_THRESHOLD_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "threshold = template.get(\"confidence_threshold\", 0.75)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "base_confidence *= 0.8  # Reduce confidence for below-threshold patterns",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.95,
      "current_context": "\"performance\": 0.95,  # Very high for performance patterns",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "\"architecture\": 0.8,  # Moderate for architecture patterns",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "\"quality\": 0.85  # Good for quality patterns",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "base_score += 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if base_score > 0.8:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "base_improvement = pattern.confidence_score * pattern.success_rate * 50  # Max 50% improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.3,
      "current_context": "\"performance\": 1.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_1_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"architecture\": 0.8,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "\"quality\": 0.9",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "if pattern.confidence_score < 0.7:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "if effectiveness.effectiveness_score > 0.7:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"confidence_threshold\": 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "\"confidence_threshold\": 0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "\"confidence_threshold\": 0.75",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "\"confidence_threshold\": 0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "if avg_improvement > 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "base_score += 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "elif base_score > 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "elif avg_improvement > 20:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "base_score += 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "expected_improvement=pattern.success_rate * 50,  # Estimated",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "effectiveness_score=min(1.0, max(0.0, performance_improvement / 50)),",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "type_scores[pattern_type] = type_scores.get(pattern_type, 0) + 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"success_rate\": len([s for s in effectiveness_scores if s > 0.7]) / len(effectiveness_scores),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "self.detection_threshold = 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "'precision_validation': 0.3,  # Highest weight for precision phase",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "'performance_optimization': 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "'linter_integration': 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "penalty = (critical_violations * 0.2) + (high_violations * 0.1) + (len(violations) * 0.02)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "\"threshold\": 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"weight\": 0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "\"threshold\": 0.9,  # >90% improvement is suspicious",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "\"weight\": 0.9",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "\"threshold\": 0.1,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"weight\": 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.01,
      "current_context": "\"threshold\": 0.01,  # <10ms for complex analysis",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "\"weight\": 0.6",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "SecurityLevel.MINIMAL: {\"compliance\": 0.70, \"theater\": 0.50, \"overall\": 0.60},",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.5,
      "current_context": "SecurityLevel.MINIMAL: {\"compliance\": 0.70, \"theater\": 0.50, \"overall\": 0.60},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "SecurityLevel.MINIMAL: {\"compliance\": 0.70, \"theater\": 0.50, \"overall\": 0.60},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "SecurityLevel.STANDARD: {\"compliance\": 0.80, \"theater\": 0.70, \"overall\": 0.75},",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "SecurityLevel.STANDARD: {\"compliance\": 0.80, \"theater\": 0.70, \"overall\": 0.75},",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "SecurityLevel.STANDARD: {\"compliance\": 0.80, \"theater\": 0.70, \"overall\": 0.75},",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "SecurityLevel.ENHANCED: {\"compliance\": 0.90, \"theater\": 0.80, \"overall\": 0.85},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "SecurityLevel.ENHANCED: {\"compliance\": 0.90, \"theater\": 0.80, \"overall\": 0.85},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "combined_score = (nasa_result.compliance_score * 0.7) + (theater_result.compliance_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "combined_score = (nasa_result.compliance_score * 0.7) + (theater_result.compliance_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if theater_score > 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "weight = phase_weights.get(phase_name, 0.25)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "if threat_landscape.get(threat, 0.0) > 0.1:  # 10% threshold for critical threats",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "penalty = (critical_violations * 0.2) + (high_violations * 0.1) + (len(violations) * 0.02)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "penalty = (critical_violations * 0.2) + (high_violations * 0.1) + (len(violations) * 0.02)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "confidence=0.85,",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.3,
      "current_context": "low_confidence_count = sum(1 for v in violations if v.get('confidence', 1.0) < 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "severity_score = {'critical': 4, 'high': 3, 'medium': 2, 'low': 1}.get(violation.severity, 1)",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20.0,
      "current_context": "threat_score = min(1.0, (count * avg_severity) / 20.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_20_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "severity=\"high\" if theater_score > 0.8 else \"medium\",",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "algorithm_penalty = len(algorithm_violations) * 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "total_penalty = (similarity_penalty + algorithm_penalty) * 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"threshold_used\": getattr(duplication_result, \"similarity_threshold\", 0.7),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.5,
      "current_context": "similarity = violation.get(\"similarity_score\", 0.5)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2.5,
      "current_context": "analysis_time=2.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_2_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "(\"NASA Compliance\", f\"{result.nasa_compliance_score:.1%}\", result.nasa_compliance_score >= 0.80),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "| NASA Compliance | {'\u2705' if result.nasa_compliance_score >= 0.80 else '\u274c'} | {result.nasa_compliance_score:.1%} |",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "| Remediation Ready | {'\u2705' if result.remediation_confidence >= 0.30 else '\u274c'} | {result.remediation_confidence:.1%} |",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "self.nasa_param_threshold = 6  # NASA Power of Ten rule",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "if param_count > 6:  # NASA threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "if compliance_result.score < 0.82:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "compliance_result.score = 0.82",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "test_coverage=0.85,  # Add test coverage bonus",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "documentation_score=0.75  # Add documentation bonus",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2.3,
      "current_context": "analysis_time=2.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_2_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "nasa_compliance_score=0.82,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "file_count=25,",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 12.5,
      "current_context": "analysis_time=12.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_12_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2.5,
      "current_context": "analysis_time=2.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_2_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "\"six_sigma_level\": 6.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "nasa_penalty = (critical_count * 0.1) + (high_count * 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "nasa_penalty = (critical_count * 0.1) + (high_count * 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "return (comment_score * 0.3 + density_score * 0.4 + function_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "context={\"function_length\": length, \"threshold\": 50},",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "return (comment_score * 0.3 + density_score * 0.4 + function_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "return (comment_score * 0.3 + density_score * 0.4 + function_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "await asyncio.sleep(0.1)  # Simulate processing time",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "await asyncio.sleep(0.4)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if result.theater_detection_score < 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "if result.confidence_score < 0.3:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "consensus_achieved=agreement_score >= 0.7,  # 70% agreement threshold",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "performance_score = 1.0 / max(0.1, agent._get_average_performance())",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "weight = result.confidence_score * (1.0 - result.metadata.get('fault_count', 0) * 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "low_weight: float = 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "acceptable_threshold: float = 0.80  # 80%+",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "if score < 0.80:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.5,
      "current_context": "\"low_weight\": 0.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "\"excellent_threshold\": 0.95,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "\"good_threshold\": 0.90,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "\"acceptable_threshold\": 0.80,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "base_score = min(base_score, 0.70)  # Cap at 70% for hard failures",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "if documentation_score is not None and documentation_score > 0.90:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "elif test_coverage < 0.80:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "elif documentation_score < 0.70:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.96,
      "current_context": "{\"name\": \"With High Coverage\", \"violations\": test_violations, \"file_count\": 3, \"test_coverage\": 0.96},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_96",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "{\"name\": \"Production Ready\", \"violations\": test_violations[:3], \"file_count\": 3, \"test_coverage\": 0.95, \"documentation_score\": 0.90}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "{\"name\": \"Production Ready\", \"violations\": test_violations[:3], \"file_count\": 3, \"test_coverage\": 0.95, \"documentation_score\": 0.90}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "bonus_points += self.config.test_coverage_bonus * 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "elif documentation_score is not None and documentation_score > 0.70:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "bonus_points += self.config.documentation_bonus * 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'regression_threshold': 0.2,      # 20% slower than baseline",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "'critical_threshold': 0.5        # 50% slower than baseline",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2000,
      "current_context": "'critical_threshold': 2000       # 2GB memory usage",
      "suggested_constant": "BUSINESS_THRESHOLD_2000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "'high_threshold': 80,            # 80% CPU usage",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'critical_threshold': 95         # 95% CPU usage",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.583,
      "current_context": "'target_threshold': 0.583,       # 58.3% target improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_583",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'minimum_threshold': 0.2         # 20% minimum improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "self.similarity_threshold = 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "self.performance_threshold = 0.1  # 100ms threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "if correlation.correlation_score >= 0.3:  # Filter weak correlations",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "path_correlation * 0.3 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "type_correlation * 0.25 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if len(self.correlation_cache) > 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "self.correlation_cache[cache_key] = self.correlation_cache[cache_key][-50:]",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "self.performance_cache[perf_corr.phase] = self.performance_cache[perf_corr.phase][-50:]",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "measurement_timestamp=row[6],",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50000,
      "current_context": "assert len(violations) < 50000, \"Excessive violations indicate analysis error\"",
      "suggested_constant": "BUSINESS_THRESHOLD_50000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 11,
      "current_context": "for rule_id in range(1, 11):",
      "suggested_constant": "BUSINESS_THRESHOLD_11",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "return min(0.3, avg_similarity * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "4: \"All loops bounded\",",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "6: \"Limited variable scope\",",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if score < 0.8:  # Rule-specific threshold",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 4,
      "current_context": "elif rule_id == 4:  # Loop bounds rule",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "dup.get('similarity_score', 0.5) for dup in duplications",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "return min(0.3, avg_similarity * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'similarity_threshold': 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "penalty = min(1.0, unbounded_count * 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "penalty = min(1.0, missing_assertions * 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "threshold=25,",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "threshold=0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "threshold=0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 4.0,
      "current_context": "threshold=4.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.33,
      "current_context": "threshold=1.33,",
      "suggested_constant": "BUSINESS_THRESHOLD_1_33",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "threshold=0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "passed=len(god_objects) <= 25,",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "passed=mece_score >= 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "passed=arch_health >= 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 4.0,
      "current_context": "passed=sigma_level >= 4.0,  # Minimum 4-sigma requirement",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "score=sigma_level / 6.0,  # Normalize to 0.0-1.0",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.33,
      "current_context": "passed=cpk_value >= 1.33,",
      "suggested_constant": "BUSINESS_THRESHOLD_1_33",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "recommendation=\"Decompose large classes\" if len(god_objects) > 25 else \"Acceptable\"",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "recommendation=\"Eliminate code duplications\" if mece_score < 0.75 else \"Good\"",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "recommendation=\"Improve architectural structure\" if arch_health < 0.75 else \"Healthy\"",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 11,
      "current_context": "'rule_weights': {f'rule_{i}': 1.0 for i in range(1, 11)}",
      "suggested_constant": "BUSINESS_THRESHOLD_11",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "failed_rules = [rule for rule, score in rule_scores.items() if score < 0.8]",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "recommendation=\"Improve process to achieve 6-sigma quality\" if sigma_level < 6.0 else \"Excellent\"",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.33,
      "current_context": "recommendation=\"Improve process capability\" if cpk_value < 1.33 else \"Capable process\"",
      "suggested_constant": "BUSINESS_THRESHOLD_1_33",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "passed=risk_score <= 0.3 and vulnerabilities == 0,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "score=max(0.0, 1.0 - len(god_objects) / 50.0),",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "return 0.7  # Assume moderate documentation",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50000,
      "current_context": "assert len(violations) < 50000, \"Excessive violations indicate analysis error\"",
      "suggested_constant": "BUSINESS_THRESHOLD_50000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "if overall_quality < 0.7:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.5,
      "current_context": "if coupling_score > 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'excellent': 0.9,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "coupling_score = min(1.0, coupling_density + severity_factor * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "(1.0 - coupling_score) * 20 + # Coupling impact (inverted)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "self.violation_weights.get(v.get('severity', 'medium'), 2) * 1.5",
      "suggested_constant": "SCORING_WEIGHT_1_5",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 40,
      "current_context": "overall_quality * 40 +       # Overall quality impact",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "def __init__(self, similarity_threshold: float = 0.7):",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 20,
      "current_context": "max_possible_weight = files_analyzed * 20  # Assume max 20 weight per file",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "nasa_max_weight = files_analyzed * 15  # NASA rules are strict",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20.0,
      "current_context": "nasa_score = max(0.0, 1.0 - (total_weight / 20.0))  # Normalize to 20 max weight",
      "suggested_constant": "BUSINESS_THRESHOLD_20_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "self.correlation_threshold = 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "self.deduplication_threshold = 0.9",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.2,
      "current_context": "coverage_consistency['score'] * 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "return correlation_factors / max(total_factors, 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "metric_consistency['score'] * 0.4 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "violation_consistency['score'] * 0.4 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18,
      "current_context": "if len(methods) > 18:  # Temporary adjusted God Object threshold for CI/CD",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "if param_count > 6:  # NASA Rule: max 6 parameters",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "if max_depth > 4:  # NASA Rule: max 4 levels of nesting",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "\"score\": 1.0 if critical_violations == 0 else 0.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "high_similarity_clusters = [c for c in duplication_clusters if c.get(\"similarity_score\", 0) >= 0.9]",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2.5,
      "current_context": "\"weight\": 2.5,",
      "suggested_constant": "SCORING_WEIGHT_2_5",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 0.8,
      "current_context": "\"current\": 0.8 if critical_violations == 0 else 0.5,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.5,
      "current_context": "\"current\": 0.8 if critical_violations == 0 else 0.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"correlation_score\": 0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "\"correlation_score\": min(0.9, len(complex_duplications) / max(len(duplication_clusters), 1)),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "\"correlation_score\": min(0.95, len(hotspot_files) / max(len(file_violations), 1)),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "correlation_threshold: float = 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.583,
      "current_context": "performance_target: float = 0.583  # 58.3% improvement target",
      "suggested_constant": "BUSINESS_THRESHOLD_0_583",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "byzantine_score = byzantine_results.get('consensus_score', 0.9)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "theater_score = theater_results.get('reality_score', 0.9)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'cache_hit_rate': monitor_data.get('cache_hit_rate', 0.8),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'parallel_efficiency': parallel_results.get('efficiency', 0.75),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'byzantine_score': byzantine_results.get('consensus_score', 0.9),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'theater_score': theater_results.get('reality_score', 0.9),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.583,
      "current_context": "'optimization_score': min(1.0, improvement / 0.583),  # Normalize against target",
      "suggested_constant": "BUSINESS_THRESHOLD_0_583",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'compliance_score': max(0.0, 1.0 - (critical_violations * 0.2))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "result.nasa_compliance_score >= 0.82):",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.583,
      "current_context": "performance_target: float = 0.583  # 58.3% improvement target",
      "suggested_constant": "BUSINESS_THRESHOLD_0_583",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.583,
      "current_context": "performance_threshold: float = 0.583",
      "suggested_constant": "BUSINESS_THRESHOLD_0_583",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "correlation_threshold: float = 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "nasa_weight = 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "performance_weight = 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "correlation_weight = 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "consensus_weight = 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if c.get('correlation_score', 0) > 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.583,
      "current_context": "min(1.0, integrated_result.performance_improvement / 0.583) * performance_weight +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_583",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if memory_utilization > 0.8:",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 4,
      "current_context": "self.thread_pool = ThreadPoolExecutor(max_workers=4)",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 96.71,
      "current_context": "\"current_value\": 96.71,",
      "suggested_constant": "SCORING_WEIGHT_96_71",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 0.9,
      "current_context": "if self._calculate_current_memory() > self.memory_stats.max_memory_bytes * 0.9:",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.8,
      "current_context": "strong_patterns = [k for k, v in self.pattern_strength.items() if v > 0.8]",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "self.safety_violations = self.safety_violations[-50:]",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "measurement_timestamp=row[6],",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "\"timeout_seconds\": 300",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1000000,
      "current_context": "dpmo = (len(violations) / total_opportunities) * 1_000_000",
      "suggested_constant": "BUSINESS_THRESHOLD_1000000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"mece_score\": 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score = 1.0 - (critical_violations * 0.1 + high_violations * 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "score = 1.0 - (critical_violations * 0.1 + high_violations * 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"overall_quality_score\": 0.75  # CI-safe score",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "\"score\": 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 100000,
      "current_context": "return f\"violation_{hash(str(violation)) % 100000}_{base}\"",
      "suggested_constant": "BUSINESS_THRESHOLD_100000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "violation_penalty = min(0.5, len(all_violations) * 0.01)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "violation_penalty = min(0.5, len(all_violations) * 0.01)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "limited_files = python_files[:50]",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.001,
      "current_context": "'files_per_second': len(limited_files) / max((analysis_time / 1000), 0.001)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_001",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'high': 0.8,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.6,
      "current_context": "'medium': 0.6,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "multiplier *= 1.5",
      "suggested_constant": "SCORING_WEIGHT_1_5",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 1.3,
      "current_context": "multiplier *= 1.3",
      "suggested_constant": "SCORING_WEIGHT_1_3",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 1.2,
      "current_context": "multiplier *= 1.2",
      "suggested_constant": "SCORING_WEIGHT_1_2",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 15,
      "current_context": "self.max_methods = self._get_config('max_methods', 15)",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "weight=6.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "weight=6.0 if param_count > 5 else 4.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "weight=6.0 if param_count > 5 else 4.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.0,
      "current_context": "weight=9.0 if method_count > 30 else 7.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_9_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "weight=4.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'high': 0.9,    # Apply automatically with high confidence",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "'medium': 0.7,  # Suggest with manual review",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "'min_confidence': 0.9,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "'min_confidence': 0.7,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "'max_class_methods': 15,       # Rule 4: Class methods <= 15",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'min_test_coverage': 0.80,     # Rule 10: 80% test coverage",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "'nasa_compliance': 0.40,       # 40% weight for NASA compliance",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "'violation_density': 0.25,     # 25% weight for violation density",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'severity_distribution': 0.20, # 20% weight for severity balance",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "max_possible = 8 * 4  # Max connascence weight * max severity",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "if score >= 0.95:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.95,
      "current_context": "if score >= 0.95:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 4,
      "current_context": "weights = {'critical': 4, 'high': 3, 'medium': 2, 'low': 1}",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'overall_score': 0.75,  # Conservative estimate",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "'nasa_compliance_score': 0.80,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "elif score >= 0.90:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "elif score >= 0.95:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "elif score >= 0.90:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 20,
      "current_context": "rule_scores['rule_4'] = max(0, 1.0 - (god_objects / 20))",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "rule_scores['rule_6'] = max(0, 1.0 - (param_violations / 15))",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "severity_multiplier = {'critical': 4, 'high': 3, 'medium': 2, 'low': 1}",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "elif score >= 0.85:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "elif score >= 0.90:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "elif score >= 0.80:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.2,
      "current_context": "return 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "elif score >= 0.80:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "elif score >= 0.80:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "elif score >= 0.70:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "elif score >= 0.75:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "elif score >= 0.70:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "elif score >= 0.60:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "severity_multiplier = {'critical': 4, 'high': 3, 'medium': 2, 'low': 1}",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "if risk_score >= 20:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "base_penalty = 0.05",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "base_weights = {\"connascence\": 0.4, \"nasa\": 0.3, \"duplication\": 0.3}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "base_weights = {\"connascence\": 0.4, \"nasa\": 0.3, \"duplication\": 0.3}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "base_weights = {\"connascence\": 0.4, \"nasa\": 0.3, \"duplication\": 0.3}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if nasa_score < 0.5:  # Poor NASA compliance",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "base_weights[\"nasa\"] += 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "base_weights[\"connascence\"] -= 0.05",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "base_weights[\"duplication\"] -= 0.05",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if duplication_score < 0.5:  # High duplication",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "base_weights[\"duplication\"] += 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "base_weights[\"connascence\"] -= 0.05",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "base_weights[\"nasa\"] -= 0.05",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "critical_rule_penalty += 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "penalty = rule_weights.get(nasa_rule, 0.05)  # Default penalty",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "similarity_score = cluster.get(\"similarity_score\", 0.5)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "connascence_score = max(0.0, 1.0 - (connascence_index * 0.01))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "if len(duplication_clusters) > 15:",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if c.get(\"similarity_score\", 0) > 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'overall_score': result.metrics.get('overall_score', 0.75),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "max_quality = 4.0",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "max_arch = 4.0",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "compliance_score += 0.5  # Partial credit for legacy compatibility",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if error_handling_score >= 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.5,
      "current_context": "'score': 9.5,  # High score for basic security",
      "suggested_constant": "BUSINESS_THRESHOLD_9_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 8.5,
      "current_context": "'score': 8.5,  # Good score for basic testing",
      "suggested_constant": "BUSINESS_THRESHOLD_8_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "results['score'] = 6.0",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.5,
      "current_context": "if score >= 9.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_9_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.5,
      "current_context": "if self.overall_score >= 9.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_9_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "if score < 6.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.0,
      "current_context": "elif score >= 9.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_9_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.0,
      "current_context": "elif self.overall_score >= 9.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_9_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9,
      "current_context": "stage_scores = [self.audit_results.get(f'stage_{i}', {}).get('score', 0) for i in range(1, 9)]",
      "suggested_constant": "BUSINESS_THRESHOLD_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.0,
      "current_context": "'production_ready': self.overall_score >= 9.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_9_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.5,
      "current_context": "'defense_industry_ready': self.overall_score >= 9.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_9_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.0,
      "current_context": "'nasa_compliant': self.overall_score >= 9.0",
      "suggested_constant": "BUSINESS_THRESHOLD_9_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.5,
      "current_context": "'zero_defect_ready': self.overall_score >= 9.5",
      "suggested_constant": "BUSINESS_THRESHOLD_9_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 8.5,
      "current_context": "elif score >= 8.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_8_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.5,
      "current_context": "print(\"Defense industry production deployment: APPROVED\" if summary['overall_score'] >= 9.5 else \"REVIEW REQUIRED\")",
      "suggested_constant": "BUSINESS_THRESHOLD_9_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.0,
      "current_context": "print(f\"Production Ready: {'YES' if self.overall_score >= 9.0 else 'REVIEW REQUIRED'}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_9_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.5,
      "current_context": "print(f\"Defense Industry Ready: {'YES' if self.overall_score >= 9.5 else 'IMPROVEMENT NEEDED'}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_9_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "status_color = \"#4CAF50\" if overall_score > 0.8 else \"#FF9800\" if overall_score > 0.5 else \"#F44336\"",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "status_emoji = \"\u2705\" if overall_score > 0.8 else \"\u26a0\ufe0f\" if overall_score > 0.5 else \"\u274c\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "status_color = \"#4CAF50\" if overall_score > 0.8 else \"#FF9800\" if overall_score > 0.5 else \"#F44336\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "status_emoji = \"\u2705\" if overall_score > 0.8 else \"\u26a0\ufe0f\" if overall_score > 0.5 else \"\u274c\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "coupling_score = data.get('coupling_score', 0.5)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "complexity_score = data.get('complexity_score', 0.5)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "maintainability_index = data.get('maintainability_index', 0.5)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if architectural_health < 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "if coupling_score > 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "if complexity_score > 0.7:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "hotspot_score = max(0.0, 1.0 - (len(critical_hotspots) * 0.3) - (len(major_hotspots) * 0.1))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "complexity_score = max(0.0, 1.0 - (god_object_count * 0.1) - (max(0, avg_file_size - 200) / 1000))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "hotspot_score = max(0.0, 1.0 - (len(critical_hotspots) * 0.3) - (len(major_hotspots) * 0.1))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "keep_count = int(self.max_errors * 0.8)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "def __init__(self, threshold: int = 15):",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "def run_analyzer(self, analyzer_type: str, path: str, threshold: int = 15) -> List[ConnascenceViolation]:",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "parser.add_argument(\"--threshold\", type=int, default=15, help=\"Analysis threshold\")",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "god_object_analyzer = self.analyzers[\"god_object\"](threshold=15)",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"overall_quality_score\": 0.8,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "\"overall_quality_score\": 0.85,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "\"connascence_index\": total_violations * 0.1,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "overall_quality_score=metrics.get(\"overall_quality_score\", 0.8),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "NASA_COMPLIANCE_THRESHOLD = 0.85  # Slightly lower for CI stability",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "MECE_QUALITY_THRESHOLD = 0.70  # Lower for CI stability",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.65,
      "current_context": "OVERALL_QUALITY_THRESHOLD = 0.65  # Lower for CI stability",
      "suggested_constant": "BUSINESS_THRESHOLD_0_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "MECE_QUALITY_THRESHOLD = 0.75",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "OVERALL_QUALITY_THRESHOLD = 0.70",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "\"overall_quality_score\": 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "\"nasa_compliance_score\": 0.85,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "\"nasa_compliance_score\": 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "MECE_QUALITY_THRESHOLD = max(0.0, min(1.0, getattr(constants_module, 'MECE_QUALITY_THRESHOLD', 0.75)))",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "OVERALL_QUALITY_THRESHOLD = max(0.0, min(1.0, getattr(constants_module, 'OVERALL_QUALITY_THRESHOLD', 0.70)))",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "'overall_quality_score': 0.75,  # Safe default for CI",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "'nasa_compliance_score': 0.85,  # Safe default for CI",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "'mece': {'mece_score': 0.75},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "'correlation': {'correlation_score': 0.88}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "<p><strong>{data.get('mece', {}).get('mece_score', 0.75):.2f}</strong></p>",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "<p><strong>{data.get('correlation', {}).get('correlation_score', 0.88):.1%}</strong></p>",
      "suggested_constant": "BUSINESS_THRESHOLD_0_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "- **Score**: {results.get('mece', {}).get('mece_score', 0.75):.2f}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "- **Status**: {'[OK] PASS' if results.get('mece', {}).get('mece_score', 0.75) >= 0.75 else '[FAIL] FAIL'}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "- **Status**: {'[OK] PASS' if results.get('mece', {}).get('mece_score', 0.75) >= 0.75 else '[FAIL] FAIL'}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "weight = 6.0",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.0,
      "current_context": "weight=9.0",
      "suggested_constant": "BUSINESS_THRESHOLD_9_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18,
      "current_context": "DEFAULT_METHOD_THRESHOLD = 18",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 700,
      "current_context": "DEFAULT_LOC_THRESHOLD = 700",
      "suggested_constant": "BUSINESS_THRESHOLD_700",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "\"high-priority\" if severity_score > 7.0 else \"medium-priority\" if severity_score > 4.0 else \"low-priority\"",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "def __init__(self, max_methods: int = 15, max_lines: int = 200):",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if complexity_score > 50:  # High complexity threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "confidence=0.7,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "self.max_files = 50  # Very aggressive limit for CI/CD (was 500)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 120,
      "current_context": "self.timeout_seconds = 120  # 2-minute timeout for CI/CD (was 300)",
      "suggested_constant": "BUSINESS_THRESHOLD_120",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"mece_score\": 0.75,  # Reasonable fallback score",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "MECE_SIMILARITY_THRESHOLD = 0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.5,
      "current_context": "final_score = max(0.0, mece_score - (similarity_penalty * 0.5))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "\"duplications\": duplications[:20],  # Limit to top 20",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "\"similarity_score\": 0.95,  # High similarity for exact signatures",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if report.nasa_pot10_score < 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "if report.dfars_compliance_score < 90:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "if report.nist_compliance_score < 85:",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "if report.dod_compliance_score < 90:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "if report.overall_certification_score < 90:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if report.overall_certification_score >= 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "report.dod_compliance_score * 0.15  # DoD weighted 15%",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "elif report.overall_certification_score >= 85:",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "report.nist_compliance_score * 0.2 +  # NIST weighted 20%",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "elif report.overall_certification_score >= 70:",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "report.nasa_pot10_score * 0.4 +  # NASA POT10 weighted 40%",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "report.dfars_compliance_score * 0.25 +  # DFARS weighted 25%",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if metrics.compliance_score >= 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 11,
      "current_context": "for rule_num in range(1, 11):",
      "suggested_constant": "BUSINESS_THRESHOLD_11",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "self.fixable_rules = {2, 3, 4, 6, 7}  # Rules that can be auto-fixed",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "self.fixable_rules = {2, 3, 4, 6, 7}  # Rules that can be auto-fixed",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "elif metrics.compliance_score >= 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "rule_number=4,",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "rule_number=6,",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "assertion = f\"{' ' * (indent + 4)}assert True, 'NASA Rule 4: Added assertion'\"",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if cert_report.overall_certification_score >= 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "if metrics.get('overall_score', 0) < 90:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if metrics.get('nasa_score', 0) < 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "if cert_report.overall_certification_score < 85:",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if cert_report.nasa_pot10_score < 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if score >= 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if cert_report.nasa_pot10_score < 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "if cert_report.dfars_compliance_score < 90:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "elif cert_report.overall_certification_score >= 85:",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "elif 85 <= score < 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "elif 85 <= score < 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "elif score < 85:",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "if execution_time > 0.1:  # > 100ms",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "self._perf_max_exec_time = 0.5  # Default",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "self._perf_max_memory_mb = 50  # Default",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "compliance_level = 'compliant' if compliance_score >= 0.8 else 'non_compliant'",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "penalty = (high_severity_violations * 0.2) + (total_violations * 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "penalty = (high_severity_violations * 0.2) + (total_violations * 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "compliance_level = 'compliant' if compliance_score >= 0.8 else 'non_compliant'",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "penalty = (high_severity_violations * 0.2) + (medium_severity_violations * 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "penalty = (high_severity_violations * 0.2) + (medium_severity_violations * 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "'timeout_seconds': sc_config.get('timeout_seconds', 300),",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.0,
      "current_context": "'critical': 9.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_9_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "score = 1.0 if path_validation_enabled and allowed_paths else 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score -= len(errors) * 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score -= len(warnings) * 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "return ValidationResult(is_valid=True, warnings=warnings, score=0.5)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score = max(0.0, 1.0 - (len(errors) * 0.5) - (len(missing_env_vars) * 0.1))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "score = max(0.0, 1.0 - (len(missing_sections) * 0.3) - (len(errors) * 0.2))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score = max(0.0, 1.0 - (len(warnings) * 0.1))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "score = max(0.0, 1.0 - (len(errors) * 0.5) - (len(missing_env_vars) * 0.1))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score = max(0.0, 1.0 - (len(missing_sections) * 0.3) - (len(errors) * 0.2))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score += 20",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score += 20",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score += 20",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score += 20",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score += 20",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "if percentage >= 90:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "elif percentage >= 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "elif percentage >= 70:",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.0,
      "current_context": "'critical': config.get('critical_threshold', 9.0),",
      "suggested_constant": "BUSINESS_THRESHOLD_9_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "'medium': config.get('medium_threshold', 4.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "if security_score >= 90:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if total_issues > 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "if overall_score < 70:",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "elif security_score >= 70:",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "elif security_score >= 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "\"requires_immediate_attention\": critical_issues > 0 or overall_score < 50",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "security_score = max(0, 100 - (critical_issues * 25) - (high_issues * 15) - (total_issues * 5))",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "overall_score = max(0, 100 - (critical_issues * 20) - (total_issues * 2))",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "security_score = max(0, 100 - (critical_issues * 25) - (high_issues * 15) - (total_issues * 5))",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "security_score = max(0, 100 - (critical_vulns * 20) - (high_vulns * 10) - (total_vulns * 2))",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "if risk_score >= 75:",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "risk_score = (vulnerable_ratio * 50) + (total_vulns * 5)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "elif risk_score >= 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "elif risk_score >= 25:",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "def __init__(self, requests_per_hour: int = 5000):",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"connascence_index\": analysis_data.get(\"connascence_index\", 0.85),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "\"overall_quality_score\": analysis_data.get(\"overall_quality_score\", 0.88),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_88",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.88,
      "current_context": "- **Overall Quality Score**: {result.get(\"overall_quality_score\", 0.88):.2f}",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_88",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50.0,
      "current_context": "current_score = 50.0  # Default score",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "if predicted_score < 70:",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "\"data_integrity\": 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "\"access_controls\": 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "\"audit_trail\": 0.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "\"change_management\": 0.15,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "\"documentation\": 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.35,
      "current_context": "\"data_protection\": 0.35,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_35",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "\"consent_management\": 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "\"privacy_by_design\": 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "\"data_encryption\": 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "\"access_controls\": 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "\"audit_logs\": 0.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "\"physical_safeguards\": 0.15,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "\"training\": 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.35,
      "current_context": "\"cardholder_data_protection\": 0.35,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_35",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "\"encryption\": 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "\"monitoring\": 0.05",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "\"risk_management\": 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "\"security_controls\": 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "\"supplier_management\": 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "\"identify\": 0.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "\"protect\": 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "\"recover\": 0.15",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "\"injection_prevention\": 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "\"authentication\": 0.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "return min(1.0, max(0.1, overall_confidence))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if standard == ComplianceStandard.GDPR and features.get(\"data_protection\", 0) < 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if standard == ComplianceStandard.SOX and features.get(\"audit_trail\", 0) < 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "if score < 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if features.get(\"consent_management\", 0) < 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if features.get(\"access_controls\", 0) < 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "low_features = [name for name, score in features.items() if score < 0.3]",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if method_lines > 50:  # Long method threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "if method_count > 20 or attribute_count > 15 or class_lines > 500:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "if method_count > 20 or attribute_count > 15 or class_lines > 500:",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "score = 50.0  # Base score",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "\"comment_density\": 0.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "\"variable_naming_quality\": 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "\"function_naming_quality\": 0.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "\"class_cohesion\": 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "\"input_validation_coverage\": 0.4,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "if features.get(\"avg_function_length\", 0) > 20:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "if features.get(\"comment_density\", 0) < 0.1:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "if features.get(\"function_naming_quality\", 1) < 0.7:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.4,
      "current_context": "\"cyclomatic_complexity\": -0.4,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "\"duplicate_code_ratio\": -0.4",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "\"hardcoded_secrets\": -0.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "\"sql_injection_risk\": -0.4,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "contribution = feature_value * weight * 50  # Scale contribution",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if features.get(\"input_validation_coverage\", 0) < 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "if features.get(\"input_validation_coverage\", 0) < 0.7:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"critical\": 0.85",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "\"low\": 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "\"medium\": 0.6,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "return min(1.0, max(0.1, confidence))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "def find_god_objects_fast(self, ast_tree: ast.AST, method_threshold: int = 20) -> List[Dict[str, Any]]:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "self._memory_pressure_threshold = int(max_memory * 0.8)  # 80% threshold",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "self._aggressive_cleanup_threshold = int(max_memory * 0.9)  # 90% threshold",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 4,
      "current_context": "entries_to_remove = max(1, len(self._cache) // 4)",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "old_hashes = list(self._ast_cache.keys())[:-50]",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "improvement_detected = len(resolved_violations) > 0 or quality_change > 0.05",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "regression_detected = len(new_violations) > 0 or quality_change < -0.05",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "self.leak_threshold_mb = 50.0  # 50MB growth indicates potential leak",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "return (increasing_count / (len(memory_values) - 1)) > 0.7",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 5000,
      "current_context": "assert 100 <= max_snapshots <= 5000, \"max_snapshots must be 100-5000\"",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "if not self.baseline_memory or len(self.memory_samples) < 20:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "if stats.current_usage_mb > stats.average_usage_mb * 1.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50000,
      "current_context": "assert 1000 <= max_tracked_resources <= 50000, \"max_tracked_resources must be 1000-50000\"",
      "suggested_constant": "BUSINESS_THRESHOLD_50000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 150,
      "current_context": "self.current_metrics.debounce_delays_ms = self.current_metrics.debounce_delays_ms[-150:]",
      "suggested_constant": "BUSINESS_THRESHOLD_150",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "memory_score += 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "memory_score += 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "if files_loaded > 20:  # Handled pressure gracefully",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "memory_score += 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "memory_score += 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "success = memory_score >= 75  # 75/100 points needed",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "success = total_improvement >= 50.0  # Target: 50%+ improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "'hit_rate_validation': 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'warming_validation': 0.20,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'streaming_validation': 0.20,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "'memory_validation': 0.15,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'cumulative_validation': 0.20",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 17,
      "current_context": "report.append(\"-\" * 17)",
      "suggested_constant": "BUSINESS_THRESHOLD_17",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 33,
      "current_context": "report.append(\"-\" * 33)",
      "suggested_constant": "BUSINESS_THRESHOLD_33",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 35,
      "current_context": "report.append(\"-\" * 35)",
      "suggested_constant": "BUSINESS_THRESHOLD_35",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 23,
      "current_context": "report.append(\"-\" * 23)",
      "suggested_constant": "BUSINESS_THRESHOLD_23",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "memory_pressure_threshold=0.85",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 85.0,
      "current_context": "warming_effectiveness >= 85.0 and      # 85%+ files warmed",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75.0,
      "current_context": "target_improvement_percent=75.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_75_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "test_score = 1.0 if result.success else 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.2,
      "current_context": "test_score = min(1.0, test_score * 1.2)  # Bonus for exceeding targets",
      "suggested_constant": "BUSINESS_THRESHOLD_1_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "memory_pressure_threshold: float = 0.8  # Stop warming at 80% memory",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "assert 0.1 <= self.memory_pressure_threshold <= 1.0, \"memory_pressure_threshold must be 0.1-1.0\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75.0,
      "current_context": "\"min_hit_rate\": 75.0,  # Minimum hit rate percentage",
      "suggested_constant": "BUSINESS_THRESHOLD_75_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "\"max_memory_usage\": 90.0,  # Maximum memory usage percentage",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "for file_path in test_files[:50]:  # Limit to first 50 files",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 7200,
      "current_context": "if 0 < time_until_access < 7200:  # Within 2 hours",
      "suggested_constant": "BUSINESS_THRESHOLD_7200",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "score += 50.0 / (time_until_access / 3600 + 1)",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "target_utilization: float = 0.75",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "scale_up_threshold: float = 0.9",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "scale_down_threshold: float = 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "if self.metrics.memory_usage_mb > self.config.memory_pressure_threshold_mb * 1.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "return current_size < self.config.max_pool_size * 0.8  # Conservative growth",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50.0,
      "current_context": "self.max_memory_per_worker_mb = 50.0  # Memory limit per worker",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "\"min_hit_rate_percent\": 90.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300.0,
      "current_context": "\"timeout_seconds\": 300.0",
      "suggested_constant": "BUSINESS_THRESHOLD_300_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "memory_pressure_threshold=0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50.0,
      "current_context": "target_met = avg_improvement >= 50.0",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "timeout_seconds: int = 300  # 5 minutes",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "(max(0.0, 1.0 - connascence_index * 0.01) * 0.4) + (nasa_compliance_score * 0.3) + (duplication_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "penalty = severity_weights.get(severity, 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "duplication_score = max(0.0, 1.0 - (len(all_duplication_clusters) * 0.1))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "(max(0.0, 1.0 - connascence_index * 0.01) * 0.4) + (nasa_compliance_score * 0.3) + (duplication_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "(max(0.0, 1.0 - connascence_index * 0.01) * 0.4) + (nasa_compliance_score * 0.3) + (duplication_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "(max(0.0, 1.0 - connascence_index * 0.01) * 0.4) + (nasa_compliance_score * 0.3) + (duplication_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "success = integration_score >= 80.0  # 80%+ tests must pass",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "report.append(\"-\" * 20)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 19,
      "current_context": "report.append(\"-\" * 19)",
      "suggested_constant": "BUSINESS_THRESHOLD_19",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 35,
      "current_context": "report.append(\"-\" * 35)",
      "suggested_constant": "BUSINESS_THRESHOLD_35",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\" * 70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "target_improvement_percent=80.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "'target_achieved': overall_improvement >= 50.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "priority_files=self.test_files[:50],  # Warm top 50 files",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "'claim_validated': 85 <= traversal_reduction_percent <= 90,",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "'claim_validated': 85 <= traversal_reduction_percent <= 90,",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "if combined_score >= 0.9:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "efficiency = (hit_rate * 0.7) + (time_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "efficiency = (hit_rate * 0.7) + (time_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "elif combined_score >= 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "elif combined_score >= 0.7:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "elif combined_score >= 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15.0,
      "current_context": "regression_threshold_percent: float = 15.0",
      "suggested_constant": "BUSINESS_THRESHOLD_15_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "statistical_confidence: float = 0.95",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 15.0,
      "current_context": "regression_threshold: float = 15.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_15_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "confidence_level: float = 0.95) -> Dict[str, Any]:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 168,
      "current_context": "assert 1 <= self.max_baseline_age_hours <= 168, \"max_age must be 1-168 hours\"",
      "suggested_constant": "BUSINESS_THRESHOLD_168",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "assert 0.8 <= self.statistical_confidence <= 0.99, \"confidence must be 0.8-0.99\"",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.99,
      "current_context": "assert 0.8 <= self.statistical_confidence <= 0.99, \"confidence must be 0.8-0.99\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_99",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "assert 0.8 <= confidence_level <= 0.99, \"confidence must be 0.8-0.99\"",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.99,
      "current_context": "assert 0.8 <= confidence_level <= 0.99, \"confidence must be 0.8-0.99\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_99",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "assert len(data) >= 4, \"data must have at least 4 samples for outlier detection\"",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "if abs(slope) < 0.01:  # Threshold for \"stable\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.001,
      "current_context": "return 0.001  # Very significant",
      "suggested_constant": "BUSINESS_THRESHOLD_0_001",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "return 0.05   # Significant",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "return 0.2    # Somewhat significant",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"Increase statistical confidence threshold\" if precision < 0.8 else",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 2.5,
      "current_context": "if z_score > 2.5:  # 2.5 standard deviations",
      "suggested_constant": "BUSINESS_THRESHOLD_2_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"Consider lowering regression thresholds\" if recall < 0.8 else",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 32.19,
      "current_context": "validation_results.ast_time_improvement_percent = 32.19  # From previous results",
      "suggested_constant": "BUSINESS_THRESHOLD_32_19",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 73.0,
      "current_context": "validation_results.thread_contention_reduction_percent = 73.0  # From previous results",
      "suggested_constant": "BUSINESS_THRESHOLD_73_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 100000,
      "current_context": "assert 10 <= size <= 100000, \"Dataset size must be 10-100,000 for safety\"",
      "suggested_constant": "BUSINESS_THRESHOLD_100000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "assert 1 <= duration_seconds <= 300, \"Duration must be 1-300 seconds\"",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "if quality < 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "return statistics.mean(scores) if scores else 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "report.append(\"-\" * 20)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 38,
      "current_context": "report.append(\"-\" * 38)",
      "suggested_constant": "BUSINESS_THRESHOLD_38",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 22,
      "current_context": "report.append(\"-\" * 22)",
      "suggested_constant": "BUSINESS_THRESHOLD_22",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "metrics.confidence_scoring_time_ms = data_size * 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "metrics.correlation_accuracy = 0.75 + (data_size % 10) * 0.02  # 75-95% accuracy",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.6,
      "current_context": "metrics.clustering_quality_score = 0.6 + (data_size % 15) * 0.02  # 60-90% quality",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "final_analysis.get('overall_performance_score', 0) >= 0.7 else",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'similarity_score': 0.8 + (i % 3) * 0.05,  # 0.8-0.9 similarity",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "metrics.correlation_accuracy = 0.75 + (data_size % 10) * 0.02  # 75-95% accuracy",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "metrics.clustering_quality_score = 0.6 + (data_size % 15) * 0.02  # 60-90% quality",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "'similarity_score': 0.8 + (i % 3) * 0.05,  # 0.8-0.9 similarity",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "metrics.clustering_quality_score = 0.6 + (data_size % 15) * 0.02  # 60-90% quality",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "high_quality_correlations = sum(1 for s in strengths if s >= 0.7)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 1.2,
      "current_context": "cluster_scores.append(strength * 1.2)  # Boost for important patterns",
      "suggested_constant": "BUSINESS_THRESHOLD_1_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score = max(0.0, 1.0 - len(optimizations) * 0.1)  # Deduct 10% per optimization needed",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "if score >= 0.9:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "elif score >= 0.8:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "elif score >= 0.7:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "high_impact_correlations = [c for c in correlations if c.get(\"correlation_score\", 0) > 0.7]",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "\"weight\": correlation.get(\"correlation_score\", 0.5),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "if cpu_usage > 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score -= 20",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "if memory_usage_percent > 90:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "score -= 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "elif memory_usage_percent > 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "score -= 15",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "\"score\": 75,",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "elif memory_usage_percent > 70:",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "\"status\": \"healthy\" if health_score > 80 else \"warning\" if health_score > 60 else \"critical\",",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "def get_file_analysis_history(self, file_path: str, limit: int = 50) -> List[Dict[str, Any]]:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "self.aggregated_result.file_analysis_history[new_result.file_path] = file_history[-80:]",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "confidence=0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 25,
      "current_context": "overall_score += 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "overall_score += 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "overall_score += 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "overall_score += 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "confidence=0.9",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "confidence=0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 1.5,
      "current_context": "'connascence_of_type': 1.5,",
      "suggested_constant": "SCORING_WEIGHT_1_5",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 0.75,
      "current_context": "'quality_threshold': 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "'overall_quality_threshold': 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 4.0,
      "current_context": "'targetSigma': 4.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "'sigmaShift': 1.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.2,
      "current_context": "'performanceThreshold': 1.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_1_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "'maxExecutionTime': 5000,",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "'targetSigma': 4.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "'sigmaShift': 1.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'nasaPOT10Target': 95,",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'nasaPOT10': 95,",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "overall_quality_threshold=quality_data.get('overall_quality_threshold', 0.75),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 20,
      "current_context": "'method_threshold': 20,",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "'low': 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "'medium': 0.6,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "'audit_retention_days': 2555,  # 7 years",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'quality_threshold': 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 6.0,
      "current_context": "if target_sigma is not None and not (1.0 <= target_sigma <= 6.0):",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.33,
      "current_context": "'cpk_minimum': 1.33,",
      "suggested_constant": "BUSINESS_THRESHOLD_1_33",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "'sigma_level_target': 6.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.4e-06,
      "current_context": "'defect_density_target': 3.4e-6  # 3.4 per million",
      "suggested_constant": "BUSINESS_THRESHOLD_3_4e-06",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "'sigma_level_minimum': 4.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.33,
      "current_context": "'cpk_minimum': 1.33,",
      "suggested_constant": "BUSINESS_THRESHOLD_1_33",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "'violation_limits': {'critical': 0, 'high': 5, 'medium': 20, 'low': 50}",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "'violation_limits': {'critical': 0, 'high': 5, 'medium': 20, 'low': 50}",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 45,
      "current_context": "hardcoded_values_count=45,  # config_keywords hardcoded in values_detector",
      "suggested_constant": "BUSINESS_THRESHOLD_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 23,
      "current_context": "magic_literals_count=23,    # MAX_POSITIONAL_PARAMS and thresholds",
      "suggested_constant": "BUSINESS_THRESHOLD_23",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "80: \"network_port\",",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 418,
      "current_context": "418: \"http_status\",  # I'm a teapot",
      "suggested_constant": "BUSINESS_THRESHOLD_418",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 429,
      "current_context": "429: \"http_status\",  # Rate limited",
      "suggested_constant": "BUSINESS_THRESHOLD_429",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "if 0.70 <= value <= 0.95:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.95,
      "current_context": "if 0.70 <= value <= 0.95:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "'compliance_score': 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "'test_coverage': 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "'code_quality': 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'security_score': 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "if theater_score >= 75:",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "if (metrics.code_quality_score >= 95.0 and",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20.0,
      "current_context": "metrics.cyclomatic_complexity > 20.0):",
      "suggested_constant": "BUSINESS_THRESHOLD_20_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "elif theater_score >= 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "elif theater_score >= 25:",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "confidence=0.8,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "confidence=0.7,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 25,
      "current_context": "theater_score = min(100, (critical_patterns * 25) + (high_patterns * 15) + (total_patterns * 5))",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "theater_score = min(100, (critical_patterns * 25) + (high_patterns * 15) + (total_patterns * 5))",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "confidence=0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.98,
      "current_context": "confidence=0.98,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_98",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "score -= empty_ratio * 50",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "score -= 40",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score -= issue_count * 20",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "score -= issue_count * 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score += 20",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "confidence=0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "confidence=0.7,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "confidence=0.75,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "confidence=0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "overall_genuine = genuine_count >= len(validation_results) * 0.75",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.5,
      "current_context": "if perfect_count > len(metrics) * 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score -= 20",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "is_genuine=score >= 70,",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "is_genuine=score >= 70,",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70.0,
      "current_context": "threshold=70.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_70_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "if self._get_json_depth(data) > 20:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"nasa_compliance_change\": analysis_results.get(\"nasa_compliance_score\", 0.75) - baseline.nasa_compliance_score,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"duplication_change\": analysis_results.get(\"duplication_score\", 0.8) - baseline.duplication_score,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "nasa_compliance_score=analysis_results.get(\"nasa_compliance_score\", 0.75),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "duplication_score=analysis_results.get(\"duplication_score\", 0.8),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "medium_max: int = 15",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "low_max: int = 50",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "duplication_threshold: float = 0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 20,
      "current_context": "low_max=20,",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "medium_max=15,",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "low_max=50,",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "duplication_threshold=0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "nasa_compliance_min=0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "duplication_threshold=0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 15,
      "current_context": "\"god_object_limit\": 15,",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "\"god_object_limit\": 25,",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"duplication_threshold\": 0.8,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 15,
      "current_context": "\"high_violations\": 15",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"nasa_compliance_min\": 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "\"god_object_limit\": 50,",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"duplication_threshold\": 0.7,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "\"high_violations\": 50",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"score\": 0.75,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"score\": 0.75,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 45,
      "current_context": "defects = 45  # Very low defect rate",
      "suggested_constant": "BUSINESS_THRESHOLD_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.2,
      "current_context": "\"overhead_limit_percent\": 1.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_1_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.002,
      "current_context": "time.sleep(0.002)  # 2ms enterprise overhead",
      "suggested_constant": "BUSINESS_THRESHOLD_0_002",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)  # Security layer",
      "suggested_constant": "BUSINESS_THRESHOLD_0_001",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.0005,
      "current_context": "time.sleep(0.0005) # Audit logging",
      "suggested_constant": "BUSINESS_THRESHOLD_0_0005",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.0003,
      "current_context": "time.sleep(0.0003) # Quality metrics",
      "suggested_constant": "BUSINESS_THRESHOLD_0_0003",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.0002,
      "current_context": "time.sleep(0.0002) # ML optimization",
      "suggested_constant": "BUSINESS_THRESHOLD_0_0002",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.2,
      "current_context": "\"within_sla\": overhead_percent <= 1.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_1_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.2,
      "current_context": "\"performance_overhead_limit\": 1.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_1_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.5,
      "current_context": "\"meets_target\": sigma_level >= 4.5",
      "suggested_constant": "BUSINESS_THRESHOLD_4_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"\\\\n\" + \"=\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"\\\\n\" + \"=\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"\\n\" + \"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.92,
      "current_context": "violations['factuality'] = metrics.factuality_p90 >= quality_slos.get('factuality_p90', 0.92)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_92",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "violations['coverage'] = metrics.coverage_p95 >= quality_slos.get('coverage_p95', 0.90)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "violations['pass_rate'] = metrics.pass_rate_week >= quality_slos.get('pass_rate_week', 0.85)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "'pass_rate_week': 0.85    # Prompt evaluation",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "passed = success_rate >= 0.85 and theater_violations == 0",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "passed=pass_rate >= 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "pass_rate=1.0 if validation_result.status == ValidationStatus.OK else 0.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "validation_status=ValidationStatus.OK if pass_rate >= 0.85 else ValidationStatus.PARTIAL,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "passed=validation_result.status == ValidationStatus.OK and pass_rate >= 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "if len(methods) > 15:  # God Object threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\" * 70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\" * 70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "\"previous_score\": 0.90,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"baseline\": 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"\\n\" + \"-\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "'target_score': 40,",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "if self.metrics['test_theater'] > 20:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "if self.metrics['mock_theater'] > 15:",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "if score <= 40:",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "'status': 'PASS' if theater_score <= 40 else 'FAIL',",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "\"max_parallel_tasks\": 4",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 7200,
      "current_context": "\"max_deployment_time\": 7200,  # 2 hours",
      "suggested_constant": "BUSINESS_THRESHOLD_7200",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "estimated_duration=25,",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "estimated_duration=15,",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "\"successful_checks\": 20,",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9,
      "current_context": "\"nasa_pot10\": 9,",
      "suggested_constant": "BUSINESS_THRESHOLD_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "\"timeout_per_agent\": 300,  # 5 minutes per agent",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"theater_detection_threshold\": 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 95,
      "current_context": "if compliance_percentage >= 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "elif compliance_percentage >= 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 55,
      "current_context": "'execution_time_minutes': 55,  # Phase 2 target",
      "suggested_constant": "BUSINESS_THRESHOLD_55",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'memory_efficiency_score': 0.85,  # Phase 2 achieved",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "'security_scan_time_minutes': 25,  # Phase 2 target",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 35,
      "current_context": "'cost_reduction_percent': 35  # Phase 2 achieved",
      "suggested_constant": "BUSINESS_THRESHOLD_35",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 58,
      "current_context": "'execution_time_minutes': 58,  # Slight regression from 55",
      "suggested_constant": "BUSINESS_THRESHOLD_58",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.83,
      "current_context": "'memory_efficiency_score': 0.83,  # Slight regression from 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_83",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 27,
      "current_context": "'security_scan_time_minutes': 27,  # Slight regression from 25",
      "suggested_constant": "BUSINESS_THRESHOLD_27",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 33,
      "current_context": "'cost_reduction_percent': 33  # Slight regression from 35",
      "suggested_constant": "BUSINESS_THRESHOLD_33",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "if self.results['overall_success_rate'] >= 0.85:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'validation_passed': import_success_rate >= 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'validation_passed': config_success_rate >= 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "execution_tests['execution_success_rate'] = 0.3  # Current baseline from specs",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "execution_tests['execution_success_rate'] = 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "execution_tests['validation_passed'] = execution_tests['execution_success_rate'] >= 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.1,
      "current_context": "threshold = target_value * 1.1",
      "suggested_constant": "BUSINESS_THRESHOLD_1_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "threshold = target_value * 0.9",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "print(f\"Validation Status: {'PASSED' if results['overall_success_rate'] >= 0.85 else 'NEEDS IMPROVEMENT'}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "if success_rate < 0.85:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 298,
      "current_context": "(\"analyzer/enterprise/validation/EnterprisePerformanceValidator.py\", 298),",
      "suggested_constant": "BUSINESS_THRESHOLD_298",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 265,
      "current_context": "(\"analyzer/enterprise/compliance/audit_trail.py\", 265),",
      "suggested_constant": "BUSINESS_THRESHOLD_265",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 284,
      "current_context": "(\"analyzer/enterprise/integration/EnterpriseIntegrationFramework.py\", 284),",
      "suggested_constant": "BUSINESS_THRESHOLD_284",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 241,
      "current_context": "(\"analyzer/enterprise/detector/EnterpriseDetectorPool.py\", 241),",
      "suggested_constant": "BUSINESS_THRESHOLD_241",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "doc_compliant = self.phase_status['phase_4_docs'].violations_after < 50",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "phase.progress = 100.0 if result['returncode'] == 0 else 80.0",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1400,
      "current_context": "if len(src_violations) > 1400:",
      "suggested_constant": "BUSINESS_THRESHOLD_1400",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "if 0.01 < duration < 30:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "if fail_count == 0 and pass_count >= 4:",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"\\n\" + \"=\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 116,
      "current_context": "(\"scripts/unicode_removal_linter.py\", 116, \"unterminated triple-quote\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_116",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "(\".claude/.artifacts/artifact_manager.py\", 15, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "(\".claude/.artifacts/quality_analysis.py\", 25, \"missing comma\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 17,
      "current_context": "(\".claude/.artifacts/quality_validator.py\", 17, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_17",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 140,
      "current_context": "(\".claude/artifacts/performance_scaling_test.py\", 140, \"missing comma\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_140",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "(\".claude/.artifacts/compliance/compliance_packager.py\", 15, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 111,
      "current_context": "(\".claude/coordination/adaptive/agent_deployment_protocol.py\", 111, \"f-string mismatch\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_111",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 126,
      "current_context": "(\".claude/performance/baselines/baseline_collector.py\", 126, \"f-string unmatched\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_126",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 83,
      "current_context": "(\".claude/performance/monitoring/realtime_monitor.py\", 83, \"f-string mismatch\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_83",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 146,
      "current_context": "(\".claude/performance/validation/theater_detector.py\", 146, \"f-string mismatch\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_146",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 41,
      "current_context": "(\"analyzer/integrations/tool_coordinator.py\", 41, \"missing except/finally\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_41",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 176,
      "current_context": "(\"analyzer/performance/ci_cd_accelerator.py\", 176, \"f-string mismatch\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_176",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 121,
      "current_context": "(\"analyzer/enterprise/compliance/audit_trail.py\", 121, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_121",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 17,
      "current_context": "(\"analyzer/enterprise/compliance/core.py\", 17, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_17",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 21,
      "current_context": "(\"analyzer/enterprise/compliance/nist_ssdf.py\", 21, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_21",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 26,
      "current_context": "(\"analyzer/enterprise/compliance/reporting.py\", 26, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_26",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 28,
      "current_context": "(\"analyzer/enterprise/compliance/soc2.py\", 28, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_28",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 19,
      "current_context": "(\"analyzer/enterprise/compliance/validate_retention.py\", 19, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_19",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 744,
      "current_context": "(\"analyzer/enterprise/detector/EnterpriseDetectorPool.py\", 744, \"missing except/finally\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_744",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 189,
      "current_context": "(\"analyzer/enterprise/integration/EnterpriseIntegrationFramework.py\", 189, \"missing except/finally\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_189",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 423,
      "current_context": "(\"analyzer/enterprise/validation/EnterprisePerformanceValidator.py\", 423, \"missing except/finally\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_423",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 27,
      "current_context": "(\"src/cycles/profit_calculator.py\", 27, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_27",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 28,
      "current_context": "(\"src/cycles/scheduler.py\", 28, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_28",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 26,
      "current_context": "(\"src/cycles/weekly_cycle.py\", 26, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_26",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 29,
      "current_context": "(\"src/cycles/weekly_siphon_automator.py\", 29, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_29",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "(\"src/security/dfars_compliance_engine.py\", 80, \"f-string mismatch\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 143,
      "current_context": "(\"src/security/enhanced_audit_trail_manager.py\", 143, \"f-string unmatched\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_143",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 19,
      "current_context": "(\"src/sixsigma/telemetry_config.py\", 19, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_19",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "(\"src/theater-detection/theater-detector.py\", 70, \"missing comma\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 11,
      "current_context": "(\"src/intelligence/data_pipeline/validation/data_validator.py\", 11, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_11",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 518,
      "current_context": "(\"src/intelligence/neural_networks/cnn/pattern_definitions.py\", 518, \"f-string unmatched\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_518",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 358,
      "current_context": "(\"src/intelligence/neural_networks/cnn/pattern_recognizer.py\", 358, \"f-string mismatch\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_358",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 55,
      "current_context": "(\"src/linter-integration/agents/integration_specialist_node.py\", 55, \"f-string mismatch\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_55",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 13,
      "current_context": "(\"src/safety/integration/trading_safety_bridge.py\", 13, \"unexpected indent\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_13",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 66,
      "current_context": "(\"tests/workflow-validation/comprehensive_validation_report.py\", 66, \"f-string unmatched\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_66",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 47,
      "current_context": "(\"tests/workflow-validation/python_execution_tests.py\", 47, \"f-string mismatch\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_47",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 339,
      "current_context": "(\"tests/workflow-validation/workflow_test_suite.py\", 339, \"unterminated string\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_339",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "\"=\" * 80,",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "\"=\" * 80,",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 298,
      "current_context": "(\"analyzer/enterprise/validation/EnterprisePerformanceValidator.py\", 298),",
      "suggested_constant": "BUSINESS_THRESHOLD_298",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 265,
      "current_context": "(\"analyzer/enterprise/compliance/audit_trail.py\", 265),",
      "suggested_constant": "BUSINESS_THRESHOLD_265",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 284,
      "current_context": "(\"analyzer/enterprise/integration/EnterpriseIntegrationFramework.py\", 284),",
      "suggested_constant": "BUSINESS_THRESHOLD_284",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 241,
      "current_context": "(\"analyzer/enterprise/detector/EnterpriseDetectorPool.py\", 241),",
      "suggested_constant": "BUSINESS_THRESHOLD_241",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "\"threshold\": 15,",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.92,
      "current_context": "\"overall_health_score\": 0.92,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_92",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 45,
      "current_context": "\"info\": 45",
      "suggested_constant": "BUSINESS_THRESHOLD_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 68,
      "current_context": "\"nasa_violations\": 68,",
      "suggested_constant": "BUSINESS_THRESHOLD_68",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 647,
      "current_context": "\"linter_violations\": 647,",
      "suggested_constant": "BUSINESS_THRESHOLD_647",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 92.0,
      "current_context": "\"nasa_compliance\": 92.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_92_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"duplication_ratio\": 0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 46.0,
      "current_context": "\"test_coverage\": 46.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_46_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "\"documentation_coverage\": 95.0",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 34,
      "current_context": "{\"class\": \"EnhancedDFARSAuditTrailManager\", \"methods\": 34, \"file\": \"src/security/enhanced_audit_trail_manager.py\", \"status\": \"REFACTORED\"},",
      "suggested_constant": "BUSINESS_THRESHOLD_34",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 29,
      "current_context": "{\"class\": \"DFARSComplianceEngine\", \"methods\": 29, \"file\": \"src/security/dfars_compliance_engine.py\", \"status\": \"PENDING\"},",
      "suggested_constant": "BUSINESS_THRESHOLD_29",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 26,
      "current_context": "{\"class\": \"CDIProtectionFramework\", \"methods\": 26, \"file\": \"src/security/cdi_protection_framework.py\", \"status\": \"PENDING\"},",
      "suggested_constant": "BUSINESS_THRESHOLD_26",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 23,
      "current_context": "{\"class\": \"DetectorPoolRaceDetector\", \"methods\": 23, \"file\": \"src/byzantium/race_condition_detector.py\", \"status\": \"PENDING\"},",
      "suggested_constant": "BUSINESS_THRESHOLD_23",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 23,
      "current_context": "{\"class\": \"TheaterDetector\", \"methods\": 23, \"file\": \"src/theater-detection/theater-detector.py\", \"status\": \"PENDING\"},",
      "suggested_constant": "BUSINESS_THRESHOLD_23",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 22,
      "current_context": "{\"class\": \"RealityValidationSystem\", \"methods\": 22, \"file\": \"src/theater-detection/reality-validator.py\", \"status\": \"PENDING\"},",
      "suggested_constant": "BUSINESS_THRESHOLD_22",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 22,
      "current_context": "{\"class\": \"DFARSContinuousRiskAssessment\", \"methods\": 22, \"file\": \"src/security/continuous_risk_assessment.py\", \"status\": \"PENDING\"},",
      "suggested_constant": "BUSINESS_THRESHOLD_22",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18,
      "current_context": "{\"class\": \"ByzantineConsensusCoordinator\", \"methods\": 18, \"file\": \"src/byzantium/byzantine_coordinator.py\", \"status\": \"PENDING\"},",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20.0,
      "current_context": "'failure_rate_threshold': 20.0,  # Percentage",
      "suggested_constant": "BUSINESS_THRESHOLD_20_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "'recovery_timeout': 300,  # 5 minutes",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "FailureCategory.QUALITY_GATES: 15,",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "FailureCategory.TESTING: 20,",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "FailureCategory.SECURITY: 25,",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20.0,
      "current_context": "'failure_rate_threshold': 20.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_20_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if failure_rate >= 50 or failure_count >= 10:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.2,
      "current_context": "await asyncio.sleep(1.2)",
      "suggested_constant": "BUSINESS_THRESHOLD_1_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if len(workflow_runs) >= 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "return \"high\" if failure_rate >= 20 else \"medium\"",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 140,
      "current_context": "\"description\": description[:140],  # GitHub limit",
      "suggested_constant": "BUSINESS_THRESHOLD_140",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "- **Threshold**: {'Met' if authenticity_score >= 0.7 else 'Not Met'} (0.70 minimum)\"\"\"",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if cohesion < 0.5:  # Low cohesion threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'nasa_compliance_score': 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "metrics['nasa_compliance_score'] = data['nasa_compliance'].get('score', 0.85)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "metrics['mece_score'] = 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "metrics['nasa_compliance_score'] = data['nasa_pot10_compliance'].get('overall_score', 0.85)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "metrics['nasa_compliance_score'] = 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "metrics['mece_score'] = data['comprehensive_metrics'].get('mece_score', 0.85)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 999,
      "current_context": "metrics.get('critical_violations', 999) == 0 and",
      "suggested_constant": "BUSINESS_THRESHOLD_999",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 999,
      "current_context": "metrics.get('god_objects_count', 999) <= 2",
      "suggested_constant": "BUSINESS_THRESHOLD_999",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 999,
      "current_context": "metrics.get('critical_violations', 999) == 0",
      "suggested_constant": "BUSINESS_THRESHOLD_999",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "metrics['nasa_compliance_score'] = data['comprehensive_metrics'].get('nasa_compliance_score', 0.85)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'overall_quality_score': cm.get('overall_quality_score', 0.75),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "'architecture_health': cm.get('architecture_health', 0.85),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 75,
      "current_context": "'maintainability_index': cm.get('maintainability_index', 75)",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'overall_quality_score': 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "'architecture_health': 0.85,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 75,
      "current_context": "'maintainability_index': 75",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'nasa_compliance_score': 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 11,
      "current_context": "\"total_failures\": 11,",
      "suggested_constant": "BUSINESS_THRESHOLD_11",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"test_assertion_ratio\": lambda v: v >= 0.7,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if report.compliance_score >= 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if report.compliance_score < 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "elif report.compliance_score >= 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "target_score = 0.70",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4719,
      "current_context": "'current_score': 0.4719  # From analyzer output",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4719",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "violations_to_fix = int((target_score - current_score) * 216 * 15)  # Approximate",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report.append(\"-\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 216,
      "current_context": "violations_to_fix = int((target_score - current_score) * 216 * 15)  # Approximate",
      "suggested_constant": "BUSINESS_THRESHOLD_216",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "'execution_time_regression': 0.10,  # 10% regression threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "'memory_efficiency_regression': 0.05,  # 5% regression threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "'success_rate_regression': 0.05,    # 5% regression threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "'cost_increase_threshold': 0.15,    # 15% cost increase threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 55.0,
      "current_context": "'execution_time_minutes': 55.0,     # Phase 2 target",
      "suggested_constant": "BUSINESS_THRESHOLD_55_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'memory_efficiency_score': 0.85,    # Phase 2 achieved",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'success_rate': 0.85,               # Phase 3 target",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25.0,
      "current_context": "'security_scan_time_minutes': 25.0, # Phase 2 target",
      "suggested_constant": "BUSINESS_THRESHOLD_25_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.77,
      "current_context": "'parallel_speedup_factor': 3.77     # Phase 2 measured",
      "suggested_constant": "SCORING_WEIGHT_3_77",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 0.6,
      "current_context": "if estimated_memory_efficiency < 0.6:  # Below 60% efficiency",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "elif regression_percent > 0.15:  # 15% regression",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "elif current_success_rate < 0.7:  # Below 70% success rate",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "estimated_memory_efficiency = baseline_memory_efficiency * 0.9  # Conservative estimate",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.2,
      "current_context": "elif estimated_cost_increase > 0.2:  # 20% cost increase",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "tiered_strategy_score += 0.4",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "tiered_strategy_score += 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "if sum(runner_distribution.values()) >= 6:  # Good distribution",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "tiered_strategy_score += 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\"*50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'cpu_efficiency': 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 45,
      "current_context": "'security_scan_time': 45,  # minutes",
      "suggested_constant": "BUSINESS_THRESHOLD_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'quality_gate_pass_rate': 0.85,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "'validation_passed': tiered_strategy_score >= 0.7",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "'validation_passed': time_savings_theoretical >= 0.4  # At least 40% improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "optimization_score += 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "if cache_stats['memory_efficiency'] < 0.9:  # Good memory management",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.4,
      "current_context": "optimization_score += 0.4",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "optimization_score += 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'validation_passed': security_score >= 0.8  # At least 80% features implemented",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'phase2_score': 0.85,  # Improved with optimizations",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "'phase2_targets_met': overall_improvement >= 0.4,  # 40% overall improvement target",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "'validation_passed': quality_gates_score >= 0.6  # At least 60% features",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "'phase2_validation_passed': overall_validation_score >= 0.7,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "'validation_passed': optimization_score >= 0.7",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'phase1_score': self.baseline_metrics.get('cpu_efficiency', 0.75),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'improvement_percent': (0.85 - 0.75) / 0.75 * 100",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'improvement_percent': (0.85 - 0.75) / 0.75 * 100",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'improvement_percent': (0.85 - 0.75) / 0.75 * 100",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'success_rate': 0.85,               # Phase 3 target",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.85,
      "current_context": "'memory_efficiency': 0.85,          # Phase 2 achieved",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.8,
      "current_context": "actual_efficiency = actual_metrics.get('memory_efficiency', 0.80)  # Fallback estimate",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.85,
      "current_context": "estimated_efficiency = 0.85 * (baseline_exec_time / exec_time) if exec_time > 0 else 0.85",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.75,
      "current_context": "if performance_score < 0.75:  # Less than 75% of targets met",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if monitoring_coverage < 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "if automation_coverage < 0.75:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "if overall_score >= 0.9:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "'e2e_validation_suite': {'required': True, 'weight': 0.15},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'workflow_health_monitoring': {'required': True, 'weight': 0.20},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'automated_rollback_system': {'required': True, 'weight': 0.20},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "'performance_regression_detection': {'required': True, 'weight': 0.15},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "'security_compliance_auditor': {'required': True, 'weight': 0.15},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "'enhanced_quality_gates': {'required': True, 'weight': 0.10},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "'parallel_orchestrator_deployed': {'required': True, 'weight': 0.05}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "estimated_efficiency = 0.85 * (baseline_exec_time / exec_time) if exec_time > 0 else 0.85",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.1,
      "current_context": "weight = validation_data.get('weight', 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "deployment_readiness['overall_readiness_score'] >= 0.8 and",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "overall_score = (component_score * 0.6) + (performance_score * 0.4)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "overall_score = (component_score * 0.6) + (performance_score * 0.4)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "elif overall_score >= 0.8:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "if len(blockers) == 0 and overall_score >= 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"\\n\" + \"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "component_score = (0.5 if implemented else 0.0) + (0.5 if functional else 0.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "component_score = (0.5 if implemented else 0.0) + (0.5 if functional else 0.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "elif overall_score >= 0.7:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if results['success'] >= 95:  # 95% success rate",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 73.0,
      "current_context": "contention_reduction = 73.0  # From baseline measurements",
      "suggested_constant": "BUSINESS_THRESHOLD_73_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.1,
      "current_context": "validation_check = target_hit_rate * 1.1  # 106.37%",
      "suggested_constant": "BUSINESS_THRESHOLD_1_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "elif success_rate >= 80.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 130,
      "current_context": "sys.exit(130)",
      "suggested_constant": "BUSINESS_THRESHOLD_130",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "score += 0.2  # Bonus for having essential files",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "overall_passed = passed_checks >= (total_checks * 0.8)  # 80% pass rate",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "elif check.score < 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if not check.passed and check.score < 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score = min(1.0, (existing_dirs / len(test_dirs)) + (total_test_files / 20))",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score = min(1.0, (len(health_implementations) * 0.3) + (len(monitoring_implementations) * 0.1))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score = min(1.0, (len(health_implementations) * 0.3) + (len(monitoring_implementations) * 0.1))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(f\"\\n{'='*80}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(f\"{'='*80}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(f\"\\n{'='*80}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(f\"{'='*80}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(f\"\\n{'='*80}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(f\"{'='*80}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 19.3,
      "current_context": "\"nasa_compliance\": 19.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_19_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 357058,
      "current_context": "\"dpmo\": 357058,",
      "suggested_constant": "BUSINESS_THRESHOLD_357058",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 35.0,
      "current_context": "\"completion_percentage\": 35.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_35_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15.0,
      "current_context": "\"data\": [15.0, 19.3]",
      "suggested_constant": "BUSINESS_THRESHOLD_15_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 19.3,
      "current_context": "\"data\": [15.0, 19.3]",
      "suggested_constant": "BUSINESS_THRESHOLD_19_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'mece_score': {'value': 0.75, 'critical': False}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "], capture_output=True, text=True, timeout=300)",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "return data.get('overall_security_score', 0) >= 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "'pass_rate': 95.0",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'required_score': 0.90,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.5,
      "current_context": "\"medium_weight\": 0.5,  # Reduced from 1.0",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "\"low_weight\": 0.25,  # Reduced from 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "\"excellent_threshold\": 0.90,  # Reduced from 0.95",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "\"good_threshold\": 0.85,  # Reduced from 0.90",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "\"acceptable_threshold\": 0.75,  # Reduced from 0.80",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "print(\"-\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"magic_literal_threshold\": 0.8,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "\"position_coupling_threshold\": 0.7,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.6,
      "current_context": "\"god_object_threshold\": 0.6",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "\"acceptable_position_coupling_count\": 50,",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "if SECONDS_PER_DAY == 86400 and DFARS_RETENTION_DAYS == 2555:",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"\\n\" + \"=\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"\\n\" + \"=\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 150,
      "current_context": "\"files_analyzed\": 150,",
      "suggested_constant": "BUSINESS_THRESHOLD_150",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "\"performance_score\": 0.88",
      "suggested_constant": "BUSINESS_THRESHOLD_0_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18,
      "current_context": "METHOD_THRESHOLD = 18",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 700,
      "current_context": "LOC_THRESHOLD = 700",
      "suggested_constant": "BUSINESS_THRESHOLD_700",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18,
      "current_context": "\"successful\": 18,",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"-\"*70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if nasa_score < 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "if defense_score < 90:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if total_violations > 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'target_compliance_achieved': results['nasa_compliance'].get('compliance_score', 0) >= 95,",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "return nasa_score >= 85 and defense_score >= 80",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "return nasa_score >= 85 and defense_score >= 80",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 130,
      "current_context": "return 130",
      "suggested_constant": "BUSINESS_THRESHOLD_130",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "(timedelta(days=7) if results['nasa_compliance'].get('compliance_score', 0) < 95",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2.1,
      "current_context": "\"overhead_percent\": 2.1,",
      "suggested_constant": "BUSINESS_THRESHOLD_2_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 58.1,
      "current_context": "\"overhead_ms\": 58.1,",
      "suggested_constant": "BUSINESS_THRESHOLD_58_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "accuracy_achieved = max_precision < 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "\"target_precision_percent\": 0.1,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "\"alert_cooldown_seconds\": 300,",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2.5,
      "current_context": "\"six_sigma_overhead_percent\": {\"warning\": 2.5, \"critical\": 4.0},",
      "suggested_constant": "BUSINESS_THRESHOLD_2_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "\"six_sigma_overhead_percent\": {\"warning\": 2.5, \"critical\": 4.0},",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.5,
      "current_context": "\"feature_flag_overhead_percent\": {\"warning\": 2.0, \"critical\": 3.5},",
      "suggested_constant": "BUSINESS_THRESHOLD_3_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 8000,
      "current_context": "\"pipeline_total_ms\": {\"warning\": 8000, \"critical\": 12000}",
      "suggested_constant": "BUSINESS_THRESHOLD_8000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 12000,
      "current_context": "\"pipeline_total_ms\": {\"warning\": 8000, \"critical\": 12000}",
      "suggested_constant": "BUSINESS_THRESHOLD_12000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "compliance_score = nasa_score * 0.6",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'rule_3': {'name': 'Assertions', 'weight': 0.2, 'min_score': 0.9},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "'rule_7': {'name': 'Memory Bounds', 'weight': 0.25, 'min_score': 0.95},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'rule_8': {'name': 'Error Handling', 'weight': 0.2, 'min_score': 0.85},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'rule_8': {'name': 'Error Handling', 'weight': 0.2, 'min_score': 0.85},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "'rule_9': {'name': 'Loop Bounds', 'weight': 0.15, 'min_score': 0.9},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'rule_9': {'name': 'Loop Bounds', 'weight': 0.15, 'min_score': 0.9},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'rule_10': {'name': 'Function Size', 'weight': 0.2, 'min_score': 0.8}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'rule_10': {'name': 'Function Size', 'weight': 0.2, 'min_score': 0.8}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "rule_analysis['violations'] = violations[:20]  # Limit violations for output",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "security_penalty += min(0.3, secrets_count * 0.15)  # Up to 30% penalty",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "security_component = max(0.0, 0.4 - security_penalty)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "security_penalty += min(0.3, secrets_count * 0.15)  # Up to 30% penalty",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "severity = 'critical' if overall_score < 0.8 else 'high'",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "print(\"\\n\" + \"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "risk_score = (critical_count * 10) + (high_count * 5) + (secrets_count * 15)",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "elif risk_score <= 15:",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "for check_line in range(loop_body_start, min(len(lines), loop_body_start + 20)):",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "base_coverage = 0.6  # Baseline coverage from implemented security controls",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "return 0.15  # 15% estimated false positive rate",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15.2,
      "current_context": "\"industry_average_vulnerabilities\": 15.2,  # Example benchmark",
      "suggested_constant": "BUSINESS_THRESHOLD_15_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"identify\": 0.8,   # Asset management and risk assessment",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "base_coverage += 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "nist_status=\"\" if compliance.get(\"nist\", {}).get(\"overall\", 0.0) > 0.7 else \"\",",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "print(f\"  NIST: {'' if compliance.get('nist', {}).get('overall', 0.0) > 0.7 else ''}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "result = subprocess.run(cmd, capture_output=True, text=True, timeout=300)",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "complexity_increase = 1 + (scale_factor - 1) * 0.15  # 15% complexity increase",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "coordination_overhead = 1 + (scale_factor - 1) * 0.10  # 10% coordination overhead",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.95,
      "current_context": "\"pp\": 1.95,  # Excellent long-term performance",
      "suggested_constant": "BUSINESS_THRESHOLD_1_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "\"baseline_sigma\": 6.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "\"code_quality\": {\"usl\": 100, \"lsl\": 85, \"target\": 95, \"current\": 100},",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "\"code_quality\": {\"usl\": 100, \"lsl\": 85, \"target\": 95, \"current\": 100},",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "\"security_score\": {\"usl\": 100, \"lsl\": 90, \"target\": 98, \"current\": 100},",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 98,
      "current_context": "\"security_score\": {\"usl\": 100, \"lsl\": 90, \"target\": 98, \"current\": 100},",
      "suggested_constant": "BUSINESS_THRESHOLD_98",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "\"nasa_compliance\": {\"usl\": 100, \"lsl\": 90, \"target\": 95, \"current\": 95},",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "\"nasa_compliance\": {\"usl\": 100, \"lsl\": 90, \"target\": 95, \"current\": 95},",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "\"nasa_compliance\": {\"usl\": 100, \"lsl\": 90, \"target\": 95, \"current\": 95},",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "\"test_coverage\": {\"usl\": 100, \"lsl\": 80, \"target\": 90, \"current\": 85}",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "\"test_coverage\": {\"usl\": 100, \"lsl\": 80, \"target\": 90, \"current\": 85}",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "\"test_coverage\": {\"usl\": 100, \"lsl\": 80, \"target\": 90, \"current\": 85}",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "\"code_quality\": {\"ucl\": 100, \"cl\": 95, \"lcl\": 85},",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "\"code_quality\": {\"ucl\": 100, \"cl\": 95, \"lcl\": 85},",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2000,
      "current_context": "\"dpmo\": {\"ucl\": 2000, \"cl\": 500, \"lcl\": 0},",
      "suggested_constant": "BUSINESS_THRESHOLD_2000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.5,
      "current_context": "\"sigma_level\": {\"ucl\": 6.5, \"cl\": 5.5, \"lcl\": 4.5}",
      "suggested_constant": "BUSINESS_THRESHOLD_6_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5.5,
      "current_context": "\"sigma_level\": {\"ucl\": 6.5, \"cl\": 5.5, \"lcl\": 4.5}",
      "suggested_constant": "BUSINESS_THRESHOLD_5_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.5,
      "current_context": "\"sigma_level\": {\"ucl\": 6.5, \"cl\": 5.5, \"lcl\": 4.5}",
      "suggested_constant": "BUSINESS_THRESHOLD_4_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "dpmo = max(0, random.normalvariate(100, 50))",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.99,
      "current_context": "(\"Requirements\", int(base_opportunities * 0.2), 0.99),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_99",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.98,
      "current_context": "(\"Design\", int(base_opportunities * 0.3), 0.98),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_98",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.96,
      "current_context": "(\"Implementation\", int(base_opportunities * 0.4), 0.96),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_96",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"code_complexity_vs_defects\": 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.68,
      "current_context": "\"team_size_vs_coordination\": 0.68,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_68",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "degradation_factor = 1 + (progress * 0.15)  # 15% degradation at peak",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "complexity_factor = 1 + (current_files / start_files - 1) * 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "\"automation_level_vs_quality\": -0.82",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_82",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.2,
      "current_context": "(\"Requirements\", int(base_opportunities * 0.2), 0.99),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "(\"Design\", int(base_opportunities * 0.3), 0.98),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "(\"Implementation\", int(base_opportunities * 0.4), 0.96),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "defects = int(opportunities * defect_rate * random.uniform(0.5, 1.5))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "defects = int(opportunities * defect_rate * random.uniform(0.5, 1.5))",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "significant_change = abs(args.nasa_score - 0.92) > 0.05 or args.current_violations > 5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "THRESHOLD_NASA = 90",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "THRESHOLD_THEATER = 40",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "return {\"coverage_percentage\": 0, \"threshold\": 80}",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "return {\"coverage_percentage\": 0, \"threshold\": 80}",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "return {\"coverage_percentage\": coverage, \"threshold\": 80}",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(f\"\\n{'=' * 50}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "self.target_compliance = 95.0",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "if compliance_pct >= 95.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9,
      "current_context": "'controls': 9,",
      "suggested_constant": "BUSINESS_THRESHOLD_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "elif compliance_pct >= 95.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "elif compliance_pct >= 90.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "if family_data['critical'] and family_compliance >= 95.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "elif compliance_pct >= 90.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "'defense_industry_ready': control_assessment['overall_compliance_percentage'] >= 95.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "if scores['is_critical'] and scores['compliance_percentage'] < 95.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "gap = 95.0 - results['compliance_percentage']",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "'status': 'COMPLIANT' if family_compliance >= 95.0 else 'NON_COMPLIANT'",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "elif family_data['critical'] and family_compliance < 95.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70.0,
      "current_context": "elif compliance_pct >= 70.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_70_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "status_icon = \"PASS\" if scores['compliance_percentage'] >= 95.0 else \"WARN\" if scores['compliance_percentage'] >= 90.0 else \"FAIL\"",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "status_icon = \"PASS\" if scores['compliance_percentage'] >= 95.0 else \"WARN\" if scores['compliance_percentage'] >= 90.0 else \"FAIL\"",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "defense_ready = zero_tolerance_met and overall_score >= 0.95",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'passed': validation_score >= 0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'passed': accuracy_rate >= 0.95,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'passed': performance_claims_verified >= 0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'passed': security_effectiveness >= 0.9,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'passed': framework_effectiveness >= 0.75,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'passed': monitoring_score >= 0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'passed': evidence_score >= 0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "security_validations.append(path_protection_rate >= 0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'security_controls_effective': security_effectiveness >= 0.9",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'frameworks_adequate': framework_effectiveness >= 0.75",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'monitoring_system_adequate': monitoring_score >= 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'evidence_system_adequate': evidence_score >= 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1000000,
      "current_context": "dpmo = defects_per_line * 1_000_000  # Defects Per Million Opportunities",
      "suggested_constant": "BUSINESS_THRESHOLD_1000000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": ") / 4",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if len(node.body) > 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.012,
      "current_context": "self.PERFORMANCE_OVERHEAD_LIMIT = 0.012  # 1.2% max overhead",
      "suggested_constant": "BUSINESS_THRESHOLD_0_012",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.685,
      "current_context": "actual_score = 0.685  # From Phase 3 implementation",
      "suggested_constant": "BUSINESS_THRESHOLD_0_685",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"-\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "elif compliance_score >= 0.7:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "print(\"-\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"-\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"-\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"-\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"-\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\" * 70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "genuine_ratio * 0.3  # 30% weight",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "(compliant_certs / total_certs if total_certs > 0 else 0) * 0.4 +  # 40% weight",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "(1.0 if within_performance_limits else 0.5) * 0.3 +  # 30% weight",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"deployment_recommendation\": \"READY\" if readiness_score >= 0.8 else \"PARTIAL\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "return 0 if readiness[\"overall_score\"] >= 0.7 else 1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "status=\"COMPLIANT\" if compliance_score >= 0.8 else \"PARTIAL\",",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "theater_detection=TheaterDetectionLevel.GENUINE.value if compliance_score >= 0.8 else TheaterDetectionLevel.PARTIAL.value,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "theater_detection=TheaterDetectionLevel.GENUINE.value if compliance_score >= 0.8 else TheaterDetectionLevel.PARTIAL.value,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "(1.0 if within_performance_limits else 0.5) * 0.3 +  # 30% weight",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.35,
      "current_context": "'dfars_compliance': 0.35,      # 35% - Most important for defense",
      "suggested_constant": "BUSINESS_THRESHOLD_0_35",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "'nasa_pot10_compliance': 0.25, # 25% - Critical for quality",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'enterprise_integration': 0.20, # 20% - Important for production",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "'cicd_workflows': 0.10,        # 10% - Automation support",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "'api_endpoints': 0.05,         # 5% - Interface support",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if weighted_score >= 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if dfars_score < 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if nasa_score < 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if enterprise_score < 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if cicd_score < 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "functionality_bonus = (total_func_score / tested_components) * 0.2  # 20% bonus for functionality",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'certification_ready': dfars_score >= 95",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'analyzer_ready': nasa_score >= 95",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'production_ready': enterprise_score >= 95",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'automation_ready': cicd_score >= 95",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "api_score = 80 if security_apis else 60  # Assume API functionality through security components",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'endpoints_ready': api_score >= 95",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "'README.md': {'required': True, 'weight': 20},",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'docs_ready': doc_score >= 95",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "elif weighted_score >= 85:",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'defense_industry_ready': weighted_score >= 95,",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score += 20",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score += 20",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "if len(content) > 5000:  # Substantial implementation",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "return 20  # File exists but has issues",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "elif overall_score >= 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "component_details['compliance_level'] = 75  # File exists but no functionality test",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'compliance_status': 'SUBSTANTIAL COMPLIANCE' if dfars_score >= 95 else 'PARTIAL COMPLIANCE',",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "nasa_score = min(nasa_score + (avg_func_score * 0.3), 100)  # 30% bonus for functionality",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'compliance_status': 'FULL COMPLIANCE' if nasa_score >= 95 else 'PARTIAL COMPLIANCE',",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "enterprise_score = min(enterprise_score + (avg_func_score * 0.2), 100)  # 20% bonus",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'integration_status': 'FULLY INTEGRATED' if enterprise_score >= 95 else 'PARTIALLY INTEGRATED',",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "workflow_details['validation_score'] = 50  # Base score for existing valid YAML",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "cicd_score = min(cicd_score + (avg_validation_score * 0.2), 100)  # 20% bonus",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'cicd_status': 'FULLY OPERATIONAL' if cicd_score >= 95 else 'PARTIALLY OPERATIONAL',",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'api_status': 'FULLY FUNCTIONAL' if api_score >= 95 else 'PARTIALLY FUNCTIONAL',",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'documentation_status': 'COMPREHENSIVE' if doc_score >= 95 else 'ADEQUATE' if doc_score >= 70 else 'INSUFFICIENT',",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "elif weighted_score >= 70:",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score += min(len(classes) * 5, 20)  # Bonus for multiple classes",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score += min(len(functions) * 2, 20)  # Bonus for multiple functions",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "workflow_details['validation_score'] = 20  # File exists but has issues",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if endpoints or file_details['functionality_score'] > 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "'documentation_status': 'COMPREHENSIVE' if doc_score >= 95 else 'ADEQUATE' if doc_score >= 70 else 'INSUFFICIENT',",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "component_details['functionality_score'] = min(len(py_files) * 15, 100)",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "doc_details['score'] = min(len(files) * 20, 100)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "print(f\"   Defense Industry Ready: {'YES' if weighted_score >= 95 else 'NO'}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "print(f\"Defense Industry Ready: {'YES' if overall_score >= 95 else 'NO'}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "component_details['functionality_score'] = min(len(dir_contents) * 20, 100)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "print(f\"\\nNeed {95 - overall_score:.1f} more points for certification readiness\")",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if implementation_score >= 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "print(\"=\" * 25)",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 88,
      "current_context": "elif implementation_score >= 88:",
      "suggested_constant": "BUSINESS_THRESHOLD_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score -= 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "score += 0.2  # Bonus for path traversal protection",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "score += 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "score += 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "if retention_days < 2555:  # 7 years",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "score -= 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score += 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score += 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score -= 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score -= 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score -= 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score -= 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score -= 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "score -= len(missing_sections) * 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "elif compliance_score < 0.88:  # 88% minimum",
      "suggested_constant": "BUSINESS_THRESHOLD_0_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score -= 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score -= 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "score=1.0 - (len(errors) * 0.2)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score=1.0 - (len(errors) * 0.3) - (len(warnings) * 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "score=1.0 - (len(errors) * 0.25)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score=1.0 - (len(errors) * 0.3) - (len(warnings) * 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "threshold = data.get('threshold', 90)",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "threshold = data.get('threshold', 40)",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "threshold = data.get('threshold', 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if theater_score > threshold * 0.8:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "if current_count > max_allowed * 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.1,
      "current_context": "if coverage_pct < threshold * 1.1:  # Within 10% of threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_1_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "outdated_penalty = len(outdated_deps) / total_deps * 0.5  # Less severe than vulnerabilities",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "penalty = (critical_issues * 0.5) + (high_issues * 0.2) + (medium_issues * 0.1) + (low_issues * 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "penalty = (critical_issues * 0.5) + (high_issues * 0.2) + (medium_issues * 0.1) + (low_issues * 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "penalty = (critical_issues * 0.5) + (high_issues * 0.2) + (medium_issues * 0.1) + (low_issues * 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "penalty = (critical_issues * 0.5) + (high_issues * 0.2) + (medium_issues * 0.1) + (low_issues * 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "min(1.0, max(0.0, 1.0 - (complexity - 10) / 20)),  # Complexity factor",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if reality_score >= 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "elif reality_score >= 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "elif reality_score >= 0.4:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "ir_score = 1.0 if ir_status[\"total_incidents\"] > 0 and len(ir_status[\"dfars_reporting_required\"]) == 0 else 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "config_score = 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "risk_score = 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "cdi_score = 1.0 if auth_result[\"authorized\"] and len(inventory) > 0 else 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"-\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "crypto_score = crypto_status[\"compliance_rate\"] * (1.0 if integrity_check[\"integrity_check_passed\"] else 0.5)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2048000,
      "current_context": "details={\"classification\": \"DFARS_COVERED\", \"file_size\": 2048000}",
      "suggested_constant": "BUSINESS_THRESHOLD_2048000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "print_result(\"Overall DFARS Score\", \"PASS\" if cert_score >= 0.95 else \"FAIL\", cert_score)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "print_result(\"Risk Assessment\", \"PASS\" if risk_score >= 0.7 else \"FAIL\", risk_score)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 88,
      "current_context": "return compliance_score >= 88",
      "suggested_constant": "BUSINESS_THRESHOLD_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if compliance_score >= 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 88,
      "current_context": "return compliance_score >= 88",
      "suggested_constant": "BUSINESS_THRESHOLD_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 88,
      "current_context": "\"certification_ready\": compliance_score >= 88,",
      "suggested_constant": "BUSINESS_THRESHOLD_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 88,
      "current_context": "elif compliance_score >= 88:",
      "suggested_constant": "BUSINESS_THRESHOLD_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "final_score = (base_score * 0.7) + (avg_validation_score * 100 * 0.3)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "final_score = (base_score * 0.7) + (avg_validation_score * 100 * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "DFARS_RETENTION_DAYS = 2555  # 7 years",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "GOD_OBJECT_METHOD_THRESHOLD = 15",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "MIN_TEST_COVERAGE = 80.0",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "MIN_DOCUMENTATION_COVERAGE = 90.0",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "MIN_CONFIDENCE_SCORE = 0.75",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "HIGH_SEVERITY_THRESHOLD = 0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.95,
      "current_context": "CRITICAL_SEVERITY_THRESHOLD = 0.95",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "if results['flow_score'] > 0.3:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "'market_data': {'momentum': 0.5, 'volatility': 0.15, 'volume_ratio': 1.3},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "'market_data': {'momentum': 0.5, 'volatility': 0.15, 'volume_ratio': 1.3},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.3,
      "current_context": "'market_data': {'momentum': 0.5, 'volatility': 0.15, 'volume_ratio': 1.3},",
      "suggested_constant": "BUSINESS_THRESHOLD_1_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'income_data': {'high_income': 0.2, 'middle_income': 0.3, 'low_income': 0.5}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "'income_data': {'high_income': 0.2, 'middle_income': 0.3, 'low_income': 0.5}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "'income_data': {'high_income': 0.2, 'middle_income': 0.3, 'low_income': 0.5}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "'market_data': {'momentum': 0.5, 'volatility': 0.15, 'volume_ratio': 1.3},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "'market_data': {'momentum': 0.5, 'volatility': 0.15, 'volume_ratio': 1.3},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.3,
      "current_context": "'market_data': {'momentum': 0.5, 'volatility': 0.15, 'volume_ratio': 1.3},",
      "suggested_constant": "BUSINESS_THRESHOLD_1_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "'income_data': {'high_income': 0.05, 'middle_income': 0.45, 'low_income': 0.5}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.45,
      "current_context": "'income_data': {'high_income': 0.05, 'middle_income': 0.45, 'low_income': 0.5}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "'income_data': {'high_income': 0.05, 'middle_income': 0.45, 'low_income': 0.5}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "'market_data': {'momentum': -0.3, 'volatility': 0.25, 'volume_ratio': 0.8},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'market_data': {'momentum': -0.3, 'volatility': 0.25, 'volume_ratio': 0.8},",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.2,
      "current_context": "'income_data': {'high_income': 0.2, 'middle_income': 0.3, 'low_income': 0.5}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "'income_data': {'high_income': 0.2, 'middle_income': 0.3, 'low_income': 0.5}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "'income_data': {'high_income': 0.2, 'middle_income': 0.3, 'low_income': 0.5}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "elif results['flow_score'] > 0.1:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "'market_data': {'momentum': -0.3, 'volatility': 0.25, 'volume_ratio': 0.8},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "asset_benefit_concentration += price_change * 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "confidence_score=0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "base_score += 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "base_score += 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "base_score -= 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "\"success_rate\": 0.95",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "\"success_rate\": 0.90",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"success_rate\": 0.75",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"success_rate\": 0.80",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"success_rate\": 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "\"effort_hours\": 4,",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"success_rate\": 0.70",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"success_rate\": 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "\"effort_hours\": 6,",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"success_rate\": 0.75",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"success_rate\": 0.70",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "\"success_rate\": 0.95",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"success_rate\": 0.80",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.65,
      "current_context": "\"success_rate\": 0.65",
      "suggested_constant": "BUSINESS_THRESHOLD_0_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "return min(1.0, max(0.1, base_score))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "confidence_score=0.8 if matched_pattern else 0.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "confidence_score=0.8 if matched_pattern else 0.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "existing.confidence_score = min(1.0, existing.confidence_score + 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if rca.confidence_score > 0.8 and rca.estimated_effort_hours <= 2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "signature.confidence_score = max(0.1, signature.confidence_score - 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "signature.confidence_score = min(1.0, signature.confidence_score + 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "signature.confidence_score = max(0.1, signature.confidence_score - 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"high_confidence_causes\": len([rc for rc in root_causes if rc.confidence_score > 0.8]),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"score\": 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "\"passed\": score >= 0.9,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "if in_class and class_method_count > 15:  # God object threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'confidence': 0.9",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "self.similarity_threshold = 0.75",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "base_score = 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "if self._calculate_similarity(message, example) > 0.9:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "return similarity * 0.7  # Slightly lower score for fuzzy match",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "score = min(1.0, score + 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "self.min_confidence_threshold = 0.6",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "score = min(0.9, 0.3 + (pattern_matches * 0.15))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score = min(0.9, 0.3 + (pattern_matches * 0.15))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if cause_type != primary_cause and score >= 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "score = min(0.9, 0.3 + (pattern_matches * 0.15))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score = min(1.0, score + (historical_matches * 0.1))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "validation_result[\"confidence\"] = 0.95",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "elif test_results.get(\"improvement_rate\", 0) > 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "validation_result[\"confidence\"] = 0.70",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "validation_result[\"confidence\"] = 0.30",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "estimated_hours=4,",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "MAX_AST_DEPTH = 20         # NASA Rule 4: Maximum traversal depth",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "MAX_AST_NODES = 5000       # NASA Rule 4: Maximum nodes processed",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "BOUNDED_ANALYSIS_LIMIT = 50       # Function analysis limit",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.03,
      "current_context": "injection_results[\"nasa_compliance_improvement\"] = 0.03  # Expected 3% improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_03",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "complexity_factor = 1.0 - (complexity * 0.2)  # Higher complexity reduces score",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "\"loc_added\": min(phase[\"estimated_loc\"], 25),  # NASA Rule 4 bounded",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "critical_functions = [f for f in priority_functions if f.defensive_score < 0.5]",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "medium_functions = [f for f in priority_functions if 0.5 <= f.defensive_score < 0.75]",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "medium_functions = [f for f in priority_functions if 0.5 <= f.defensive_score < 0.75]",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "remaining_functions = [f for f in priority_functions if f.defensive_score >= 0.75]",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "BOUNDED_OPERATION_LIMIT = 25   # LOC per operation",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "DECOMPOSITION_THRESHOLD = 70   # Functions >70 LOC get priority",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "assert BOUNDED_OPERATION_LIMIT <= 25, \"Operations must be bounded to 25 LOC\"",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "result.compliance_achieved = total_size_reduction >= 20  # Significant improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "\"estimated_operations\": min(estimated_operations, 50),  # Bounded estimate",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9,
      "current_context": "\"weight\": 9,",
      "suggested_constant": "BUSINESS_THRESHOLD_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "\"target_compliance\": 0.88",
      "suggested_constant": "BUSINESS_THRESHOLD_0_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "\"weight\": 4,",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "\"weight\": 6,",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"rule_2\": 0.85,  # Function size (PRIMARY GAP)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "current_compliance = self.current_compliance.get(rule_id, 0.85)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "if report.compliance_gap > 0.05:  # >5% gap",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "(violation_count * 0.1) +  # Violation count impact",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "elif overall_compliance >= 0.85:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 6,
      "current_context": "\"rules\": [r.rule_id for r in priority_reports[3:6]],",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "\"rules\": [r.rule_id for r in priority_reports[6:]],",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "\"expected_improvement\": sum(r.compliance_gap for r in priority_reports[3:6]),",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "\"expected_improvement\": sum(r.compliance_gap for r in priority_reports[6:]),",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "MAX_AST_DEPTH = 20      # NASA Rule 4 bounded traversal",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "MAX_ANALYSIS_NODES = 5000  # Memory bounds",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "max_loc: int = 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "self.current_overall_compliance = 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"rule_2\": 0.85,  # Function size (PRIMARY GAP)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "assert len(python_files) <= 50, \"Analysis bounded to 50 files\"",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "return improvement >= 0.01  # Minimum 1% improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "python_files = list(project_path_obj.glob(\"**/*.py\"))[:50]  # Bounded",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "estimated_impact=0.02  # +2% compliance improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "estimated_impact=0.02  # +2% compliance improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.03,
      "current_context": "estimated_impact=0.03  # +3% compliance improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_03",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000.0,
      "current_context": "timeout_ms: float = 5000.0",
      "suggested_constant": "BUSINESS_THRESHOLD_5000_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.29,
      "current_context": "byzantine_threshold: float = 0.29):",
      "suggested_constant": "BUSINESS_THRESHOLD_0_29",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "if byzantine_ratio > 0.2:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 21,
      "current_context": "validate_node_count(total_nodes, min_nodes=3, max_nodes=21)",
      "suggested_constant": "BUSINESS_THRESHOLD_21",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.33,
      "current_context": "validate_threshold(byzantine_threshold, min_val=0.0, max_val=0.33, param_name=\"byzantine_threshold\")",
      "suggested_constant": "BUSINESS_THRESHOLD_0_33",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "node.byzantine_score += len(malicious_patterns) * 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if len(self.isolated_nodes) > self.max_byzantine_nodes * 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "expected_outcome={\"pool_size\": 4},",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "thread_ids=[4, 5],",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "thread_ids=[1, 2, 3, 4, 5, 6, 7, 8],",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "thread_ids=[1, 2, 3, 4, 5, 6, 7, 8],",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"-\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"-\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"-\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"-\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "'validation_phases': 4,",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "race_score = 1.0 if race_results.get('thread_safety_assessment') == 'SAFE' else 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "byzantine_score = 1.0 if byzantine_results.get('byzantine_fault_tolerance_verified') else 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "performance_score = 1.0 if performance_results.get('production_acceptable') else 0.6",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'high_confidence': final_assessment['confidence_score'] > 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "integration_score = 1.0 if integration_results.get('system_health') == 'EXCELLENT' else 0.8 if integration_results.get('system_health') == 'GOOD' else 0.4",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "integration_score = 1.0 if integration_results.get('system_health') == 'EXCELLENT' else 0.8 if integration_results.get('system_health') == 'GOOD' else 0.4",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "elif gates_passed >= total_gates * 0.8:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.6,
      "current_context": "elif gates_passed >= total_gates * 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "confidence=0.7",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 96.8,
      "current_context": "'rty': 96.8,  # Rolled Throughput Yield",
      "suggested_constant": "BUSINESS_THRESHOLD_96_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.8,
      "current_context": "'sigma_level': 4.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 100000,
      "current_context": "if file_path.stat().st_size < 100000:  # Skip large files",
      "suggested_constant": "BUSINESS_THRESHOLD_100000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "scores[\"strict-core\"] = scores.get(\"strict-core\", 0) + 1.5",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 92,
      "current_context": "'overall_score': 92,",
      "suggested_constant": "BUSINESS_THRESHOLD_92",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "'compliance_checks_passed': 15,",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "score += 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "MAX_PARAMS = 20  # NASA Rule 2 bounds for parameter processing",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "if complexity > 10 or param_count > 8 or lines > 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "for gap in gaps[:20]:  # NASA Rule 2 bounds - process max 20 functions",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "self.cohesion_threshold = 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 20,
      "current_context": "MAX_CANDIDATES = 20  # NASA Rule 2 bounds",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "assert self.estimated_success_rate > 0.7, \"Success rate too low for safe refactoring\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "'min_cohesion_score': 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "cohesion_risk_reduction = avg_cohesion * 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "return max(0.1, min(total_risk, 0.9))  # Clamp between 0.1 and 0.9",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "quality_bonus = (nasa_compliant_candidates / max(len(candidates), 1)) * 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "return max(0.1, min(total_risk, 0.9))  # Clamp between 0.1 and 0.9",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "nasa_compliant=len(statements) <= 25  # Target extracted methods <25 lines",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "MAX_VIOLATIONS = 5000  # NASA Rule 2 bounds",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "potential_savings_bytes = int(memory_impact['total_estimated_bytes'] * 0.7)",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 15,
      "current_context": "'rule_1_control_flow': 15,      # Critical: Control flow safety",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "'high_priority_rules': 95.0, # Rules 4, 5, 7 must be >= 95%",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "'medium_priority_rules': 90.0, # Rules 6, 8, 9, 10 must be >= 90%",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "'overall_minimum': 95.0     # Overall score must be >= 95%",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "parser.add_argument(\"--threshold\", type=float, default=95.0, help=\"Compliance threshold percentage\")",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "elif overall_score < 90.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "'overall_minimum': 95.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "if score < 95.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 98.0,
      "current_context": "elif status.overall_score < 98.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_98_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "elif overall_score < 95.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "'status': 'success' if current_status.overall_score >= 95.0 else 'warning'",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "return datetime.now() + timedelta(weeks=4)",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "'priority': 'high' if score < 90.0 else 'medium',",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "'valid_until': (datetime.now() + timedelta(days=90)).isoformat(),",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'rule_5_assertions': 0.8,       # High safety impact",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.5,
      "current_context": "base_score = self.RULE_SAFETY_WEIGHTS.get(nasa_rule, 0.5)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "return max(0.1, min(2.0, multiplier))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if score >= 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'rule_5_assertions': 0.8,",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.8,
      "current_context": "if business_score >= 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'memory_allocation': 0.8,   # Memory patterns - high complexity",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.8,
      "current_context": "if technical_score >= 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if temporal_score >= 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if overall_score >= 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "if urgency_factor >= 0.9:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if technical_score >= 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if combined_score >= 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'rule_1_control_flow': 0.75,  # Moderate complexity",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.85,
      "current_context": "'rule_2_loop_bounds': 0.85,   # Well-understood patterns",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.7,
      "current_context": "'rule_3_memory_mgmt': 0.70,   # High complexity",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.9,
      "current_context": "'rule_4_function_size': 0.90, # Automated tooling available",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.9,
      "current_context": "'rule_1_control_flow': 0.9,",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.85,
      "current_context": "'rule_2_loop_bounds': 0.85,",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.9,
      "current_context": "'rule_3_memory_mgmt': 0.9,",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.7,
      "current_context": "'rule_5_assertions': 0.7",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.4,
      "current_context": "weight=0.4,  # 40% of overall risk",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "elif score >= 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "weight=0.25,  # 25% of overall risk",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "elif business_score >= 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "stability_score * 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "weight=0.2,  # 20% of overall risk",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "elif technical_score >= 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "opportunity_score * 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "weight=0.15,  # 15% of overall risk",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "elif temporal_score >= 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "elif overall_score >= 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "urgency_factor = (overall_score * 0.7) + (temporal_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "urgency_factor = (overall_score * 0.7) + (temporal_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "elif technical_score >= 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "elif combined_score >= 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "reputation_impact * 0.2 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "testing_score * 0.2 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "urgency_score * 0.5 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "degradation_score * 0.3 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "elif overall_score >= 0.4:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "elif technical_score >= 0.4:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "compliance_impact * 0.3 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "certification_impact * 0.3 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "complexity_score * 0.4 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "dependency_score * 0.2 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "elif score >= 0.75:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "elif score >= 0.50:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "status = \"[OK]\" if compliance_pct >= 95 else \"[WARN]\" if compliance_pct >= 70 else \"[FAIL]\"",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "status = \"[OK]\" if compliance_pct >= 95 else \"[WARN]\" if compliance_pct >= 70 else \"[FAIL]\"",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "agent_expertise_score=0.8,  # Default high expertise",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "code_complexity=50.0,  # Placeholder",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "base_score = 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if authenticity_score >= 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"theater_detected\": authenticity_score < 0.7,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"proceed_with_loop\": authenticity_score >= 0.7",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "base_score += fix_success_rate * 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "base_score += min(0.2, coupling_improvements * 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "base_score += min(0.2, coupling_improvements * 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "await asyncio.sleep(0.1)  # Simulate processing time",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "estimated_effort: int = 20  # minutes",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "skill_match_score: float = 0.8  # 0.0 to 1.0",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "return 0.5  # Default match if no specific requirements",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.87,
      "current_context": "\"confidence_level\": 0.87",
      "suggested_constant": "BUSINESS_THRESHOLD_0_87",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "if skill_match_score > 0.3 and complexity_match:  # Minimum thresholds",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.2,
      "current_context": "\"overall_score\": skill_match_score * (1.2 if complexity_match else 0.8)",
      "suggested_constant": "BUSINESS_THRESHOLD_1_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"overall_score\": skill_match_score * (1.2 if complexity_match else 0.8)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "\"standards_score\": 85,",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "\"overall_score\": 80,",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "\"test_coverage\": 85,",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "\"complexity_score\": 75,",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "\"max_parallel_agents\": 6,  # Larger team for complex fixes",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "\"timeout_per_agent\": 300,  # 5 minutes per agent",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "\"theater_detection_threshold\": 0.9,  # Higher threshold for fixes",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 999,
      "current_context": "prev_hooks_failing = recent_iterations[0].get(\"validation_results\", {}).get(\"hooks_failing\", 999)",
      "suggested_constant": "BUSINESS_THRESHOLD_999",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 999,
      "current_context": "curr_hooks_failing = validation_results.get(\"hooks_failing\", 999)",
      "suggested_constant": "BUSINESS_THRESHOLD_999",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 999,
      "current_context": "prev_tests_failing = recent_iterations[0].get(\"validation_results\", {}).get(\"tests_failing\", 999)",
      "suggested_constant": "BUSINESS_THRESHOLD_999",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 999,
      "current_context": "curr_tests_failing = validation_results.get(\"tests_failing\", 999)",
      "suggested_constant": "BUSINESS_THRESHOLD_999",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "self.success_threshold = 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "self.high_risk_threshold = 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "score = 0.5  # Base probability",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if features.agent_expertise_score > 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "factors[\"expert_agent\"] = 0.25",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "if risk_score < 0.3:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "elif risk_score < 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "elif probability > 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "result.security_score = 95.0  # Would be calculated based on actual security tests",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "if avg_error_rate < 0.01:  # Less than 1% error rate",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if avg_consistency > 0.8:  # 80% consistency threshold",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "if avg_consistency < 0.8:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "if len(outliers) > len(execution_times) * 0.1:  # >10% outliers",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "'error_rate': 0.05,  # 5% error rate threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'cpu_usage': 0.9  # 90% CPU usage threshold",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 85.0,
      "current_context": "if metrics['memory_percent'] > 85.0:  # 85% memory threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "if overhead > 0.02:  # 2% overhead threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "if overall_score < 90.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "'overall_passed': compliance_percentage >= 90.0  # 90% threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "if result.get('compliance_percentage', 0.0) < 90.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "self.cpu_threshold = 0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "self.memory_threshold = 0.85",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "self.io_threshold = 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.02,
      "current_context": "if self._pool_metrics.total_overhead > 0.02:  # 2% threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "self.max_workers = max_workers or min(32, (psutil.cpu_count() or 1) + 4)",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "self._audit_log = self._audit_log[-5000:]  # Keep last 5000 events",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "'worker_count_adjustment': abs(utilization - 0.7) > 0.2,",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.02,
      "current_context": "time.sleep(0.02)  # 20ms simulated processing",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 8.7,
      "current_context": "\"quality_score\": 8.7,",
      "suggested_constant": "BUSINESS_THRESHOLD_8_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "\"analysis_time\": 0.02",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.04,
      "current_context": "time.sleep(0.04)  # 40ms simulated processing",
      "suggested_constant": "BUSINESS_THRESHOLD_0_04",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 45,
      "current_context": "\"endpoints_tested\": 45,",
      "suggested_constant": "BUSINESS_THRESHOLD_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.04,
      "current_context": "\"validation_time\": 0.04",
      "suggested_constant": "BUSINESS_THRESHOLD_0_04",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.06,
      "current_context": "time.sleep(0.06)  # 60ms simulated processing",
      "suggested_constant": "BUSINESS_THRESHOLD_0_06",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 87.5,
      "current_context": "\"compliance_score\": 87.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_87_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.06,
      "current_context": "\"check_time\": 0.06",
      "suggested_constant": "BUSINESS_THRESHOLD_0_06",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "validation_results[\"validation_passed\"] = validation_score >= 90.0",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "basic_score = (efficiency + success_rate) * 50  # Max 100 points",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "scores.append(95)  # High score for completing benchmarks",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"\\n\" + \"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 23,
      "current_context": "{\"type\": \"duplication\", \"severity\": \"info\", \"lines\": 23}",
      "suggested_constant": "BUSINESS_THRESHOLD_23",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "'cache_size': 5000,",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 7200,
      "current_context": "'cache_ttl': 7200,",
      "suggested_constant": "BUSINESS_THRESHOLD_7200",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "\"compliance_target_achieved\": compliance_report['overall_compliance_percentage'] >= 90.0",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "scores.append(90)",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "\"performance_analyzer\": 1.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "\"memory_leak_detector\": 4.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "\"api_security_validator\": 1.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2.5,
      "current_context": "\"database_optimizer\": 2.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_2_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "detector_configs = [(name, (), {}) for name in list(self.detectors.keys())[:4]]",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "self.retrain_threshold = 0.8  # Retrain if accuracy drops below 80%",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "self.contention_threshold = 0.85",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.5,
      "current_context": "return 0.5  # Default fallback",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "estimated_overhead=0.01,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "confidence_score=0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "optimizer.register_detector(\"standard_detector\", priority=5, weight=1.0, complexity_score=1.5)",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "optimizer.register_detector(\"background_detector\", priority=1, weight=0.5, complexity_score=0.8)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "optimizer.register_detector(\"background_detector\", priority=1, weight=0.5, complexity_score=0.8)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 92.5,
      "current_context": "return {\"frameworks\": compliance_status, \"overall_score\": 92.5}",
      "suggested_constant": "BUSINESS_THRESHOLD_92_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "\"SOX\": {\"status\": \"compliant\", \"last_audit\": \"2024-06-01\", \"score\": 95},",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 92,
      "current_context": "\"GDPR\": {\"status\": \"compliant\", \"last_audit\": \"2024-05-15\", \"score\": 92},",
      "suggested_constant": "BUSINESS_THRESHOLD_92",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "\"HIPAA\": {\"status\": \"partially_compliant\", \"last_audit\": \"2024-07-01\", \"score\": 85},",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 98,
      "current_context": "\"PCI-DSS\": {\"status\": \"compliant\", \"last_audit\": \"2024-04-20\", \"score\": 98}",
      "suggested_constant": "BUSINESS_THRESHOLD_98",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 142,
      "current_context": "\"compliant_controls\": 142,",
      "suggested_constant": "BUSINESS_THRESHOLD_142",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 94.7,
      "current_context": "\"compliance_percentage\": 94.7",
      "suggested_constant": "BUSINESS_THRESHOLD_94_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "\"response_time_ms\": 80.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "ComplianceStatus.IMPLEMENTED: 4,",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6210.0,
      "current_context": "dpmo_threshold: float = 6210.0  # 4-sigma level",
      "suggested_constant": "BUSINESS_THRESHOLD_6210_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "rty_threshold: float = 95.0",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 96.7,
      "current_context": "\"overall_compliance_score\": 96.7,",
      "suggested_constant": "BUSINESS_THRESHOLD_96_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 93.2,
      "current_context": "\"overall_compliance_score\": 93.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_93_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 99.95,
      "current_context": "\"system_availability\": 99.95,",
      "suggested_constant": "BUSINESS_THRESHOLD_99_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 92.3,
      "current_context": "\"performance_score\": 92.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_92_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 96.8,
      "current_context": "\"security_score\": 96.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_96_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.2,
      "current_context": "\"compliance_score\": 95.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_95_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 87.5,
      "current_context": "\"cost_efficiency\": 87.5",
      "suggested_constant": "BUSINESS_THRESHOLD_87_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 98.5,
      "current_context": "\"patch_compliance\": 98.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_98_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.2,
      "current_context": "\"vulnerability_scan_score\": 95.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_95_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "\"logs_retention_days\": 2555,  # 7 years for compliance",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "\"backup_retention_days\": 2555",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 99.8,
      "current_context": "\"system_uptime\": 99.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_99_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 88.5,
      "current_context": "\"performance_score\": 88.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_88_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.92,
      "current_context": "\"data_quality_score\": 0.92,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_92",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 62,
      "current_context": "\"controls_passed\": 62,",
      "suggested_constant": "BUSINESS_THRESHOLD_62",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 96.9,
      "current_context": "\"compliance_score\": 96.9,",
      "suggested_constant": "BUSINESS_THRESHOLD_96_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.89,
      "current_context": "\"data_quality_score\": 0.89,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_89",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 114,
      "current_context": "\"controls_implemented\": 114,",
      "suggested_constant": "BUSINESS_THRESHOLD_114",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 110,
      "current_context": "\"controls_effective\": 110,",
      "suggested_constant": "BUSINESS_THRESHOLD_110",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 96.5,
      "current_context": "\"compliance_score\": 96.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_96_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4095,
      "current_context": "\"report_id\": f\"compliance_{framework.lower()}_{hash(framework) & 0xfff:03x}\",",
      "suggested_constant": "BUSINESS_THRESHOLD_4095",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 16777215,
      "current_context": "\"analysis_id\": f\"cloud_analysis_{hash(str(data)) & 0xffffff:06x}\",",
      "suggested_constant": "BUSINESS_THRESHOLD_16777215",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 16777215,
      "current_context": "\"analysis_id\": f\"onprem_analysis_{hash(str(data)) & 0xffffff:06x}\",",
      "suggested_constant": "BUSINESS_THRESHOLD_16777215",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"required_score\": 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "security_score -= 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "if exec_time > 5000:  # 5 seconds",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "performance_score -= 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "performance_score -= 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "if complexity > 15:",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "performance_score -= 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "compliance_score -= 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2000,
      "current_context": "elif exec_time > 2000:  # 2 seconds",
      "suggested_constant": "BUSINESS_THRESHOLD_2000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "performance_score -= 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "performance_score -= 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "compliance_score -= 0.2 * len(missing_headers)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if doc_ratio < 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "compliance_score -= 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "security_score -= 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "security_score -= 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score=1.0 - (len(breaking_changes) * 0.1),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "return artifacts[:50]  # Limit for practical reasons",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "base_score += 20",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "base_score += 15",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if report.risk_score > 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "base_score += min(40, report.vulnerabilities_found * 2)",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "base_score += report.critical_vulnerabilities * 15",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 308537,
      "current_context": "QualityLevel.TWO_SIGMA: 308537,",
      "suggested_constant": "BUSINESS_THRESHOLD_308537",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 66807,
      "current_context": "QualityLevel.THREE_SIGMA: 66807,",
      "suggested_constant": "BUSINESS_THRESHOLD_66807",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6210,
      "current_context": "QualityLevel.FOUR_SIGMA: 6210,",
      "suggested_constant": "BUSINESS_THRESHOLD_6210",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 233,
      "current_context": "QualityLevel.FIVE_SIGMA: 233,",
      "suggested_constant": "BUSINESS_THRESHOLD_233",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.4,
      "current_context": "QualityLevel.SIX_SIGMA: 3.4",
      "suggested_constant": "BUSINESS_THRESHOLD_3_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "return 6.0  # Perfect quality",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "sigma_level = z_score + 1.5",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 42,
      "current_context": "random.seed(42)",
      "suggested_constant": "BUSINESS_THRESHOLD_42",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "for i in range(4, len(values)):",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "if len(self.data_points) >= 20:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "if len(self.data_points) < 20:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "if len(self.data_points) < 20:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "if len(self.data_points) < 20:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9,
      "current_context": "if not self.control_limits or len(self.data_points) < 9:",
      "suggested_constant": "BUSINESS_THRESHOLD_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "dpmo = max(0, random.normalvariate(0, 50))",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "pp = (usl - lsl) / (6 * std_dev) if usl and lsl else cp",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "plt.plot(timestamps, values, 'b-o', markersize=4, linewidth=1.5, label='Data')",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "plt.plot(timestamps, values, 'b-o', markersize=4, linewidth=1.5, label='Data')",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "alpha=0.7, label='UCL')",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "alpha=0.7, label='LCL')",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "alpha=0.8, label='Center Line')",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "chart.control_limits.ucl, alpha=0.1, color='green')",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "timestamp = base_time + timedelta(hours=i * 6)",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "ERROR = 40",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "CRITICAL = 50",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2.5,
      "current_context": "def _extreme_event_indicator(self, returns: pd.Series, threshold: float = 2.5) -> pd.Series:",
      "suggested_constant": "BUSINESS_THRESHOLD_2_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "def _black_swan_protection(self, returns: pd.Series, window: int = 90) -> pd.Series:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "validation_split: float = 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "median = np.percentile(window_returns, 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "if quality_score >= 90:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "'missing_data_threshold': 0.05,  # Max 5% missing data",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "'zero_volume_threshold': 0.1,  # Max 10% zero volume",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3650,
      "current_context": "if span_days > 3650:  # > 10 years",
      "suggested_constant": "BUSINESS_THRESHOLD_3650",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "if change_ratio < 0.1:  # Less than 10% of prices change",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "elif quality_score >= 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 252,
      "current_context": "volatility = returns.std() * np.sqrt(252)  # Annualized volatility",
      "suggested_constant": "BUSINESS_THRESHOLD_252",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "issue_counts['info'] * 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "elif quality_score >= 70:",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "quality_score = max(0, 100 - (weighted_issues / total_checks) * 25)",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1000000,
      "current_context": "options_flow_threshold: float = 1000000  # $1M unusual activity",
      "suggested_constant": "BUSINESS_THRESHOLD_1000000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "quality_threshold: float = 0.95",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.99,
      "current_context": "completeness_threshold: float = 0.99",
      "suggested_constant": "BUSINESS_THRESHOLD_0_99",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "latency_threshold: float = 0.1  # 100ms",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "error_rate_threshold: float = 0.01  # 1%",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "alert_threshold: float = 0.95",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 8080,
      "current_context": "dashboard_port: int = 8080",
      "suggested_constant": "BUSINESS_THRESHOLD_8080",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "if self.streaming.max_latency > 0.1:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2000,
      "current_context": "rate_limit=2000,  # Conservative limit",
      "suggested_constant": "BUSINESS_THRESHOLD_2000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 120,
      "current_context": "rate_limit=120,  # requests per minute",
      "suggested_constant": "BUSINESS_THRESHOLD_120",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "data['sentiment_confidence'] = 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "data['sentiment_confidence'] = np.random.uniform(0.5, 1.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1000000000.0,
      "current_context": "scores = scores.masked_fill(mask == 0, -1e9)",
      "suggested_constant": "BUSINESS_THRESHOLD_1000000000_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1e-06,
      "current_context": "assert diff < 1e-6, f\"Enhanced DPI calculation incorrect, diff: {diff}\"",
      "suggested_constant": "BUSINESS_THRESHOLD_1e-06",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "nn.Dropout(0.1),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "asset_benefit_concentration += price_change * 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "protection_score * 0.15",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "option_classification[:, 0:1] * 0.15 +  # Call-like payoff",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "barbell_score * 0.2 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "convexity_score * 0.3 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "(stress_perf > 0).float() * 0.2 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "confidence_threshold=0.7,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 224,
      "current_context": "image_size=(224, 224),",
      "suggested_constant": "BUSINESS_THRESHOLD_224",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 224,
      "current_context": "image_size=(224, 224),",
      "suggested_constant": "BUSINESS_THRESHOLD_224",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "volume_importance=0.8,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.2,
      "current_context": "enhanced_features = pattern_features * (1 + 0.2 * antifragile_boost)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "default=25,",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "default=0.8,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "default=0.7,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "if 0.1 <= test_ratio <= 0.5:  # Reasonable test coverage",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if 0.1 <= test_ratio <= 0.5:  # Reasonable test coverage",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "sample_files = python_files[:20]  # Limit to avoid performance issues",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 100000,
      "current_context": "if file_path.stat().st_size > 100000:  # Skip very large files",
      "suggested_constant": "BUSINESS_THRESHOLD_100000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "scores[\"strict-core\"] = scores.get(\"strict-core\", 0) + 1.5",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "score += 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score += 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "default=95,",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "duplication_threshold=0.7,  # Default threshold",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "\"consensus_threshold\": 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.33,
      "current_context": "\"fault_tolerance_level\": 0.33,  # Byzantine fault tolerance",
      "suggested_constant": "BUSINESS_THRESHOLD_0_33",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "\"cpu_cores\": min(len(available_tools), 4),",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "deduction = min(total_weight * 0.5, 95)  # Cap at 95% deduction",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "if quality_score >= 90:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "deduction = min(total_weight * 0.5, 95)  # Cap at 95% deduction",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "elif quality_score >= 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "elif quality_score >= 70:",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "estimated_compliance = 85  # Based on fixes applied",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "return estimated_compliance >= 90",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "key_rotation_days: int = 90",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "cpu_limit_percent: int = 80",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'predicted_values': [0.8, 0.6, 0.9],  # Mock predictions",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "'predicted_values': [0.8, 0.6, 0.9],  # Mock predictions",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'predicted_values': [0.8, 0.6, 0.9],  # Mock predictions",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'confidence_scores': [0.85, 0.72, 0.91],",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.72,
      "current_context": "'confidence_scores': [0.85, 0.72, 0.91],",
      "suggested_constant": "BUSINESS_THRESHOLD_0_72",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.91,
      "current_context": "'confidence_scores': [0.85, 0.72, 0.91],",
      "suggested_constant": "BUSINESS_THRESHOLD_0_91",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "elif confidence > 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "history_size: int = 50, trend_threshold: float = 0.2):",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "history_size: int = 50, trend_threshold: float = 0.2):",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "'test_coverage': 80.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "'nasa_compliance': 90.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "'gate_pass_rate': 80.0",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70.0,
      "current_context": "if metrics.overall_score < 70.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_70_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40.0,
      "current_context": "if metrics.theater_detection_score < 40.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_40_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "if metrics.nasa_compliance < 80.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15.0,
      "current_context": "if metrics.complexity_score > 15.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_15_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "nasa_compliance * 0.20",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 29.0,
      "current_context": "progress = i / 29.0  # 0 to 1",
      "suggested_constant": "BUSINESS_THRESHOLD_29_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75.0,
      "current_context": "overall_score=75.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_75_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 65.0,
      "current_context": "theater_detection_score=65.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_65_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70.0,
      "current_context": "test_coverage=70.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_70_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 8.5,
      "current_context": "complexity_score=8.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_8_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85.0,
      "current_context": "nasa_compliance=85.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75.0,
      "current_context": "gate_pass_rate=75.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_75_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "max(0, 100 - complexity_score * 5) * 0.15 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70.0,
      "current_context": "<div class=\"metric-value\" style=\"color: {get_status_color(metrics.overall_score, 70.0)}\">",
      "suggested_constant": "BUSINESS_THRESHOLD_70_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "<div class=\"metric-value\" style=\"color: {get_status_color(metrics.nasa_compliance, 90.0)}\">",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "<div class=\"metric-value\" style=\"color: {get_status_color(metrics.gate_pass_rate, 80.0)}\">",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 999,
      "current_context": "security_violations=999,",
      "suggested_constant": "BUSINESS_THRESHOLD_999",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 999.0,
      "current_context": "complexity_score=999.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_999_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "(100 - min(security_violations * 10, 100)) * 0.20 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "overall_score=50.0 + progress * 30.0,  # 50 to 80",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40.0,
      "current_context": "theater_detection_score=40.0 + progress * 35.0,  # 40 to 75",
      "suggested_constant": "BUSINESS_THRESHOLD_40_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15.0,
      "current_context": "complexity_score=15.0 - progress * 7.0,  # 15 to 8",
      "suggested_constant": "BUSINESS_THRESHOLD_15_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70.0,
      "current_context": "nasa_compliance=70.0 + progress * 25.0,  # 70 to 95",
      "suggested_constant": "BUSINESS_THRESHOLD_70_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "elif score >= threshold * 0.8:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.25,
      "current_context": "theater_score * 0.25 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "test_coverage * 0.20 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 35.0,
      "current_context": "theater_detection_score=40.0 + progress * 35.0,  # 40 to 75",
      "suggested_constant": "BUSINESS_THRESHOLD_35_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25.0,
      "current_context": "test_coverage=60.0 + progress * 25.0,  # 60 to 85",
      "suggested_constant": "BUSINESS_THRESHOLD_25_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25.0,
      "current_context": "nasa_compliance=70.0 + progress * 25.0,  # 70 to 95",
      "suggested_constant": "BUSINESS_THRESHOLD_25_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 19,
      "current_context": "<p>Generated: {data.generated_at[:19].replace('T', ' ')}</p>",
      "suggested_constant": "BUSINESS_THRESHOLD_19",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "score = 50.0  # Base score",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70.0,
      "current_context": "passed = overall_quality >= 70.0  # 70% quality threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_70_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\" * 70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score += 20  # Good size",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "score += 15",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "score -= 15  # Too large",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "score -= 20  # Very short files with functions are often mocks",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "report['summary']['gate_status'] = 'PASS' if gate_pass_rate >= 80 else 'FAIL'",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "low_scores = [path for path, score in scan_results.items() if score.overall_score < 40]",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'gate_status': 'PASS' if (passing_files / total_files >= 0.8 if total_files > 0 else False) else 'FAIL'",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 40,
      "current_context": "self.assertLess(score.overall_score, 40, \"NotImplementedError should fail theater detection\")",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "self.assertGreaterEqual(score.overall_score, 75, \"Evidence-rich code should score high\")",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85.0,
      "current_context": "compliance_score = 85.0  # Placeholder",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "threshold=80.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "threshold=90.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70.0,
      "current_context": "threshold=70.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_70_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 999,
      "current_context": "actual_value=999,  # High number to indicate failure",
      "suggested_constant": "BUSINESS_THRESHOLD_999",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 999,
      "current_context": "actual_value=999,",
      "suggested_constant": "BUSINESS_THRESHOLD_999",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 999,
      "current_context": "actual_value=999,",
      "suggested_constant": "BUSINESS_THRESHOLD_999",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "total_nasa_rules = 20  # Total POT10 rules",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "nasa_pot10_score_min=95.0   # 95% NASA POT10 compliance",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "nasa_pot10_score_min=90.0   # 90% NASA POT10 compliance",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "nasa_pot10_score_min=80.0   # 80% NASA POT10 compliance",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "self.max_kelly_fraction = 0.25  # Cap Kelly at 25% for safety",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "self.min_kelly_fraction = 0.01  # Minimum position size",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.65,
      "current_context": "self.confidence_threshold = 0.65  # Minimum confidence for trades",
      "suggested_constant": "BUSINESS_THRESHOLD_0_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "if dpi_value > 0.7:",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 50,
      "current_context": "if calculation_time > 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "\"performance_target_met\": np.mean(times) < 50.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "adjustment_factor = 1.0 + (dpi_value - 0.7) * 0.5",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 1.67,
      "current_context": "adjustment_factor = 0.5 + dpi_value * 1.67  # Scale 0-0.3 to 0.5-1.0",
      "suggested_constant": "SCORING_WEIGHT_1_67",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 100000,
      "current_context": "self.position_limit = config.get('position_limit', 100000)",
      "suggested_constant": "BUSINESS_THRESHOLD_100000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'failover_trigger_threshold': 0.95,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.95,
      "current_context": "if health_ratio >= self.config.get('failover_trigger_threshold', 0.95):",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 1800,
      "current_context": "ACCOUNT_LOCKOUT_DURATION = 1800  # 30 minutes",
      "suggested_constant": "BUSINESS_THRESHOLD_1800",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if len(recent_access) > 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "retention_days: int = 2555):  # 7 years for DFARS",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "retention_period: int = 2555,  # 7 years default",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 180,
      "current_context": "CDIClassification.BASIC_CUI: 180 * 24 * 3600,  # 6 months",
      "suggested_constant": "BUSINESS_THRESHOLD_180",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "CDIClassification.SPECIFIED_CUI: 90 * 24 * 3600,  # 3 months",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "severity_levels = {\"low\": 1, \"medium\": 2, \"high\": 3, \"critical\": 4}",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "self.executor = ThreadPoolExecutor(max_workers=4)",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "print(\"=\" * 40)",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "\"minimum_value\": 2555,  # 7 years",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.0,
      "current_context": "if cvss_score >= 9.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_9_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "criticality_scores = {\"low\": 0.2, \"medium\": 0.5, \"high\": 0.8, \"critical\": 1.0}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "criticality_scores = {\"low\": 0.2, \"medium\": 0.5, \"high\": 0.8, \"critical\": 1.0}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "criticality_scores = {\"low\": 0.2, \"medium\": 0.5, \"high\": 0.8, \"critical\": 1.0}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "base_score += criticality_scores.get(asset_data.get(\"criticality\", \"medium\"), 0.5) * 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "base_score += min(exposed_services * 0.1, 0.3) * 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "threat_component = threat_score * 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "vuln_component = vuln_score * 0.4",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "asset_component = asset_score * 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 7.5,
      "current_context": "\"cvss_score\": 7.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_7_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.0,
      "current_context": "if cvss_score >= 9.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_9_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "base_score += criticality_scores.get(asset_data.get(\"criticality\", \"medium\"), 0.5) * 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "base_score += (avg_cvss / 10.0) * 0.4",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "base_score += min(exposed_services * 0.1, 0.3) * 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "asset_id: asset_data.get(\"risk_score\", 0.5)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "low_weight = vulnerability_summary[\"low\"] * 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "if residual_score >= 0.3:  # Only include significant residual risks",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 45,
      "current_context": "print(\"=\" * 45)",
      "suggested_constant": "BUSINESS_THRESHOLD_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "\"very_low\": 0.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "\"low\": 0.4,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"confidence_threshold\": 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 4.0,
      "current_context": "\"cvss_threshold\": 4.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"high_risk_threshold\": 0.7,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "\"critical_risk_threshold\": 0.9,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 4.0,
      "current_context": "elif cvss_score >= 4.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "base_score += min(exposed_services * 0.1, 0.3) * 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "if score >= 0.7",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if risk_score >= 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "elif cvss_score >= 4.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "age_factor = max(0.1, 1.0 - ((current_time - indicator.last_seen) / 86400))  # Decay over 24 hours",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "RiskLevel.VERY_LOW: 0.1, RiskLevel.LOW: 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "RiskLevel.VERY_LOW: 0.1, RiskLevel.LOW: 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "RiskLevel.MEDIUM: 0.5, RiskLevel.HIGH: 0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "RiskLevel.MEDIUM: 0.5, RiskLevel.HIGH: 0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "score = severity_scores.get(indicator.severity, 0.5)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if score >= 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if ind.confidence_score >= 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "if score >= 0.7",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "\"check_interval_seconds\": 300,  # 5 minutes",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "weights = [0.25, 0.20, 0.15, 0.25, 0.10, 0.05]  # Theater detection and security are most important",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "weights = [0.25, 0.20, 0.15, 0.25, 0.10, 0.05]  # Theater detection and security are most important",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "weights = [0.25, 0.20, 0.15, 0.25, 0.10, 0.05]  # Theater detection and security are most important",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "weights = [0.25, 0.20, 0.15, 0.25, 0.10, 0.05]  # Theater detection and security are most important",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "weights = [0.25, 0.20, 0.15, 0.25, 0.10, 0.05]  # Theater detection and security are most important",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "weights = [0.25, 0.20, 0.15, 0.25, 0.10, 0.05]  # Theater detection and security are most important",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "defense_ready = zero_tolerance_met and overall_score >= 0.95",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "validation_status=\"VERIFIED\" if accuracy_rate >= 0.95 else \"FAILED\",",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "validation_status=\"VERIFIED\" if performance_score >= 0.9 else \"FAILED\",",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "validation_status=\"VERIFIED\" if security_effectiveness >= 0.9 else \"INSUFFICIENT\",",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "validation_status=\"VERIFIED\" if framework_effectiveness >= 0.8 else \"INCOMPLETE\",",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "validation_status=\"VERIFIED\" if capability_score >= 0.9 else \"INSUFFICIENT\",",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "accuracy = abs(actual - test[\"expected_dpmo\"]) < 0.01",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "accuracy = abs(actual - test[\"expected_rty\"]) < 0.01",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "\"performance_validated\": performance_score >= 0.9",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "\"security_adequate\": security_effectiveness >= 0.9",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"frameworks_adequate\": framework_effectiveness >= 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "\"defense_industry_compliant\": capability_score >= 0.9",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "\"mathematical_integrity\": \"VERIFIED\" if accuracy_rate >= 0.95 else \"QUESTIONABLE\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.0001,
      "current_context": "time.sleep(0.0001)  # 0.1ms simulated work",
      "suggested_constant": "BUSINESS_THRESHOLD_0_0001",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "score = 0.8  # Assume strong implementation for demo",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "score = 0.8  # Assume strong implementation for demo",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.98,
      "current_context": "if overall_score < 0.98:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_98",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1095,
      "current_context": "\"certificate_validity_days\": 1095,  # 3 years",
      "suggested_constant": "BUSINESS_THRESHOLD_1095",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "score += 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score += 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "score += 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "score += 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score += 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "score += 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "score += 0.4",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "score += 0.4",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "score += 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "CertificationLevel.DEFENSE_CERTIFIED: 4,",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 55,
      "current_context": "print(\"=\" * 55)",
      "suggested_constant": "BUSINESS_THRESHOLD_55",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"basic_compliance\": 0.80,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 20,
      "current_context": "\"basic_compliance\": 20,",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "\"substantial_compliance\": 25,",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 28,
      "current_context": "\"full_compliance\": 28,",
      "suggested_constant": "BUSINESS_THRESHOLD_28",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "score += 0.4",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "score += 0.6",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "score = 1.0 if len(ir_status[\"dfars_reporting_required\"]) == 0 else 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "score = 0.8  # Assume good key management",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if result.get(\"compliance_score\", 0) < 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "'target_compliance': 95.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "'critical_threshold': 90.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9,
      "current_context": "'total_controls': 9,",
      "suggested_constant": "BUSINESS_THRESHOLD_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9,
      "current_context": "'controls_passed': 9,  # Assuming full implementation",
      "suggested_constant": "BUSINESS_THRESHOLD_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9,
      "current_context": "'controls_passed': 9,  # Assuming full implementation",
      "suggested_constant": "BUSINESS_THRESHOLD_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 11,
      "current_context": "'controls_passed': 11,  # Assuming full implementation",
      "suggested_constant": "BUSINESS_THRESHOLD_11",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "'controls_passed': 6,  # Assuming full implementation",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "'controls_passed': 4,  # Assuming full implementation",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "if validation_summary['overall_compliance_percentage'] >= 95.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "elif validation_summary['overall_compliance_percentage'] >= 90.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "if result['compliance_percentage'] < 95.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "elif compliance_percentage >= 95.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 22,
      "current_context": "'controls_failed': 22,",
      "suggested_constant": "BUSINESS_THRESHOLD_22",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9,
      "current_context": "'controls_failed': 9,",
      "suggested_constant": "BUSINESS_THRESHOLD_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "'controls_failed': 6,",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "status = \"PASS\" if result['compliance_percentage'] >= 95.0 else \"NEEDS IMPROVEMENT\"",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "elif compliance_percentage >= 90.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70.0,
      "current_context": "elif compliance_percentage >= 70.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_70_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "print(f\"Needed: {95.0 - validation_results['overall_compliance_percentage']:.1f}% improvement\")",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "self.target_compliance_percentage = config.get('target_compliance', 95.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "self.critical_control_threshold = config.get('critical_threshold', 90.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "elif percentage >= 95.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "elif percentage >= 90.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70.0,
      "current_context": "elif percentage >= 70.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_70_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "audit_retention_days: int = 2555  # 7 years as per DFARS",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85.0,
      "current_context": "minimum_compliance_score: float = 85.0",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "incident_response_time_hours: int = 4",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "self.config.thresholds.minimum_compliance_score = 95.0",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "if self.config.audit.audit_retention_days < 2555:  # 7 years",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 72,
      "current_context": "if self.config.incident_response.reporting_deadline_hours > 72:",
      "suggested_constant": "BUSINESS_THRESHOLD_72",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85.0,
      "current_context": "if self.config.thresholds.minimum_compliance_score < 85.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85.0,
      "current_context": "self.config.thresholds.minimum_compliance_score = 85.0",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 72,
      "current_context": "self.config.incident_response.reporting_deadline_hours = 72",
      "suggested_constant": "BUSINESS_THRESHOLD_72",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "print(\"=\" * 40)",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 120,
      "current_context": "self.config.access_control.session_timeout_minutes = 120",
      "suggested_constant": "BUSINESS_THRESHOLD_120",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "self.config.monitoring.monitoring_interval_seconds = 300",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75.0,
      "current_context": "self.config.thresholds.minimum_compliance_score = 75.0",
      "suggested_constant": "BUSINESS_THRESHOLD_75_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "self.compliance_check_interval = 300  # 5 minutes",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 900,
      "current_context": "self.cui_scan_interval = 900  # 15 minutes",
      "suggested_constant": "BUSINESS_THRESHOLD_900",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "baseline['std_dev'] = variance ** 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "'max_hourly_access': 50,",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "if metrics.cpu_usage > 90:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18,
      "current_context": "if a.hour < 8 or a.hour > 18  # Outside 8AM-6PM",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "for attempt in range(4):",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "if compliance_score >= 85 and audit_integrity:",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "elif compliance_score >= 75:",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "await asyncio.sleep(0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "base_retention = 2555  # 7 years default",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9,
      "current_context": "max_score = 9  # Number of DFARS media protection controls",
      "suggested_constant": "BUSINESS_THRESHOLD_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "self.clearance_renewal_notice_days = config.get('clearance_renewal_notice_days', 90)",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "'status': 'COMPLIANT' if compliance_score >= 90 else 'NON_COMPLIANT'",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "print(\"=\" * 40)",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "\"overall_status\": \"production_ready\" if completion_rate >= 0.95 else \"requires_attention\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1000000,
      "current_context": "if session.data_transferred > 1000000:  # 1MB threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_1000000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "self.check_interval = 300  # 5 minutes",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "record_id = f\"AUDIT-{datetime.now().strftime('%Y%m%d%H%M%S')}-{secrets.token_hex(4)}\"",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "incident_id = f\"DFARS-{datetime.now().strftime('%Y%m%d')}-{secrets.token_hex(4).upper()}\"",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "print(f\"Authentication result: {success}, Token: {token[:20]}...\" if success else f\"Authentication failed: {token}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 72,
      "current_context": "if hours_elapsed > 72:",
      "suggested_constant": "BUSINESS_THRESHOLD_72",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 72,
      "current_context": "DFARS_REPORTING_WINDOW = 72 * 3600  # 72 hours",
      "suggested_constant": "BUSINESS_THRESHOLD_72",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 45,
      "current_context": "print(\"=\" * 45)",
      "suggested_constant": "BUSINESS_THRESHOLD_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "self.executor = ThreadPoolExecutor(max_workers=4)",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "performance_acceptable = exec_time < 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.001,
      "current_context": "zero_overhead = disabled_exec_time < 0.001  # Less than 1ms",
      "suggested_constant": "BUSINESS_THRESHOLD_0_001",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "time.sleep(0.01)  # 10ms",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "accuracy_check = abs(actual_result - expected_dpmo) < 0.01",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 72,
      "current_context": "CRITICAL_INCIDENT_REPORTING_WINDOW = 72 * 3600  # 72 hours in seconds",
      "suggested_constant": "BUSINESS_THRESHOLD_72",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 35,
      "current_context": "print(\"=\" * 35)",
      "suggested_constant": "BUSINESS_THRESHOLD_35",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "if severity_counts[\"medium\"] > 20:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "\"timeout\": 300,",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 180,
      "current_context": "\"timeout\": 180,",
      "suggested_constant": "BUSINESS_THRESHOLD_180",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "\"validity_days\": 90,",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "DFARS_RETENTION_DAYS = 2555  # 7 years",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 100000,
      "current_context": "events_data = self.storage_manager.read_events(start_time, end_time, limit=100000)",
      "suggested_constant": "BUSINESS_THRESHOLD_100000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "event = self.audit_buffer.get(timeout=0.01)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "\"window_minutes\": 15,",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1440,
      "current_context": "\"window_minutes\": 1440,  # 24 hours",
      "suggested_constant": "BUSINESS_THRESHOLD_1440",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "return 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "elif compliance_percentage >= 0.7:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "elif score >= 0.80:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "elif score >= 0.60:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "score = ((compliant_count * 1.0) + (partial_count * 0.5)) / total_rules if total_rules > 0 else 0",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if compliance_percentage >= 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "elif compliance_percentage >= 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1048575,
      "current_context": "scan_id = f\"compliance_scan_{int(start_time)}_{hash(target) & 0xfffff:05x}\"",
      "suggested_constant": "BUSINESS_THRESHOLD_1048575",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "compliance_status = \"PASS\" if compliance_score >= 80 else \"FAIL\"",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "cvss_score=6.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "confidence=0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5.3,
      "current_context": "cvss_score=5.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_5_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "confidence=0.9",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 7.5,
      "current_context": "cvss_score=7.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_7_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "confidence=0.9",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 8.1,
      "current_context": "cvss_score=8.1,",
      "suggested_constant": "BUSINESS_THRESHOLD_8_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "confidence=0.7",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "self.lockout_duration = 300  # 5 minutes",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "risk_score += 40",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "risk_score += 20",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "risk_score += 50",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "if risk_score >= 70:  # High risk",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "\"medium\": 50,",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "elif risk_score >= 40:  # Medium risk",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "return 6.0  # Perfect quality",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1000000,
      "current_context": "if dpmo >= 1_000_000:",
      "suggested_constant": "BUSINESS_THRESHOLD_1000000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1000000,
      "current_context": "probability = dpmo / 1_000_000",
      "suggested_constant": "BUSINESS_THRESHOLD_1000000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if probability >= 0.5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "sigma_level = z_score + 1.5  # Add 1.5 sigma shift",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "scorer.add_process_stage(\"Specification\", opportunities=100, defects=5, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 150,
      "current_context": "scorer.add_process_stage(\"Design\", opportunities=150, defects=12, target_yield=0.92)",
      "suggested_constant": "BUSINESS_THRESHOLD_150",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.92,
      "current_context": "scorer.add_process_stage(\"Design\", opportunities=150, defects=12, target_yield=0.92)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_92",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 35,
      "current_context": "scorer.add_process_stage(\"Implementation\", opportunities=500, defects=35, target_yield=0.90)",
      "suggested_constant": "BUSINESS_THRESHOLD_35",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "scorer.add_process_stage(\"Implementation\", opportunities=500, defects=35, target_yield=0.90)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "scorer.add_process_stage(\"Testing\", opportunities=200, defects=8, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "scorer.add_process_stage(\"Deployment\", opportunities=50, defects=1, target_yield=0.98)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.98,
      "current_context": "scorer.add_process_stage(\"Deployment\", opportunities=50, defects=1, target_yield=0.98)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_98",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "'target_sigma_level': 4.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2.30753,
      "current_context": "z_score = t - (2.30753 + 0.27061 * t) / (1 + 0.99229 * t + 0.04481 * t * t)",
      "suggested_constant": "BUSINESS_THRESHOLD_2_30753",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.27061,
      "current_context": "z_score = t - (2.30753 + 0.27061 * t) / (1 + 0.99229 * t + 0.04481 * t * t)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_27061",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "'cosmetic': {'weight': 1.0, 'threshold': 50}",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.99229,
      "current_context": "z_score = t - (2.30753 + 0.27061 * t) / (1 + 0.99229 * t + 0.04481 * t * t)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_99229",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.04481,
      "current_context": "z_score = t - (2.30753 + 0.27061 * t) / (1 + 0.99229 * t + 0.04481 * t * t)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_04481",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "def __init__(self, lookback_periods: int = 20, min_volume_threshold: float = 1000.0):",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "volume_volatility = 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if calculation_time > 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "if reality_validation.validation_score < 0.60:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "if reality_validation.theater_risk > 0.40:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "theater_risk_penalty = reality_validation.theater_risk * 0.30",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 600,
      "current_context": "\"quality\": 600,       # 10 minutes",
      "suggested_constant": "BUSINESS_THRESHOLD_600",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1800,
      "current_context": "\"architecture\": 1800  # 30 minutes",
      "suggested_constant": "BUSINESS_THRESHOLD_1800",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "\"reality_validation_score_drop\": 0.10,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "if overall_reality_score >= 0.85 and theater_patterns_count <= 2:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.87,
      "current_context": "coverage_trend = 0.87 + 0.01 * (base_time.day % 7) / 7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_87",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "elif overall_reality_score >= 0.70 and theater_patterns_count <= 5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "low_reality_categories = [v.category for v in validations if v.validation_score < 0.70]",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "high_risk_categories = [v.category for v in validations if v.theater_risk > 0.30]",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 45.2,
      "current_context": "\"test_suite\": 45.2 * (1 + variance),",
      "suggested_constant": "BUSINESS_THRESHOLD_45_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 23.1,
      "current_context": "\"analysis_pipeline\": 23.1 * (1 - variance),",
      "suggested_constant": "BUSINESS_THRESHOLD_23_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 12.5,
      "current_context": "\"compliance_check\": 12.5 * (1 + variance/2)",
      "suggested_constant": "BUSINESS_THRESHOLD_12_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "coverage_trend = 0.87 + 0.01 * (base_time.day % 7) / 7",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "severity=\"high\" if reality_validation.validation_score < 0.50 else \"medium\",",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "\"overall_score\": min(0.90, 0.82 + 0.008 * (base_time.day % 10)),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 13,
      "current_context": "\"violations_eliminated\": 13 + (base_time.day % 5)",
      "suggested_constant": "BUSINESS_THRESHOLD_13",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "\"exception_rate\": max(0.01, 0.02 - 0.001 * (base_time.day % 10))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "\"severity_downgrades\": max(1, 3 - (base_time.day % 4))",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.008,
      "current_context": "\"overall_score\": min(0.90, 0.82 + 0.008 * (base_time.day % 10)),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_008",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "\"exception_rate\": max(0.01, 0.02 - 0.001 * (base_time.day % 10))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 700,
      "current_context": "\"total_violations\": max(700, 850 - 10 * (base_time.day % 15)),",
      "suggested_constant": "BUSINESS_THRESHOLD_700",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.35,
      "current_context": "\"coupling_score\": max(0.35, 0.45 - 0.01 * (base_time.day % 10)),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_35",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"score\": min(0.85, 0.78 + 0.005 * (base_time.day % 15)),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.003,
      "current_context": "\"overall_score\": min(0.98, 0.95 + 0.003 * (base_time.day % 10)),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_003",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.001,
      "current_context": "\"compliance_rate\": min(0.99, 0.98 + 0.001 * (base_time.day % 10)),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_001",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.001,
      "current_context": "\"exception_rate\": max(0.01, 0.02 - 0.001 * (base_time.day % 10))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_001",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 850,
      "current_context": "\"total_violations\": max(700, 850 - 10 * (base_time.day % 15)),",
      "suggested_constant": "BUSINESS_THRESHOLD_850",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.45,
      "current_context": "\"coupling_score\": max(0.35, 0.45 - 0.01 * (base_time.day % 10)),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 45,
      "current_context": "\"critical_violations\": max(30, 45 - (base_time.day % 16))",
      "suggested_constant": "BUSINESS_THRESHOLD_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.78,
      "current_context": "\"score\": min(0.85, 0.78 + 0.005 * (base_time.day % 15)),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "\"coupling_score\": max(0.35, 0.45 - 0.01 * (base_time.day % 10)),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.005,
      "current_context": "\"score\": min(0.85, 0.78 + 0.005 * (base_time.day % 15)),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_005",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "\"total_violations\": max(700, 850 - 10 * (base_time.day % 15)),",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "\"score\": min(0.85, 0.78 + 0.005 * (base_time.day % 15)),",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "return statistics.mean(scores) if scores else 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "return statistics.mean(scores) if scores else 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "return statistics.mean(scores) if scores else 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "\"minimum_improvement\": 0.05,  # 5% minimum real improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.03,
      "current_context": "\"minimum_improvement\": 0.03,  # 3% minimum quality improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_03",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "\"test_depth_ratio\": 0.60,  # 60% of coverage must come from meaningful tests",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"complexity_correlation\": 0.70,  # 70% correlation between metrics",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "\"vulnerability_elimination_rate\": 0.80,  # 80% must be real eliminations",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.2,
      "current_context": "\"false_positive_threshold\": 0.20,  # <20% false positives",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "\"attack_surface_reduction\": 0.10,  # 10% real attack surface reduction",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"rule_implementation_rate\": 0.85,  # 85% must be real rule implementations",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "\"god_object_decomposition_depth\": 0.60,  # 60% complexity reduction required",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "confidence_score=0.88,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "confidence_score=0.82,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.92,
      "current_context": "confidence_score=0.92,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_92",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "if int_data.get(\"effectiveness_score\", 0) < 0.60:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if doc_data.get(\"integration_guidance_quality\", 0) >= 0.80:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.18,
      "current_context": "if quality_data.get(\"overall_improvement\", 0) >= 0.18:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "if reality_score >= 0.85 and theater_risk_count <= 1:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if genuine_phases == len(phase_assessments) and system_reality_score >= 0.80:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "\"quality_improvement\": 0.25,  # Significant improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "\"clarity_improvement\": 0.30,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"integration_guidance_quality\": 0.85,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.78,
      "current_context": "\"effectiveness_score\": 0.78,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "\"reality_validation_threshold\": reality_score >= 0.90,  # 90% reality score",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "if reality_score >= 0.85 and theater_risks <= 3:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "if score_improvement > 0.10 and rules_genuinely_implemented < 2:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.65,
      "current_context": "elif reality_score >= 0.65 and theater_risk_count <= 3:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "elif genuine_phases >= len(phase_assessments) * 0.75 and system_reality_score >= 0.70:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"reality_validation_success\": system_reality_score >= 0.80  # Success threshold",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.6,
      "current_context": "\"baseline\": {\"effectiveness\": 0.60}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.78,
      "current_context": "\"baseline_score\": 0.78,  # From earlier analysis",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "\"improvement_score\": 0.20,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 42,
      "current_context": "\"before_count\": 42,  # From baseline",
      "suggested_constant": "BUSINESS_THRESHOLD_42",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"reduction_percentage\": 0.85,  # Significant reduction",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "\"complexity_improvement\": 0.40  # Substantial complexity reduction",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "\"overall_improvement\": 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "reality_score >= 0.80 and",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "elif reality_score >= 0.70 and theater_risks <= 6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "elif reality_score >= 0.70 and theater_risks <= 6:",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "confidence=0.95,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "confidence=0.85,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "scores.append(0.90)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "if quality_improvement >= 0.20:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "scores.append(0.75)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.45,
      "current_context": "elif reality_score >= 0.45 and theater_risk_count <= 5:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "elif reality_score >= 0.30:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "elif genuine_phases >= len(phase_assessments) * 0.75 and system_reality_score >= 0.70:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "elif genuine_phases >= len(phase_assessments) * 0.50:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "\"after_count\": phase3_data.get(\"metrics_before_vs_after\", {}).get(\"unified_analyzer_py\", {}).get(\"after\", {}).get(\"god_object_score\", 6),",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "if reduction_rate > 0.30 and maintainability_improvement < 0.05:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "if reduction_rate > 0.30 and maintainability_improvement < 0.05:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "scores.append(0.40)  # Theater risk",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "scores.append(0.75)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "scores.append(0.85)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "elif quality_improvement >= 0.10:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "scores.append(0.80)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "scores.append(0.80)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.15,
      "current_context": "elif reduction_rate > 0.15 and maintainability_improvement >= 0.10:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "elif reduction_rate > 0.15 and maintainability_improvement >= 0.10:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "scores.append(0.85)  # Genuine improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.65,
      "current_context": "scores.append(0.65)  # Moderate improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "scores.append(0.70)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.55,
      "current_context": "scores.append(0.55)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_55",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "scores.append(0.85)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "scores.append(0.70)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "if reduction > 0.30 and complexity_improvement >= 0.15:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "if reduction > 0.30 and complexity_improvement >= 0.15:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "scores.append(0.90)  # Genuine decomposition",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "scores.append(0.70)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "high_confidence_items = sum(len([e for e in a.evidence_items if e.confidence >= 0.85]) for a in assessments)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.2,
      "current_context": "elif reduction > 0.20 and complexity_improvement >= 0.08:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.08,
      "current_context": "elif reduction > 0.20 and complexity_improvement >= 0.08:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_08",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "scores.append(0.75)  # Good decomposition",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "elif reduction > 0.15:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "scores.append(0.60)  # Some improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "scores.append(0.40)  # Minimal improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "return volatility > 0.02  # 2% volatility threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "quality_boost += 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "impact = rec.get('impact', 0.5)  # 0-1 scale",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "effort = rec.get('effort', 0.5)  # 0-1 scale (lower is better)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "EXCELLENT_THRESHOLD = 0.90",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "GOOD_THRESHOLD = 0.75",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.6,
      "current_context": "FAIR_THRESHOLD = 0.60",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "POOR_THRESHOLD = 0.40",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "combined_hit_rate * 0.7 +  # Hit rate is most important",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "(1 - combined_memory_utilization) * 0.3  # Lower utilization is better",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"health_score\": 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"hit_rate\": 0.75,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"efficiency\": 0.80,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"utilization\": 0.70",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "\"coverage\": 0.85,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "rollback_threshold: float = 0.85",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "'connascence_score': 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "if pm_results.get('import_success'): batch4_score += 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "if pm_results.get('instantiation_success'): batch4_score += 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "if pm_results.get('initial_pattern_count', 0) > 0: batch4_score += 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "if scores.get('batch_4', 0) < 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "if scores.get('batch_5', 0) < 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "if scores.get('batch_9', 0) < 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "if overall_score >= 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "batch4_score += int(method_ratio * 25)",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "batch5_score += int((file_count / total_files) * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if reality_score >= 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "'targetSigma': 4.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "'sigmaShift': 1.5",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'nasaPOT10': 95,",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 999,
      "current_context": "threshold = detector.get_threshold('max_positional_args', 999)",
      "suggested_constant": "BUSINESS_THRESHOLD_999",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6210.0,
      "current_context": "config.telemetry.dpmo_threshold = 6210.0  # 4-sigma level",
      "suggested_constant": "BUSINESS_THRESHOLD_6210_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 99,
      "current_context": "config.security.slsa_level = 99  # Invalid SLSA level",
      "suggested_constant": "BUSINESS_THRESHOLD_99",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "print(\"-\" * 40)",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "\"compliance_score\": min(1.0, nasa_score + 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "{\"id\": \"CC7.1\", \"name\": \"System Operations\", \"status\": \"compliant\" if nasa_score > 0.8 else \"non_compliant\"}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 7.5,
      "current_context": "assert violation_dict[\"weight\"] == 7.5, \"Weight field missing\"",
      "suggested_constant": "SCORING_WEIGHT_7_5",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 7.5,
      "current_context": "weight=7.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_7_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "\"nasa_compliance\": 0.88,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.2,
      "current_context": "\"six_sigma_level\": 4.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.79,
      "current_context": "\"mece_score\": 0.79,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_79",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 8.5,
      "current_context": "\"duplication_percentage\": 8.5",
      "suggested_constant": "BUSINESS_THRESHOLD_8_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "elif reality_score >= 6.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1500,
      "current_context": "{'current_loss': -1500, 'authenticated_by': auth_result.user_id},",
      "suggested_constant": "BUSINESS_THRESHOLD_1500",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.7,
      "current_context": "target_threshold = 4.7  # Target <4.7% overhead",
      "suggested_constant": "BUSINESS_THRESHOLD_4_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "quality_threshold = 80.0",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "self.assertGreaterEqual(accuracy, 0.75)  # 75% accuracy threshold",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 90,
      "current_context": "if all_passed and compliance_score >= 90:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "if all_passed and compliance_score >= 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 66.0,
      "current_context": "self.assertGreaterEqual(quality_score, 66.0)  # At least 2/3 files should exist",
      "suggested_constant": "BUSINESS_THRESHOLD_66_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75.0,
      "current_context": "self.assertGreaterEqual(quality_score, 75.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_75_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "compliance_score = sum(1 for v in compliance_items.values() if v) * 25",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if compliance_score >= 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.0,
      "current_context": "if reality_score >= 9.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_9_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "elif reality_score >= 6.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "elif reality_score >= 4.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1500,
      "current_context": "'current_loss': -1500,",
      "suggested_constant": "BUSINESS_THRESHOLD_1500",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 65,
      "current_context": "print(\"=\" * 65)",
      "suggested_constant": "BUSINESS_THRESHOLD_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 65,
      "current_context": "print(\"=\" * 65)",
      "suggested_constant": "BUSINESS_THRESHOLD_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "elif reality_score >= 95.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 65,
      "current_context": "print(\"\\n\" + \"=\" * 65)",
      "suggested_constant": "BUSINESS_THRESHOLD_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "elif reality_score >= 80.0:",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "if score >= 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "if results[\"reality_score\"] >= 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "elif score >= 40:",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "elif score >= 20:",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "def create_enterprise_config(self, nasa_target: int = 95) -> Path:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "self.assertEqual(nasa_target, 95)",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "self.assertEqual(compliance_threshold, 95)",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6210,
      "current_context": "return sigma_to_dpmo.get(target_sigma, 6210)",
      "suggested_constant": "BUSINESS_THRESHOLD_6210",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 81,
      "current_context": "if reality_score >= 81:",
      "suggested_constant": "BUSINESS_THRESHOLD_81",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if reality_score < 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'overall_quality_threshold': 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 4.0,
      "current_context": "'targetSigma': 4.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "'sigmaShift': 1.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.2,
      "current_context": "'performanceThreshold': 1.2",
      "suggested_constant": "BUSINESS_THRESHOLD_1_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "'targetSigma': 4.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "self.create_enterprise_config(nasa_target=95)",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "self.create_enterprise_config(nasa_target=90)",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 61,
      "current_context": "elif reality_score >= 61:",
      "suggested_constant": "BUSINESS_THRESHOLD_61",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\"*50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "'low': 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "'medium': 0.6,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"\\n\" + \"=\"*50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "'max_methods': 20,",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "'rule_5_assertion_density': 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "'targetSigma': 4.0",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "if report['overall_reality_score'] >= 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85.0,
      "current_context": "reality_score = 85.0",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 81,
      "current_context": "if self.overall_score >= 81:",
      "suggested_constant": "BUSINESS_THRESHOLD_81",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "reality_score = min(90.0, 30.0 + (functional_tests * 20.0))",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "reality_score = min(95.0, 20.0 + (functional_tests * 12.5))",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85.0,
      "current_context": "reality_score = min(85.0, 25.0 + (functional_tests * 15.0))",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15.0,
      "current_context": "reality_score = 15.0",
      "suggested_constant": "BUSINESS_THRESHOLD_15_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "reality_score = min(80.0, 30.0 + (functional_tests * 16.0))",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20.0,
      "current_context": "reality_score = 20.0",
      "suggested_constant": "BUSINESS_THRESHOLD_20_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "weight = weights.get(result.component, 0.2)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 61,
      "current_context": "elif self.overall_score >= 61:",
      "suggested_constant": "BUSINESS_THRESHOLD_61",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "production_ready=reality_score >= 80",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "production_ready=reality_score >= 80",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20.0,
      "current_context": "reality_score = min(95.0, 20.0 + (functional_tests * 12.5))",
      "suggested_constant": "BUSINESS_THRESHOLD_20_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "production_ready=reality_score >= 80",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25.0,
      "current_context": "reality_score = min(85.0, 25.0 + (functional_tests * 15.0))",
      "suggested_constant": "BUSINESS_THRESHOLD_25_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "production_ready=reality_score >= 80",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.5,
      "current_context": "\"six_sigma_level\": 4.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"mece_score\": 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "production_ready=reality_score >= 80",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20.0,
      "current_context": "reality_score = min(90.0, 30.0 + (functional_tests * 20.0))",
      "suggested_constant": "BUSINESS_THRESHOLD_20_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 12.5,
      "current_context": "reality_score = min(95.0, 20.0 + (functional_tests * 12.5))",
      "suggested_constant": "BUSINESS_THRESHOLD_12_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15.0,
      "current_context": "reality_score = min(85.0, 25.0 + (functional_tests * 15.0))",
      "suggested_constant": "BUSINESS_THRESHOLD_15_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "gates['minimum_test_coverage'] = total_tests >= 20  # Minimum test count",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "'performance_improvement': 0.5 if 'performance' in suite_name else 0.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'byzantine_consensus_score': 0.9 if 'precision' in suite_name else 0.0",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 120,
      "current_context": "if result.execution_time > 120:  # 2 minute threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_120",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 120,
      "current_context": "result.execution_time < 120 for result in performance_results",
      "suggested_constant": "BUSINESS_THRESHOLD_120",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'passed': byzantine_score >= 0.9,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "if c.get('correlation_score', 0) > 0.7",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "\"valid\": builders_found >= 4",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 92.7,
      "current_context": "gate_status = \"pass\" if compilation_results[\"rate\"] >= 92.7 else \"fail\"",
      "suggested_constant": "BUSINESS_THRESHOLD_92_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 92.7,
      "current_context": "\"status\": \"pass\" if compilation_results[\"rate\"] >= 92.7 else \"fail\",",
      "suggested_constant": "BUSINESS_THRESHOLD_92_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "\"validation_tests\": 25,",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "\"avg_validation_time_ms\": 15,",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "if compilation_rate >= 95:",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\" * 70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "elif compilation_rate >= 90:",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18,
      "current_context": "\"security_validation\": {\"avg_ms\": 18, \"overhead\": \"4%\"},",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 14,
      "current_context": "\"performance_validation\": {\"avg_ms\": 14, \"overhead\": \"2%\"},",
      "suggested_constant": "BUSINESS_THRESHOLD_14",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "\"audit_validation\": {\"avg_ms\": 15, \"overhead\": \"2%\"}",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20.0,
      "current_context": "self.assertLess(avg_time_per_validation, 20.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_20_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "result.is_implemented = result.implementation_quality >= 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.6,
      "current_context": "result.is_implemented = result.implementation_quality >= 0.6",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "result.is_implemented = result.implementation_quality >= 0.6",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "result.is_implemented = result.implementation_quality >= 0.6",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "result.is_implemented = result.implementation_quality >= 0.6",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "result.is_implemented = result.implementation_quality >= 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "result.is_implemented = result.implementation_quality >= 0.6",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "result.is_implemented = result.implementation_quality >= 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "result.is_implemented = result.implementation_quality >= 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 14,
      "current_context": "14: SafetyChainPatternValidator(),",
      "suggested_constant": "BUSINESS_THRESHOLD_14",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "15: StreamingPatternValidator(),",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 17,
      "current_context": "17: NeuralPatternValidator(),",
      "suggested_constant": "BUSINESS_THRESHOLD_17",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18,
      "current_context": "18: ByzantinePatternValidator()",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"-\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9,
      "current_context": "total_batches: int = 9",
      "suggested_constant": "BUSINESS_THRESHOLD_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 14,
      "current_context": "14: self._test_safety_chain_functionality,",
      "suggested_constant": "BUSINESS_THRESHOLD_14",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "15: self._test_streaming_functionality,",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 17,
      "current_context": "17: self._test_neural_factory_functionality,",
      "suggested_constant": "BUSINESS_THRESHOLD_17",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18,
      "current_context": "18: self._test_byzantine_command_functionality",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "cop_score = min(25, result.cop_reduction_percentage * 25 / 80)  # 25 points max, scaled to 80% target",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "if self.validation_report.overall_cop_reduction < 80:",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "if degradation > 0.2:  # 20% degradation threshold",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "functional_score = (result.functional_tests_passed / total_functional) * 25  # 25 points max",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "cop_score = min(25, result.cop_reduction_percentage * 25 / 80)  # 25 points max, scaled to 80% target",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "integration_score = (result.integration_tests_passed / total_integration) * 20  # 20 points max",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75.0,
      "current_context": "if result.quality_score >= 75.0 and not result.performance_regression and not result.critical_issues:",
      "suggested_constant": "BUSINESS_THRESHOLD_75_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "cop_score = min(25, result.cop_reduction_percentage * 25 / 80)  # 25 points max, scaled to 80% target",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "self.malicious_simulator.simulate_malicious_behavior('message_tampering', intensity=0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "concurrent_requests = max(10, int(intensity * 50))",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2000.0,
      "current_context": "timeout_ms=2000.0",
      "suggested_constant": "BUSINESS_THRESHOLD_2000_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "thread_ids=[1, 2, 3, 4],  # High contention",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "thread_ids=list(range(1, random.randint(2, 6))),",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "if memory_utilization > 0.85:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "if incremental_cache_stats.get(\"dependency_invalidations\", 0) > 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "if health_score < 0.6:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "hit_rate_score = min(1.0, combined_hit_rate / 0.8)  # Target: 80% hit rate",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "health_score = (hit_rate_score * 0.4 + memory_score * 0.3 + efficiency_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"health_score\": {\"threshold\": 0.75, \"name\": \"Health Score >= 75%\"},",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.6,
      "current_context": "\"hit_rate\": {\"threshold\": 0.60, \"name\": \"Hit Rate >= 60%\"},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"cache_efficiency\": {\"threshold\": 0.70, \"name\": \"Cache Efficiency >= 70%\"},",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "\"memory_utilization\": {\"max_threshold\": 0.85, \"name\": \"Memory Utilization <= 85%\"}",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.4,
      "current_context": "\"health_score\": 0.40,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "\"health_score\": 0.60,  # Reduced due to partial failure",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.35,
      "current_context": "\"hit_rate\": 0.35,      # Only from working cache",
      "suggested_constant": "BUSINESS_THRESHOLD_0_35",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.65,
      "current_context": "\"optimization_potential\": 0.65",
      "suggested_constant": "BUSINESS_THRESHOLD_0_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "memory_score = 1.0 - abs(memory_utilization - 0.7)  # Optimal: 70% utilization",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "health_score = (hit_rate_score * 0.4 + memory_score * 0.3 + efficiency_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "health_score = (hit_rate_score * 0.4 + memory_score * 0.3 + efficiency_score * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"values\": {\"health_score\": 0.85, \"hit_rate\": 0.78, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.68},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.78,
      "current_context": "\"values\": {\"health_score\": 0.85, \"hit_rate\": 0.78, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.68},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "\"values\": {\"health_score\": 0.85, \"hit_rate\": 0.78, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.68},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.68,
      "current_context": "\"values\": {\"health_score\": 0.85, \"hit_rate\": 0.78, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.68},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_68",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.65,
      "current_context": "\"values\": {\"health_score\": 0.65, \"hit_rate\": 0.78, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.68},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.78,
      "current_context": "\"values\": {\"health_score\": 0.65, \"hit_rate\": 0.78, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.68},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "\"values\": {\"health_score\": 0.65, \"hit_rate\": 0.78, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.68},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.68,
      "current_context": "\"values\": {\"health_score\": 0.65, \"hit_rate\": 0.78, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.68},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_68",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"values\": {\"health_score\": 0.85, \"hit_rate\": 0.45, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.68},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.45,
      "current_context": "\"values\": {\"health_score\": 0.85, \"hit_rate\": 0.45, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.68},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "\"values\": {\"health_score\": 0.85, \"hit_rate\": 0.45, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.68},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.68,
      "current_context": "\"values\": {\"health_score\": 0.85, \"hit_rate\": 0.45, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.68},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_68",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"values\": {\"health_score\": 0.85, \"hit_rate\": 0.78, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.90},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.78,
      "current_context": "\"values\": {\"health_score\": 0.85, \"hit_rate\": 0.78, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.90},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "\"values\": {\"health_score\": 0.85, \"hit_rate\": 0.78, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.90},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "\"values\": {\"health_score\": 0.85, \"hit_rate\": 0.78, \"cache_efficiency\": 0.82, \"memory_utilization\": 0.90},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "\"health_score\": 0.50,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if utilization > 0.8:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "if efficiency < 0.7:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"health_score_min\": 0.75,      # >= 75%",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.6,
      "current_context": "\"hit_rate_min\": 0.60,          # >= 60%",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"efficiency_min\": 0.70         # >= 70%",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "{\"health_score\": 0.85, \"hit_rate\": 0.78, \"efficiency\": 0.82, \"should_pass\": True},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.78,
      "current_context": "{\"health_score\": 0.85, \"hit_rate\": 0.78, \"efficiency\": 0.82, \"should_pass\": True},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "{\"health_score\": 0.85, \"hit_rate\": 0.78, \"efficiency\": 0.82, \"should_pass\": True},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.65,
      "current_context": "{\"health_score\": 0.65, \"hit_rate\": 0.78, \"efficiency\": 0.82, \"should_pass\": False},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.78,
      "current_context": "{\"health_score\": 0.65, \"hit_rate\": 0.78, \"efficiency\": 0.82, \"should_pass\": False},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "{\"health_score\": 0.65, \"hit_rate\": 0.78, \"efficiency\": 0.82, \"should_pass\": False},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "{\"health_score\": 0.85, \"hit_rate\": 0.45, \"efficiency\": 0.82, \"should_pass\": False},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.45,
      "current_context": "{\"health_score\": 0.85, \"hit_rate\": 0.45, \"efficiency\": 0.82, \"should_pass\": False},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "{\"health_score\": 0.85, \"hit_rate\": 0.45, \"efficiency\": 0.82, \"should_pass\": False},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "{\"health_score\": 0.85, \"hit_rate\": 0.78, \"efficiency\": 0.65, \"should_pass\": False}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.78,
      "current_context": "{\"health_score\": 0.85, \"hit_rate\": 0.78, \"efficiency\": 0.65, \"should_pass\": False}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.65,
      "current_context": "{\"health_score\": 0.85, \"hit_rate\": 0.78, \"efficiency\": 0.65, \"should_pass\": False}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "\"health_score\": 0.50,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "health_score = min(1.0, (hit_rate * 0.6) + (utilization * 0.4))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "health_score = min(1.0, (hit_rate * 0.6) + (utilization * 0.4))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "efficiency = hit_rate * (1 - abs(utilization - 0.7))  # Optimal around 70% utilization",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\" * 70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"-\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"-\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(\"=\" * 70)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "print(f\"   [OK] Within Target Limit: {overhead < 1.5}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.5,
      "current_context": "within_limits = performance_overhead < 1.5",
      "suggested_constant": "BUSINESS_THRESHOLD_1_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "evidence_retention_days=90,",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "\"controls_assessed\": 15,",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 78.5,
      "current_context": "\"overall_compliance_score\": 78.5",
      "suggested_constant": "BUSINESS_THRESHOLD_78_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 72.3,
      "current_context": "\"overall_compliance_score\": 72.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_72_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "performance_overhead = elapsed_time / 0.1 * 100 if elapsed_time > 0 else 0",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"\\n\" + \"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "self.config.PROFIT_SPLIT_RATIO = 0.50",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "self.siphon_config.profit_split_ratio = 0.50",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "config.profit_split_ratio = 0.50",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 250.0,
      "current_context": "self.assertEqual(results['split_results']['siphon_amount'], 250.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_250_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 250.0,
      "current_context": "self.assertEqual(results['split_results']['remaining_amount'], 250.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_250_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "self.assertEqual(results['split_results']['split_ratio_applied'], 0.50)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "'net_profit': 50.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "self.assertEqual(results['split_results']['remaining_amount'], 50.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25000.0,
      "current_context": "'net_profit': 25000.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_25000_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15000.0,
      "current_context": "self.assertEqual(results['split_results']['remaining_amount'], 15000.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_15000_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300.0,
      "current_context": "self.assertEqual(remaining_amount, 300.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_300_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "siphon_amount, remaining_amount = self.calculator.calculate_simple_split(50.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "split_ratio=0.50,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "ProfitSplitConfig(split_ratio=0.50, min_threshold=100.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.98,
      "current_context": "if assessment['quality_scores']['concurrent_load_success_rate'] < 0.98:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_98",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'target_score': 0.90,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'target_score': 0.90,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score += 0.3 * (files_present / len(critical_files))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "score += 0.4 * (imports_working / len(module_imports))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score += 0.3 * min(1.0, total_components / 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'passed': 0.90 >= rules['target_score'],",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "score += 0.3 * min(1.0, total_components / 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 150,
      "current_context": "\"lines_of_code\": 150,",
      "suggested_constant": "BUSINESS_THRESHOLD_150",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"complexity_score\": 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "\"analysis_time\": 0.1,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "assert len(report_data['analysis_history']) == 4",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "\"quality_score\": 0.9 if \"high_quality\" in str(code_path) else 0.7,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "\"quality_score\": 0.9 if \"high_quality\" in str(code_path) else 0.7,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 4,
      "current_context": "elif i < 4:",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50000,
      "current_context": "\"dpmo\": {\"threshold\": 50000, \"actual\": quality_metrics.dpmo},",
      "suggested_constant": "BUSINESS_THRESHOLD_50000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "\"rty\": {\"threshold\": 80.0, \"actual\": quality_metrics.rty}",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"complexity_score\": 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "assert security_analysis['risk_score'] == 0.15",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1500,
      "current_context": "for i in range(1500):  # More than the 1000 limit",
      "suggested_constant": "BUSINESS_THRESHOLD_1500",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "assert security_analysis['risk_score'] == 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "risk_score=0.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "risk_score=0.15,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert duration < 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1500,
      "current_context": "for i in range(1500):  # More than the 1000 limit",
      "suggested_constant": "BUSINESS_THRESHOLD_1500",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "assert memory_increase < 50 * 1024 * 1024  # Less than 50MB increase",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.08,
      "current_context": "assert violation['gap'] == 0.08",
      "suggested_constant": "BUSINESS_THRESHOLD_0_08",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "result = self.manager.validate_nasa_compliance(0.80)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "assert len(summary['impact_breakdown']) == 50",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "result = self.manager.validate_nasa_compliance(0.85)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "assert duration < 0.1  # Should be fast even with many features",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "assert result['current_compliance'] == 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "assert object_growth < 5000  # Reasonable growth limit",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.1,
      "current_context": "self.manager.validate_nasa_compliance(1.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_1_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.1,
      "current_context": "min_nasa_compliance=1.1",
      "suggested_constant": "BUSINESS_THRESHOLD_1_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'min_nasa_compliance': 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "self.manager.validate_nasa_compliance(-0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "min_nasa_compliance=-0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "'performance_impact': ['none', 'low', 'medium', 'high'][i % 4],",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "assert sigma == 6.0",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.4,
      "current_context": "sigma = self.telemetry.calculate_sigma_level(3.4)",
      "suggested_constant": "BUSINESS_THRESHOLD_3_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5.9,
      "current_context": "assert sigma >= 5.9  # Should be very close to 6 sigma",
      "suggested_constant": "BUSINESS_THRESHOLD_5_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6210,
      "current_context": "sigma = self.telemetry.calculate_sigma_level(6210)",
      "suggested_constant": "BUSINESS_THRESHOLD_6210",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.8,
      "current_context": "assert 3.8 <= sigma <= 4.2  # Should be around 4 sigma",
      "suggested_constant": "BUSINESS_THRESHOLD_3_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.2,
      "current_context": "assert 3.8 <= sigma <= 4.2  # Should be around 4 sigma",
      "suggested_constant": "BUSINESS_THRESHOLD_4_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 66807,
      "current_context": "sigma = self.telemetry.calculate_sigma_level(66807)",
      "suggested_constant": "BUSINESS_THRESHOLD_66807",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2.8,
      "current_context": "assert 2.8 <= sigma <= 3.2  # Should be around 3 sigma",
      "suggested_constant": "BUSINESS_THRESHOLD_2_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.2,
      "current_context": "assert 2.8 <= sigma <= 3.2  # Should be around 3 sigma",
      "suggested_constant": "BUSINESS_THRESHOLD_3_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1000000,
      "current_context": "sigma = self.telemetry.calculate_sigma_level(1000000)  # 100% defects",
      "suggested_constant": "BUSINESS_THRESHOLD_1000000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.4,
      "current_context": "sigma = self.telemetry._approximate_sigma_level(3.4)",
      "suggested_constant": "BUSINESS_THRESHOLD_3_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "assert sigma == 6.0  # Should fall back to quality level lookup",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.4,
      "current_context": "level = self.telemetry.get_quality_level(3.4)",
      "suggested_constant": "BUSINESS_THRESHOLD_3_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 233,
      "current_context": "level = self.telemetry.get_quality_level(233)",
      "suggested_constant": "BUSINESS_THRESHOLD_233",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6210,
      "current_context": "level = self.telemetry.get_quality_level(6210)",
      "suggested_constant": "BUSINESS_THRESHOLD_6210",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 66807,
      "current_context": "level = self.telemetry.get_quality_level(66807)",
      "suggested_constant": "BUSINESS_THRESHOLD_66807",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 308537,
      "current_context": "level = self.telemetry.get_quality_level(308537)",
      "suggested_constant": "BUSINESS_THRESHOLD_308537",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 500000,
      "current_context": "level = self.telemetry.get_quality_level(500000)",
      "suggested_constant": "BUSINESS_THRESHOLD_500000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 97.5,
      "current_context": "assert metrics.rty == 97.5   # (195/200) * 100",
      "suggested_constant": "BUSINESS_THRESHOLD_97_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 98,
      "current_context": "self.telemetry.current_session_data['units_passed'] = 98 - i  # Declining quality",
      "suggested_constant": "BUSINESS_THRESHOLD_98",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.0,
      "current_context": "lower_spec = 9.0",
      "suggested_constant": "BUSINESS_THRESHOLD_9_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.5,
      "current_context": "assert metrics.sigma_level == 4.5",
      "suggested_constant": "BUSINESS_THRESHOLD_4_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.33,
      "current_context": "assert metrics.process_capability == 1.33",
      "suggested_constant": "BUSINESS_THRESHOLD_1_33",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "assert QualityLevel.FOUR_SIGMA.value == 4.0",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "assert QualityLevel.SIX_SIGMA.value == 6.0",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "assert sigma_level == 6.0  # Perfect quality",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "defect_rates = [0.1, 0.08, 0.06, 0.04, 0.02]  # Decreasing defects",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.08,
      "current_context": "defect_rates = [0.1, 0.08, 0.06, 0.04, 0.02]  # Decreasing defects",
      "suggested_constant": "BUSINESS_THRESHOLD_0_08",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.06,
      "current_context": "defect_rates = [0.1, 0.08, 0.06, 0.04, 0.02]  # Decreasing defects",
      "suggested_constant": "BUSINESS_THRESHOLD_0_06",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.04,
      "current_context": "defect_rates = [0.1, 0.08, 0.06, 0.04, 0.02]  # Decreasing defects",
      "suggested_constant": "BUSINESS_THRESHOLD_0_04",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "defect_rates = [0.1, 0.08, 0.06, 0.04, 0.02]  # Decreasing defects",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "assert sigma_level == 6.0  # Perfect quality",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15.0,
      "current_context": "measurements = [5.0, 15.0, 8.0, 12.0]  # Some outside 9-11 range",
      "suggested_constant": "BUSINESS_THRESHOLD_15_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 10.1,
      "current_context": "measurements = [10.0, 10.1, 9.9]",
      "suggested_constant": "BUSINESS_THRESHOLD_10_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9.9,
      "current_context": "measurements = [10.0, 10.1, 9.9]",
      "suggested_constant": "BUSINESS_THRESHOLD_9_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.0,
      "current_context": "assert sigma_level >= 4.0  # Should use approximation",
      "suggested_constant": "BUSINESS_THRESHOLD_4_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.4,
      "current_context": "(3.4, QualityLevel.SIX_SIGMA),",
      "suggested_constant": "BUSINESS_THRESHOLD_3_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 233,
      "current_context": "(233, QualityLevel.FIVE_SIGMA),",
      "suggested_constant": "BUSINESS_THRESHOLD_233",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6210,
      "current_context": "(6210, QualityLevel.FOUR_SIGMA),",
      "suggested_constant": "BUSINESS_THRESHOLD_6210",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 66807,
      "current_context": "(66807, QualityLevel.THREE_SIGMA),",
      "suggested_constant": "BUSINESS_THRESHOLD_66807",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 308537,
      "current_context": "(308537, QualityLevel.TWO_SIGMA),",
      "suggested_constant": "BUSINESS_THRESHOLD_308537",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 500000,
      "current_context": "(500000, 1.0)  # Below 2-sigma",
      "suggested_constant": "BUSINESS_THRESHOLD_500000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.4,
      "current_context": "quality_level = self.telemetry.get_quality_level(dpmo=3.4)",
      "suggested_constant": "BUSINESS_THRESHOLD_3_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 233,
      "current_context": "quality_level = self.telemetry.get_quality_level(dpmo=233)",
      "suggested_constant": "BUSINESS_THRESHOLD_233",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6210,
      "current_context": "quality_level = self.telemetry.get_quality_level(dpmo=6210)",
      "suggested_constant": "BUSINESS_THRESHOLD_6210",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 66807,
      "current_context": "quality_level = self.telemetry.get_quality_level(dpmo=66807)",
      "suggested_constant": "BUSINESS_THRESHOLD_66807",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 308537,
      "current_context": "quality_level = self.telemetry.get_quality_level(dpmo=308537)",
      "suggested_constant": "BUSINESS_THRESHOLD_308537",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 500000,
      "current_context": "quality_level = self.telemetry.get_quality_level(dpmo=500000)",
      "suggested_constant": "BUSINESS_THRESHOLD_500000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 233,
      "current_context": "sigma_level = self.telemetry.calculate_sigma_level(dpmo=233)  # Five sigma",
      "suggested_constant": "BUSINESS_THRESHOLD_233",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"nasa_compliance\": 0.80,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15.0,
      "current_context": "\"duplication_percentage\": 15.0",
      "suggested_constant": "BUSINESS_THRESHOLD_15_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"nasa_compliance\": 0.75",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"compliance_score\": 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "(\"Compliance average\", abs(consolidated['nasa_compliance'] - expected_avg) < 0.01),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "(\"Not hardcoded 0.88\", correlation['correlation_score'] != 0.88)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"consistency_check\": \"passed\" if consistency_score > 0.7 else \"warning\",",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "self.stages_passed.append(4)",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "\"expected_stage\": 6,",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "return self._reject(4, \"Final validation failed\")",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "return self._reject(6, \"Quality standards not met\")",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(ColoredOutput.header(\"=\"*70))",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "print(ColoredOutput.header(\"\\n\" + \"=\"*70))",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"nasa_compliance\": 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "\"compliance_score\": 0.88",
      "suggested_constant": "BUSINESS_THRESHOLD_0_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "if overall_score >= 75:",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.74,
      "current_context": "\"nasa_compliance\": 0.74,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_74",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.1,
      "current_context": "\"six_sigma_level\": 3.1,",
      "suggested_constant": "BUSINESS_THRESHOLD_3_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.68,
      "current_context": "\"mece_score\": 0.68,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_68",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18.7,
      "current_context": "\"duplication_percentage\": 18.7,",
      "suggested_constant": "BUSINESS_THRESHOLD_18_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "\"compliance_score\": 0.82,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.2,
      "current_context": "\"duplication_percentage\": 4.2",
      "suggested_constant": "BUSINESS_THRESHOLD_4_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "compliance_correct = abs(nasa_compliance - 0.78) < 0.01",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "violations_correct = total_violations == 6",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "for i in range(80)  # 80 external issues",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.78,
      "current_context": "compliance_correct = abs(nasa_compliance - 0.78) < 0.01",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "self.metrics['nasa_compliance'] = 95",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 98,
      "current_context": "self.metrics['defense_compliance'] = 98",
      "suggested_constant": "BUSINESS_THRESHOLD_98",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 35973,
      "current_context": "'connascence_total': 35973,",
      "suggested_constant": "BUSINESS_THRESHOLD_35973",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "('NASA Compliance >95%', self.metrics['nasa_compliance'] >= 95),",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "('Defense Compliance >95%', self.metrics['defense_compliance'] >= 95),",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "return data.get('god_objects', [])[:95]  # Limit to 95",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "('Connascence Reduced >80%', self.metrics['connascence_fixed'] >= self.metrics['connascence_total'] * 0.8),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "expected_total = 6    # 3 + 3 violations",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.825,
      "current_context": "expected_avg_compliance = 0.825  # (0.80 + 0.85) / 2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_825",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"nasa_compliance\": 0.80,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"compliance_score\": 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "if final_reality_score >= 85:",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "if final_reality_score >= 85:",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "if reality_score >= 70:",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "return github_reality_score >= 80",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "avg_correct = abs(actual_avg - expected_avg_compliance) < 0.01",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "theater_check = corr_score != 0.88  # Common theater value",
      "suggested_constant": "BUSINESS_THRESHOLD_0_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "return correlation_reality_score >= 70",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.77,
      "current_context": "\"nasa_compliance\": 0.77",
      "suggested_constant": "BUSINESS_THRESHOLD_0_77",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.83,
      "current_context": "\"compliance_score\": 0.83",
      "suggested_constant": "BUSINESS_THRESHOLD_0_83",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "\"GitHub HTTP Integration\": (github_real, 40),    # Most critical",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 35,
      "current_context": "\"Correlation Logic\": (correlation_real, 35),     # Core functionality",
      "suggested_constant": "BUSINESS_THRESHOLD_35",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "\"File Operations\": (file_ops_real, 25)           # Basic requirement",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "elif final_reality_score >= 70:",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.76,
      "current_context": "nasa_compliance_score=0.76,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_76",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 16.3,
      "current_context": "duplication_percentage=16.3",
      "suggested_constant": "BUSINESS_THRESHOLD_16_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "correlation_reality_score = (tests_passed / 6) * 100",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "elif final_reality_score >= 50:",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "print(f\"  [OK] Real auth header: {req['headers'].get('Authorization', 'MISSING')[:20]}...\")",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "\"Missing rate limiting\": 20,",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "\"Missing retry logic\": 15,",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "print(\"-\" * 40)",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "total_complexity < 50 and",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "metrics[\"quality\"] = 75",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "god_objects = sum(1 for r in all_results if r.get(\"god_object_score\", 0) > 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(f\"\\n{'='*50}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(f\"{'='*50}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(f\"\\n{'='*50}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "self.assertLess(analysis_time, 5000, \"Six Sigma analysis should have low impact\")",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "low_compliance_validation = feature_manager.validate_nasa_compliance(0.85)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "\"real_http_requests\": 20,      #  Uses requests.Session, real HTTP",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "\"real_authentication\": 15,     #  Real token validation in headers",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18,
      "current_context": "\"real_data_processing\": 18,    #  Processes real UnifiedAnalysisResult",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 81,
      "current_context": "if reality_score >= 81:",
      "suggested_constant": "BUSINESS_THRESHOLD_81",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"nasa_compliance\": 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.875,
      "current_context": "self.assertAlmostEqual(consolidated['nasa_compliance'], 0.875, places=3)  # (0.85 + 0.90) / 2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_875",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 61,
      "current_context": "elif reality_score >= 61:",
      "suggested_constant": "BUSINESS_THRESHOLD_61",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.73,
      "current_context": "nasa_compliance_score=0.73,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_73",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.2,
      "current_context": "six_sigma_level=3.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_3_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.67,
      "current_context": "mece_score=0.67,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_67",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18.5,
      "current_context": "duplication_percentage=18.5",
      "suggested_constant": "BUSINESS_THRESHOLD_18_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "self.assertAlmostEqual(correlation['correlation_score'], min(0.88, expected_consistency), places=2)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.78,
      "current_context": "\"nasa_compliance\": 0.78,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "\"god_objects_found\": 4,",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 22.3,
      "current_context": "\"duplication_percentage\": 22.3",
      "suggested_constant": "BUSINESS_THRESHOLD_22_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.82,
      "current_context": "\"compliance_score\": 0.82",
      "suggested_constant": "BUSINESS_THRESHOLD_0_82",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "self.assertAlmostEqual(saved_correlation['consolidated_findings']['nasa_compliance'], 0.80, places=2)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.78,
      "current_context": "nasa_compliance_score=0.78,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "god_objects_found=4,",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 22.3,
      "current_context": "duplication_percentage=22.3",
      "suggested_constant": "BUSINESS_THRESHOLD_22_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "status = \"\" if actual == max_score else \"\" if actual >= max_score * 0.7 else \"\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "self.assertLess(avg_time_per_analysis, 15, \"Single feature should have low impact\")",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "self.assertLess(avg_time_per_analysis, 25, \"Multiple features should have acceptable impact\")",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4.7,
      "current_context": "self.assertLess(overhead_percent, 4.7,",
      "suggested_constant": "BUSINESS_THRESHOLD_4_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "\"nasa_compliance\": 0.75",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "def __init__(self, requests_per_hour=5000): pass",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "connascence_index=0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "overall_quality_score=0.88,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_88",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 1500,
      "current_context": "analysis_duration_ms=1500,",
      "suggested_constant": "BUSINESS_THRESHOLD_1500",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "connascence_index=0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "overall_quality_score=0.88,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_88",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85.0,
      "current_context": "success_threshold = 85.0",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "threshold = 0.15",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "'circuit_breakers': {'open': 0, 'closed': 6},",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.74,
      "current_context": "\"nasa_compliance\": 0.74,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_74",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.1,
      "current_context": "\"six_sigma_level\": 3.1,",
      "suggested_constant": "BUSINESS_THRESHOLD_3_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.68,
      "current_context": "\"mece_score\": 0.68,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_68",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 19.7,
      "current_context": "\"duplication_percentage\": 19.7",
      "suggested_constant": "BUSINESS_THRESHOLD_19_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.81,
      "current_context": "\"compliance_score\": 0.81,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_81",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "\"total_issues\": 4",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "abs(actual_avg - expected_avg) < 0.01,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "correlation_success = validation['reality_score'] >= 70",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "\"threshold\": 0.15,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"threshold\": 0.80,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "\"threshold\": 0.1,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "\"threshold\": 0.95,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2.5,
      "current_context": "weight=2.5,",
      "suggested_constant": "SCORING_WEIGHT_2_5",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 0.15,
      "current_context": "\"status\": \"PASS\" if mock_score < 0.15 else \"FAIL\",",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"status\": \"PASS\" if consistency_score > 0.80 else \"FAIL\",",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "\"status\": \"PASS\" if generation_time < 0.1 else \"FAIL\",",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "\"status\": \"PASS\" if determinism_score > 0.95 else \"FAIL\",",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "self.assertLess(mock_score, 0.1, f\"Mock contamination score {mock_score:.2f} too high\")",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "self.assertLess(mock_score, 0.15, \"REGRESSION: Mock data contamination detected\")",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "self.assertEqual(len(sarif_dict[\"runs\"][0][\"results\"]), 5000)",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2.5,
      "current_context": "weight=2.5,",
      "suggested_constant": "SCORING_WEIGHT_2_5",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 1.5,
      "current_context": "weight=1.5,",
      "suggested_constant": "SCORING_WEIGHT_1_5",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 0.75,
      "current_context": "\"complexity_score\": 0.75",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.036,
      "current_context": "self.json_generation_time_threshold = 0.036  # seconds",
      "suggested_constant": "BUSINESS_THRESHOLD_0_036",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "self.memory_footprint_threshold = 0.15  # percentage",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "self.assertLess(mock_score, 0.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "self.assertGreater(mock_score, 0.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "self.assertLess(overhead_ratio, 6.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15.5,
      "current_context": "summary_metrics={\"total_weight\": 15.5}",
      "suggested_constant": "SCORING_WEIGHT_15_5",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 0.15,
      "current_context": "\"mock_data_contamination\": {\"threshold\": 0.15, \"baseline\": 0.857},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.857,
      "current_context": "\"mock_data_contamination\": {\"threshold\": 0.15, \"baseline\": 0.857},",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "\"schema_consistency\": {\"threshold\": 0.80, \"baseline\": 0.71},",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.71,
      "current_context": "\"schema_consistency\": {\"threshold\": 0.80, \"baseline\": 0.71},",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_71",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 95,
      "current_context": "\"sarif_compliance\": {\"threshold\": 95, \"baseline\": 85},",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "\"sarif_compliance\": {\"threshold\": 95, \"baseline\": 85},",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.036,
      "current_context": "\"performance_regression\": {\"threshold\": 1.0, \"baseline\": 0.036},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_036",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "\"violation_id_determinism\": {\"threshold\": 0.95, \"baseline\": 0.85}",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "f.write(\"=\" * 50 + \"\\n\\n\")",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "context={\"analysis_confidence\": 0.95, \"locality_score\": 0.8}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "context={\"analysis_confidence\": 0.95, \"locality_score\": 0.8}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 21.5,
      "current_context": "summary_metrics={\"total_weight\": 21.5, \"average_weight\": 5.375}",
      "suggested_constant": "SCORING_WEIGHT_21_5",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 5.375,
      "current_context": "summary_metrics={\"total_weight\": 21.5, \"average_weight\": 5.375}",
      "suggested_constant": "SCORING_WEIGHT_5_375",
      "justification": "Algorithm parameter requiring explanation"
    },
    {
      "value": 0.95,
      "current_context": "coordinator.mesh_nodes[\"backend-dev\"].load_score = 0.95",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "assert node.load_score < 0.90",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "test_limit = min(50, soft_limit)  # Very low limit",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "coordinator.mesh_nodes[\"system-architect\"].load_score = 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "coordinator.mesh_nodes[\"backend-dev\"].load_score = 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "coordinator.mesh_nodes[\"api-docs\"].load_score = 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "coordinator.mesh_nodes[\"integration-specialist\"].load_score = 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "assert protocols[\"consensus_threshold\"] == 0.75",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.33,
      "current_context": "assert protocols[\"fault_tolerance_level\"] == 0.33",
      "suggested_constant": "BUSINESS_THRESHOLD_0_33",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "required_votes = int(total_nodes * 0.75)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.001,
      "current_context": "files_per_second = files_count / max(execution_time, 0.001)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_001",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "files_per_second * 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "throughput_score = (violations_per_second * 0.4 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "correlations_per_second * 0.3 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.001,
      "current_context": "\"throughput_ratio\": metrics.throughput_score / max(self.baseline_metrics.throughput_score, 0.001),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_001",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.001,
      "current_context": "\"cpu_ratio\": metrics.cpu_usage / max(self.baseline_metrics.cpu_usage, 0.001)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_001",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "self.similarity_threshold = 0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "correlation_framework.similarity_threshold = 0.9",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "correlation_framework.similarity_threshold = 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "\"processing_time\": 0.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score += 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "score += 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "score += 0.4",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "assert duplicate[\"similarity_score\"] >= 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "score += 0.2",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "assert critical_metrics[\"quality_score\"] < 50  # Should be poor score",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "] * 25  # Many style issues",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "assert flake8_alloc.priorityWeight == 0.7",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "assert flake8_alloc.executionQuota == 80",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "assert ruff_alloc.concurrencyLimit == 4",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 150,
      "current_context": "assert ruff_alloc.executionQuota == 150",
      "suggested_constant": "BUSINESS_THRESHOLD_150",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3000,
      "current_context": "assert pylint_alloc.throttleInterval == 3000",
      "suggested_constant": "BUSINESS_THRESHOLD_3000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "assert allocation.priorityWeight == 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "assert health.healthScore == 70",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "priorityWeight=0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "priorityWeight=0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "health.healthScore = max(0, health.healthScore - 20)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "assert correlation.correlation_strength == 0.85",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.9,
      "current_context": "temp_memory_model.correlate_phases(\"phase1\", \"phase2\", \"performance\", 0.9)",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 0.8,
      "current_context": "temp_memory_model.correlate_phases(\"phase1\", \"phase2\", \"pattern\", 0.8)",
      "suggested_constant": "CACHE_PRESSURE_THRESHOLD",
      "justification": "Performance tuning parameter"
    },
    {
      "value": 4,
      "current_context": "for thread_id in range(4):",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "result = validator.validate_memory_operation(15 * 1024 * 1024, 50, \"write\")",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "max_memory_mb=50,  # Small limit for testing",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "large_content = {\"large_data\": \"x\" * 5000}  # 5KB per entry",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "max_memory_mb=20,  # Small limit for leak testing",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "result = validator.validate_memory_operation(15 * 1024 * 1024, 50, \"write\")",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "compliance_forecaster.alert_thresholds['high'] = 0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "'risk_threshold': 0.7,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 90,
      "current_context": "'trend_window_days': 90,",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "'min_training_samples': 50,  # Reduced for testing",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 42,
      "current_context": "'random_state': 42,",
      "suggested_constant": "BUSINESS_THRESHOLD_42",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'confidence': 0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'current_score': 0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "'predicted_score_30d': 0.7",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "assert risk_accuracy >= 0.6, f\"Risk accuracy {risk_accuracy} below minimum threshold\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert drift_rmse <= 0.5, f\"Drift RMSE {drift_rmse} too high\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'documentation_coverage': 0.9,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'security_score': 0.95,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "'performance_regression': 0.02,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "'maintainability_index': 85,",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.99,
      "current_context": "'data_integrity_score': 0.99,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_99",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'access_control_score': 0.95",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'automation_score': 0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'monitoring_coverage': 0.9,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "'response_time_score': 0.85,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.88,
      "current_context": "'documentation_quality': 0.88,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_88",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "'staff_competency': 0.9",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "'audit_pressure': 0.7,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "'budget_constraints': 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "'staff_turnover': 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'quarter_end_proximity': 0.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "sample['current_metrics']['code_coverage'] = np.random.uniform(0.6, 0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "sample['current_metrics']['security_score'] = np.random.uniform(0.8, 1.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "minimal_data = {'current_metrics': {'code_coverage': 0.8}}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "assert compliance_forecaster._get_risk_level_name(0.8) == 'high'",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "assert compliance_forecaster._get_risk_level_name(0.6) == 'medium'",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "assert compliance_forecaster._get_risk_level_name(0.2) == 'low'",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "risk_score=0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "'trend_slope': -0.05,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "{'timestamp': datetime.now().isoformat(), 'overall_score': 0.8}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "modified_data['current_metrics']['code_coverage'] = 0.8 + i * 0.02",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "assert compliance_forecaster._get_risk_level_name(0.85) == 'high'",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 80,
      "current_context": "for i in range(80):",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "sample['process_maturity']['automation_score'] * 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "risk_label = 1 if risk_score < 0.7 else 0",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "component_scores={'security': 0.8, 'operational': 0.9}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "component_scores={'security': 0.2, 'operational': 0.3}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "component_scores={'security': 0.2, 'operational': 0.3}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "'security_score': -0.5  # Invalid negative score",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "'violations': {'critical_count': 10**6}",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'overall_score': 0.8 + np.sin(i * 0.1) * 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "modified_data['current_metrics']['code_coverage'] = 0.8 + i * 0.02",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "drift_label = np.random.normal(0, 0.05)  # Small drift",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'overall_score': 0.9 - (i * 0.01),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "drift_score = np.random.uniform(-0.1, -0.02)  # Declining",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "drift_score = np.random.uniform(-0.1, -0.02)  # Declining",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "drift_score = np.random.uniform(0.02, 0.1)   # Improving",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "drift_score = np.random.uniform(0.02, 0.1)   # Improving",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "drift_score = np.random.uniform(-0.02, 0.02) # Stable",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "sample['current_metrics']['security_score'] * 0.3 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "(1 - sample['violations']['critical_count'] / 10) * 0.4 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'overall_score': 0.9 - (i * 0.01)  # Declining by 1% per day",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "'overall_score': 0.7 + (i * 0.005)  # Improving by 0.5% per day",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "'overall_score': 0.8 + np.sin(i * 0.1) * 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "(1 - sample['violations']['critical_count'] / 10) * 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "risk_label = 1 if overall_compliance < 0.75 else 0",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "'overall_score': 0.9 - (i * 0.01),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "drift_score = np.random.uniform(-0.02, 0.02) # Stable",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "'overall_score': 0.9 - (i * 0.01)  # Declining by 1% per day",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.005,
      "current_context": "'overall_score': 0.7 + (i * 0.005)  # Improving by 0.5% per day",
      "suggested_constant": "BUSINESS_THRESHOLD_0_005",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'overall_score': 0.8 + seasonal_component + np.random.normal(0, 0.02)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.02,
      "current_context": "'overall_score': 0.8 + seasonal_component + np.random.normal(0, 0.02)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_02",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "'code_coverage': np.random.uniform(0.7, 0.95),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'code_coverage': np.random.uniform(0.7, 0.95),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'security_score': np.random.uniform(0.85, 1.0),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'documentation_coverage': np.random.uniform(0.8, 1.0),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "'maintainability_index': np.random.randint(70, 95)",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'maintainability_index': np.random.randint(70, 95)",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "'automation_score': np.random.uniform(0.7, 0.95),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'automation_score': np.random.uniform(0.7, 0.95),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'monitoring_coverage': np.random.uniform(0.8, 1.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "sample['current_metrics']['code_coverage'] * 0.3 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "sample['current_metrics']['security_score'] * 0.4 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "'overall_score': 0.8 + np.sin(i * 0.1) * 0.1",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'overall_score': 0.85 + np.random.normal(0, 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "'overall_score': 0.85 + np.random.normal(0, 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "for i in range(40):",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert quality_metrics['accuracy'] > 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert compliance_metrics['risk_accuracy'] > 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 35,
      "current_context": "test_quality_data = sample_datasets['quality']['data'][35]",
      "suggested_constant": "BUSINESS_THRESHOLD_35",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 35,
      "current_context": "test_theater_data = sample_datasets['theater']['data'][35]",
      "suggested_constant": "BUSINESS_THRESHOLD_35",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 35,
      "current_context": "test_compliance_data = sample_datasets['compliance']['data'][35]",
      "suggested_constant": "BUSINESS_THRESHOLD_35",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert quality_metrics['accuracy'] > 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert theater_metrics['ensemble_accuracy'] > 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert compliance_metrics['risk_accuracy'] > 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "for i in range(20):",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 150,
      "current_context": "for i in range(150):",
      "suggested_constant": "BUSINESS_THRESHOLD_150",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "assert metrics['accuracy'] > 0.7, f\"Accuracy {metrics['accuracy']:.3f} too low\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "assert avg_response_time < 0.1, f\"Avg response time {avg_response_time:.3f}s too slow\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert max_response_time < 0.5, f\"Max response time {max_response_time:.3f}s too slow\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "drift_label = np.random.normal(0, 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.03,
      "current_context": "drift_label = np.random.normal(0, 0.03)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_03",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "risk_label = 1 if risk_score < 0.75 else 0",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "label = 1 if sample['quality']['test_coverage'] > 0.7 else 0",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "'quality_before': {'coverage': 0.75},",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.78,
      "current_context": "'quality_after': {'coverage': 0.78}",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_78",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "risk_label = 1 if sample['current_metrics']['security_score'] < 0.8 else 0",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "label = 1 if sample['quality']['test_coverage'] > 0.7 else 0",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "(100 - sample['metrics']['cyclomatic_complexity']) / 100 * 0.3",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "label = 1 if quality_score > 0.7 else 0",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "'quality': {'test_coverage': 0.8}",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.5,
      "current_context": "'test_coverage': np.random.uniform(0.5, 0.95),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'test_coverage': np.random.uniform(0.5, 0.95),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.4,
      "current_context": "'documentation_ratio': np.random.uniform(0.4, 0.9),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'documentation_ratio': np.random.uniform(0.4, 0.9),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "label = 1 if (sample['quality']['test_coverage'] > 0.8 and",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 15,
      "current_context": "sample['metrics']['cyclomatic_complexity'] < 15) else 0",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "'coverage': np.random.uniform(0.6, 0.85),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'coverage': np.random.uniform(0.6, 0.85),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 20,
      "current_context": "'complexity': np.random.randint(10, 20)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.65,
      "current_context": "'coverage': np.random.uniform(0.65, 0.9),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'coverage': np.random.uniform(0.65, 0.9),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 18,
      "current_context": "'complexity': np.random.randint(8, 18)",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "'code_coverage': np.random.uniform(0.7, 0.95),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'code_coverage': np.random.uniform(0.7, 0.95),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'security_score': np.random.uniform(0.8, 1.0),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'documentation_coverage': np.random.uniform(0.75, 0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'documentation_coverage': np.random.uniform(0.75, 0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "'automation_score': np.random.uniform(0.7, 0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'automation_score': np.random.uniform(0.7, 0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "'maintainability_index': np.random.randint(50, 95)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'maintainability_index': np.random.randint(50, 95)",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "'test_coverage': np.random.uniform(0.4, 0.95),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'test_coverage': np.random.uniform(0.4, 0.95),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "'documentation_ratio': np.random.uniform(0.3, 0.9)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'documentation_ratio': np.random.uniform(0.3, 0.9)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "'user_value': np.random.uniform(0.0, 0.7)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.6,
      "current_context": "'code_coverage': np.random.uniform(0.6, 0.95),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'code_coverage': np.random.uniform(0.6, 0.95),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'security_score': np.random.uniform(0.75, 1.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "'cyclomatic_complexity': np.random.randint(2, 20)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "'test_coverage': np.random.uniform(0.3, 0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'test_coverage': np.random.uniform(0.3, 0.95)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.2,
      "current_context": "'test_coverage': np.random.uniform(0.2, 0.98),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.98,
      "current_context": "'test_coverage': np.random.uniform(0.2, 0.98),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_98",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "'documentation_ratio': np.random.uniform(0.1, 0.95),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'documentation_ratio': np.random.uniform(0.1, 0.95),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.4,
      "current_context": "sample['quality']['test_coverage'] * 0.4 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "(1 - sample['quality']['code_duplication']) * 0.3 +",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'overall_score': 0.85 + np.random.normal(0, 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "for j in range(15)",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "'maintainability_index': np.random.randint(80, 100)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'test_coverage': np.random.uniform(0.85, 0.98),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.98,
      "current_context": "'test_coverage': np.random.uniform(0.85, 0.98),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_98",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'documentation_ratio': np.random.uniform(0.8, 0.95),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.95,
      "current_context": "'documentation_ratio': np.random.uniform(0.8, 0.95),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 20,
      "current_context": "'maintainability_index': np.random.randint(20, 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "'maintainability_index': np.random.randint(20, 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "'test_coverage': np.random.uniform(0.1, 0.4),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "'test_coverage': np.random.uniform(0.1, 0.4),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "'documentation_ratio': np.random.uniform(0.0, 0.3),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "'overall_score': 0.85 + np.random.normal(0, 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "quality_predictor.config['pattern_confidence_threshold'] = 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'quality_threshold': 0.8,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "'pattern_confidence_threshold': 0.7,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "'max_features': 50,",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "for i in range(20):",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "for i in range(20):",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "assert quality_predictor.config['quality_threshold'] == 0.8",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "'god_class_score': 0.9,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'long_method_score': 0.8,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "'feature_envy_score': 0.7",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert metrics['accuracy'] >= 0.5  # Minimum reasonable performance",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "'anomaly_threshold': -0.5,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "'test_coverage': 0.85,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "'documentation_ratio': 0.7,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "'god_class_score': 0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "'long_method_score': 0.4,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'feature_envy_score': 0.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "'data_clump_score': 0.1,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "'code_smell_density': 0.15",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "sample['quality']['test_coverage'] = np.random.uniform(0.8, 1.0)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.1,
      "current_context": "sample['quality']['code_duplication'] = np.random.uniform(0.0, 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "sample['metrics']['cyclomatic_complexity'] = np.random.randint(15, 25)",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "sample['metrics']['cyclomatic_complexity'] = np.random.randint(15, 25)",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "sample['quality']['test_coverage'] = np.random.uniform(0.0, 0.5)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "sample['quality']['code_duplication'] = np.random.uniform(0.3, 0.8)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "sample['quality']['code_duplication'] = np.random.uniform(0.3, 0.8)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "{'timestamp': pd.Timestamp.now(), 'quality_score': 0.8}",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.5,
      "current_context": "'quality': {'test_coverage': 0.5}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "for i in range(50):",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "patterns={'god_class': 0.2, 'long_method': 0.3},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "patterns={'god_class': 0.2, 'long_method': 0.3},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "patterns={'god_class': 0.8, 'long_method': 0.9},",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "patterns={'god_class': 0.8, 'long_method': 0.9},",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "'quality_score': 0.8 + np.random.normal(0, 0.05)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.05,
      "current_context": "'quality_score': 0.8 + np.random.normal(0, 0.05)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "'method_count': np.random.randint(5, 20)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'test_coverage': np.random.uniform(0.8, 1.0),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "'documentation_ratio': np.random.uniform(0.7, 1.0),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 20,
      "current_context": "'method_count': np.random.randint(20, 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "'method_count': np.random.randint(20, 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "'test_coverage': np.random.uniform(0.0, 0.5),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "'documentation_ratio': np.random.uniform(0.0, 0.3),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "suspicious_data['quality_after']['coverage'] = 0.95",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "suspicious_data['quality_before']['coverage'] = 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.9,
      "current_context": "theater_prob = 0.9",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "'theater_threshold': 0.6,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'confidence_threshold': 0.8,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.001,
      "current_context": "'learning_rate': 0.001,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_001",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'validation_split': 0.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 42,
      "current_context": "'random_state': 42,",
      "suggested_constant": "BUSINESS_THRESHOLD_42",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "assert theater_classifier.config['theater_threshold'] == 0.6",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "gaming_scores = {'coverage_gaming': 0.7, 'complexity_gaming': 0.2}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "gaming_scores = {'coverage_gaming': 0.7, 'complexity_gaming': 0.2}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "assert ensemble_accuracy >= 0.6, f\"Ensemble accuracy {ensemble_accuracy} below minimum threshold\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "'time_spent_hours': 4",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "'coverage': 0.75,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 70,
      "current_context": "'maintainability': 70,",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'security_score': 0.9",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.78,
      "current_context": "'coverage': 0.78,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_78",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 11,
      "current_context": "'complexity': 11,",
      "suggested_constant": "BUSINESS_THRESHOLD_11",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 72,
      "current_context": "'maintainability': 72,",
      "suggested_constant": "BUSINESS_THRESHOLD_72",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "'security_score': 0.9",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "sample['impact']['user_value'] = np.random.uniform(0.3, 0.8)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "sample['impact']['user_value'] = np.random.uniform(0.3, 0.8)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.3,
      "current_context": "sample['indicators']['cosmetic_changes'] = np.random.uniform(0.0, 0.3)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "sample['change_types']['functional'] = np.random.randint(20, 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "sample['change_types']['functional'] = np.random.randint(20, 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6,
      "current_context": "sample['effort']['development_time'] = np.random.uniform(6, 12)",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "sample['impact']['user_value'] = np.random.uniform(0.0, 0.2)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "sample['indicators']['cosmetic_changes'] = np.random.uniform(0.5, 0.9)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "sample['indicators']['cosmetic_changes'] = np.random.uniform(0.5, 0.9)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 15,
      "current_context": "sample['change_types']['functional'] = np.random.randint(0, 15)",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "change_data = {'indicators': {'cosmetic_changes': 0.8}}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "theater_prob=0.85,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "theater_prob=0.3,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "sample['quality_after']['coverage'] = sample['quality_before']['coverage'] + np.random.uniform(0.05, 0.15)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "sample['quality_after']['coverage'] = sample['quality_before']['coverage'] + np.random.uniform(0.05, 0.15)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "sample['quality_after']['coverage'] = sample['quality_before']['coverage'] + np.random.uniform(0.01, 0.03)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.03,
      "current_context": "sample['quality_after']['coverage'] = sample['quality_before']['coverage'] + np.random.uniform(0.01, 0.03)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_03",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "gaming_scores={'coverage_gaming': 0.8}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "'coverage': np.random.uniform(0.6, 0.8),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'coverage': np.random.uniform(0.6, 0.8),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 20,
      "current_context": "'complexity': np.random.randint(10, 20)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'coverage': np.random.uniform(0.8, 0.95),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.95,
      "current_context": "'coverage': np.random.uniform(0.8, 0.95),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 15,
      "current_context": "'complexity': np.random.randint(5, 15)",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "'files_changed': np.random.randint(3, 15)",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "'coverage': np.random.uniform(0.7, 0.8),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.8,
      "current_context": "'coverage': np.random.uniform(0.7, 0.8),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 18,
      "current_context": "'complexity': np.random.randint(12, 18)",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.72,
      "current_context": "'coverage': np.random.uniform(0.72, 0.85),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_72",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "'coverage': np.random.uniform(0.72, 0.85),",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 11,
      "current_context": "'complexity': np.random.randint(11, 17)",
      "suggested_constant": "BUSINESS_THRESHOLD_11",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 17,
      "current_context": "'complexity': np.random.randint(11, 17)",
      "suggested_constant": "BUSINESS_THRESHOLD_17",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.2,
      "current_context": "if overhead_percentage <= 1.2:",
      "suggested_constant": "BUSINESS_THRESHOLD_1_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1.2,
      "current_context": "\"Total Overhead\": (overhead_percentage, 1.2, \"%\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_1_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.01,
      "current_context": "\"Per-operation Overhead\": ((overhead_total/iterations)*1000, 0.01, \"ms\"),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_01",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "self.assertGreater(total_potential_improvement, 0.05)  # At least 5% improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 11,
      "current_context": "self.assertIn(report.rule_id, [f\"rule_{i}\" for i in range(1, 11)])",
      "suggested_constant": "BUSINESS_THRESHOLD_11",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "if results['success_rate'] >= 0.95:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.34,
      "current_context": "self.assertLess(byzantine_validation_results['fault_tolerance_ratio'], 0.34)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_34",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "self.assertLess(byzantine_validation_results['performance_overhead_percent'], 15)",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 18,
      "current_context": "(\"Cache hit rate method\", 18),",
      "suggested_constant": "BUSINESS_THRESHOLD_18",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "self.assertGreaterEqual(current, target * 0.95,  # Allow 5% tolerance",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 80.0,
      "current_context": "\"max_cpu_usage_percent\": 80.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "\"fusion_accuracy_threshold\": 95.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "\"calibration_drift_threshold\": 0.05,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85.0,
      "current_context": "\"map_threshold\": 85.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "\"tracking_consistency\": 90.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85.0,
      "current_context": "\"map_threshold\": 85.0,  # Mean Average Precision",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "\"tracking_consistency\": 90.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "\"detection_confidence_min\": 0.7,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 20,
      "current_context": "\"min_detection_size_pixels\": 20,",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "\"max_detection_latency_ms\": 50.0",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "iou_threshold: float = 0.5) -> DetectionMetrics:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "assert metrics.precision >= 0.8, f\"Precision {metrics.precision:.3f} below 0.8 threshold\"",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.7,
      "current_context": "assert metrics.recall >= 0.7, f\"Recall {metrics.recall:.3f} below 0.7 threshold\"",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.75,
      "current_context": "assert metrics.f1_score >= 0.75, f\"F1-score {metrics.f1_score:.3f} below 0.75 threshold\"",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_75",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 99,
      "current_context": "p99_latency = np.percentile(latencies, 99)",
      "suggested_constant": "BUSINESS_THRESHOLD_99",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert degradation <= 0.5, f\"Performance degradation in {weather_name} exceeds 50%: {degradation:.2%}\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert recall >= 0.5, f\"Recall {recall:.3f} too low for object size {size}px\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "MAX_CPU_USAGE_PERCENT = 80.0",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 99,
      "current_context": "p99_latency = np.percentile(latencies, 99)",
      "suggested_constant": "BUSINESS_THRESHOLD_99",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "assert error_rate < 0.05, f\"Error rate {error_rate:.2%} exceeds 5% limit during stress test\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert throughput > THROUGHPUT_MIN_OPS_SEC * 0.5, f\"Throughput {throughput:.2f} ops/sec below stress test minimum\"",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 99.99,
      "current_context": "\"availability_percent\": 99.99,",
      "suggested_constant": "BUSINESS_THRESHOLD_99_99",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "FUSION_ACCURACY_THRESHOLD = 95.0",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "CALIBRATION_DRIFT_THRESHOLD = 0.05  # 5cm for position accuracy",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "assert avg_time_per_operation < 50.0, f\"Average processing time {avg_time_per_operation:.2f}ms exceeds 50ms limit\"",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "assert errors[\"detection_accuracy\"] >= 0.8, \\",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "resolution_factor = 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "\"max_response_time_ms\": 50.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "\"min_safety_score\": 90",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "\"max_response_time_ms\": 50.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "\"min_safety_score\": 85",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "\"min_safety_score\": 80",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50.0,
      "current_context": "\"max_response_time_ms\": 50.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_50_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "\"min_safety_score\": 85",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70.0,
      "current_context": "\"max_response_time_ms\": 70.0,  # Slightly higher due to reduced visibility",
      "suggested_constant": "BUSINESS_THRESHOLD_70_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "\"min_safety_score\": 75",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "\"max_response_time_ms\": 80.0,  # Higher due to poor visibility",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70,
      "current_context": "\"min_safety_score\": 70",
      "suggested_constant": "BUSINESS_THRESHOLD_70",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "\"min_safety_score\": 80",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40.0,
      "current_context": "\"max_response_time_ms\": 40.0,  # Fast response required",
      "suggested_constant": "BUSINESS_THRESHOLD_40_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "\"min_safety_score\": 85",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 45.0,
      "current_context": "\"max_response_time_ms\": 45.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_45_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "\"min_safety_score\": 80",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80.0,
      "current_context": "\"max_cpu_usage_percent\": 80.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_80_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "\"fusion_accuracy_threshold\": 95.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "\"calibration_drift_threshold\": 0.05",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85.0,
      "current_context": "\"map_threshold\": 85.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "\"tracking_consistency\": 90.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert result.score > 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6000,
      "current_context": "'execution_time_ms': 6000,  # > 5 seconds",
      "suggested_constant": "BUSINESS_THRESHOLD_6000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert result.score < 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "assert result.score > 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert result.score > 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert result.score > 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "assert result.score > 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "assert result.score > 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95,
      "current_context": "'current_compliance': 95,",
      "suggested_constant": "BUSINESS_THRESHOLD_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "'previous_compliance': 90,",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "'threshold': 90",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "'current_compliance': 85,",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "'previous_compliance': 90,",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90,
      "current_context": "'threshold': 90",
      "suggested_constant": "BUSINESS_THRESHOLD_90",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "data = {'theater_score': 25, 'threshold': 40}",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "data = {'theater_score': 25, 'threshold': 40}",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "assert result.score == 0.75  # 1.0 - (25/100)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "data = {'theater_score': 50, 'threshold': 40}",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "data = {'theater_score': 50, 'threshold': 40}",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "assert result.score > 0.9",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85,
      "current_context": "'coverage_percentage': 85,",
      "suggested_constant": "BUSINESS_THRESHOLD_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "'threshold': 80,",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 83,
      "current_context": "'line_coverage': 83,",
      "suggested_constant": "BUSINESS_THRESHOLD_83",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 87,
      "current_context": "'branch_coverage': 87",
      "suggested_constant": "BUSINESS_THRESHOLD_87",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "assert result.score == 0.85",
      "suggested_constant": "BUSINESS_THRESHOLD_0_85",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "assert result.score > 0.6",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert result.score == 0.5  # 50/100",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "assert result.score > 0.7",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert result.score < 0.5",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "assert result.score > 0.7",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.3,
      "current_context": "'coupling_score': 0.3,      # Low coupling (good)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.4,
      "current_context": "'complexity_score': 0.4,    # Moderate complexity",
      "suggested_constant": "BUSINESS_THRESHOLD_0_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'maintainability_index': 0.8  # High maintainability",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "assert result.score > 0.7",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "assert result.score > 0.8",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "assert result.score > 0.9",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85.0,
      "current_context": "baseline_score = 85.0  # Expected integration effectiveness",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "'aggregation_throughput': 0.80,    # 80% of baseline",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 0.85,
      "current_context": "'ast_traversal_reduction': 0.85,   # 85% of baseline",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 95.5,
      "current_context": "return 95.5  # Simulated integration score",
      "suggested_constant": "BUSINESS_THRESHOLD_95_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "passed = integration_score >= baseline_score * 0.90  # 90% threshold",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 92.3,
      "current_context": "return 92.3",
      "suggested_constant": "BUSINESS_THRESHOLD_92_3",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "'validation_timeout_seconds': 300",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1000000,
      "current_context": "'high_exposure_threshold': 1000000,",
      "suggested_constant": "BUSINESS_THRESHOLD_1000000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50000,
      "current_context": "'high_loss_threshold': 50000",
      "suggested_constant": "BUSINESS_THRESHOLD_50000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'failover_trigger_threshold': 0.95,",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_95",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 45.0,
      "current_context": "failover_manager.metrics.recovery_times = [30.0, 45.0, 25.0, 70.0]  # One violation",
      "suggested_constant": "BUSINESS_THRESHOLD_45_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25.0,
      "current_context": "failover_manager.metrics.recovery_times = [30.0, 45.0, 25.0, 70.0]  # One violation",
      "suggested_constant": "BUSINESS_THRESHOLD_25_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 70.0,
      "current_context": "failover_manager.metrics.recovery_times = [30.0, 45.0, 25.0, 70.0]  # One violation",
      "suggested_constant": "BUSINESS_THRESHOLD_70_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25.0,
      "current_context": "recovery_system.metrics.recovery_times = [25.0, 40.0, 55.0, 75.0]  # One violation",
      "suggested_constant": "BUSINESS_THRESHOLD_25_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40.0,
      "current_context": "recovery_system.metrics.recovery_times = [25.0, 40.0, 55.0, 75.0]  # One violation",
      "suggested_constant": "BUSINESS_THRESHOLD_40_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 55.0,
      "current_context": "recovery_system.metrics.recovery_times = [25.0, 40.0, 55.0, 75.0]  # One violation",
      "suggested_constant": "BUSINESS_THRESHOLD_55_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75.0,
      "current_context": "recovery_system.metrics.recovery_times = [25.0, 40.0, 55.0, 75.0]  # One violation",
      "suggested_constant": "BUSINESS_THRESHOLD_75_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1000000,
      "current_context": "'high_exposure_threshold': 1000000,",
      "suggested_constant": "BUSINESS_THRESHOLD_1000000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50000,
      "current_context": "'high_loss_threshold': 50000,",
      "suggested_constant": "BUSINESS_THRESHOLD_50000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 150.0,
      "current_context": "result = trading_bridge.validate_trade(\"AAPL\", 100, 150.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_150_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 150.0,
      "current_context": "result = trading_bridge.validate_trade(\"AAPL\", 500, 150.0)",
      "suggested_constant": "BUSINESS_THRESHOLD_150_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2000,
      "current_context": "result = trading_bridge.validate_trade(\"AAPL\", 2000, 150.0)  # Exceeds position limit",
      "suggested_constant": "BUSINESS_THRESHOLD_2000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 150.0,
      "current_context": "result = trading_bridge.validate_trade(\"AAPL\", 2000, 150.0)  # Exceeds position limit",
      "suggested_constant": "BUSINESS_THRESHOLD_150_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "timeout_seconds=300,",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 150000,
      "current_context": "max_exposure=150000",
      "suggested_constant": "BUSINESS_THRESHOLD_150000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.67,
      "current_context": "self.consensus_threshold = 0.67  # 2/3 consensus required",
      "suggested_constant": "BUSINESS_THRESHOLD_0_67",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score -= critical_violations * 0.1  # 10% per critical",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.05,
      "current_context": "score -= high_violations * 0.05     # 5% per high",
      "suggested_constant": "BUSINESS_THRESHOLD_0_05",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "score -= critical_threats * 0.2  # 20% per critical threat",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score -= high_threats * 0.1      # 10% per high threat",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "'nasa_compliance': 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "'byzantine_fault_tolerance': 0.20,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "'memory_security': 0.25,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "weight = weights.get(test_name, 0.1)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "'target_score': 0.95",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "passed=score >= 0.8,  # 80% of scenarios should pass",
      "suggested_constant": "BUSINESS_THRESHOLD_0_8",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "score = max(0.0, 1.0 - (high_violations * 0.1))",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(f\"\\n{'='*80}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(f\"{'='*80}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(f\"\\n{'='*80}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(f\"{'='*80}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(f\"\\n{'='*80}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "print(f\"{'='*80}\")",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "'score': 0.6,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "assert audit_manager.retention_days == 2555, \"Should enforce 7-year retention\"",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 9,
      "current_context": "passed_checks=9,",
      "suggested_constant": "BUSINESS_THRESHOLD_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2555,
      "current_context": "retention_days=2555  # 7 years for DFARS",
      "suggested_constant": "BUSINESS_THRESHOLD_2555",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 88.0,
      "current_context": "\"data_protection\": 88.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_88_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "\"path_security\": 95.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 95.0,
      "current_context": "\"cryptographic_compliance\": 95.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_95_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 90.0,
      "current_context": "\"audit_coverage\": 90.0,",
      "suggested_constant": "BUSINESS_THRESHOLD_90_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 85.0,
      "current_context": "\"incident_response\": 85.0",
      "suggested_constant": "BUSINESS_THRESHOLD_85_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "details={\"test_category\": {\"score\": 0.95}}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "incident.timestamp = datetime.now() - timedelta(hours=80)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "assert critical_score < 0.5  # Should be low compliance score",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "compliance_theater_score=0.2,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "compliance_theater_score=0.7,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.75,
      "current_context": "if mece_score is not None and mece_score < 0.75:",
      "suggested_constant": "BUSINESS_THRESHOLD_0_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "if overall_score is not None and overall_score < 0.80:",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.85,
      "current_context": "SELF_NASA_THRESHOLD = 0.85",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_85",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 50,
      "current_context": "SELF_MAX_CRITICAL = 50",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "SELF_MAX_GOD_OBJECTS = 15",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "SELF_MECE_THRESHOLD = 0.7",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_70",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 20,
      "current_context": "for i in range(20):",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "for i in range(80):",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.98,
      "current_context": "scorer.add_process_stage(\"Requirements\", opportunities=100, defects=0, target_yield=0.98)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_98",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "scorer.add_process_stage(\"Design\", opportunities=200, defects=1, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2000,
      "current_context": "scorer.add_process_stage(\"Implementation\", opportunities=2000, defects=4, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_2000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "scorer.add_process_stage(\"Implementation\", opportunities=2000, defects=4, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "scorer.add_process_stage(\"Implementation\", opportunities=2000, defects=4, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "scorer.add_process_stage(\"Testing\", opportunities=300, defects=1, target_yield=0.97)",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.97,
      "current_context": "scorer.add_process_stage(\"Testing\", opportunities=300, defects=1, target_yield=0.97)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_97",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "scorer.add_process_stage(\"Deployment\", opportunities=50, defects=0, target_yield=0.99)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.99,
      "current_context": "scorer.add_process_stage(\"Deployment\", opportunities=50, defects=0, target_yield=0.99)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_99",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "scorer.add_process_stage(\"Requirements\", opportunities=80, defects=3, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "scorer.add_process_stage(\"Requirements\", opportunities=80, defects=3, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 150,
      "current_context": "scorer.add_process_stage(\"Design\", opportunities=150, defects=12, target_yield=0.92)",
      "suggested_constant": "BUSINESS_THRESHOLD_150",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.92,
      "current_context": "scorer.add_process_stage(\"Design\", opportunities=150, defects=12, target_yield=0.92)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_92",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 1500,
      "current_context": "scorer.add_process_stage(\"Implementation\", opportunities=1500, defects=75, target_yield=0.90)",
      "suggested_constant": "BUSINESS_THRESHOLD_1500",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "scorer.add_process_stage(\"Implementation\", opportunities=1500, defects=75, target_yield=0.90)",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "scorer.add_process_stage(\"Implementation\", opportunities=1500, defects=75, target_yield=0.90)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 250,
      "current_context": "scorer.add_process_stage(\"Testing\", opportunities=250, defects=15, target_yield=0.94)",
      "suggested_constant": "BUSINESS_THRESHOLD_250",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "scorer.add_process_stage(\"Testing\", opportunities=250, defects=15, target_yield=0.94)",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.94,
      "current_context": "scorer.add_process_stage(\"Testing\", opportunities=250, defects=15, target_yield=0.94)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_94",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "scorer.add_process_stage(\"Deployment\", opportunities=40, defects=2, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "scorer.add_process_stage(\"Deployment\", opportunities=40, defects=2, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "scorer.add_process_stage(\"Requirements\", opportunities=60, defects=15, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "scorer.add_process_stage(\"Requirements\", opportunities=60, defects=15, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.92,
      "current_context": "scorer.add_process_stage(\"Design\", opportunities=100, defects=30, target_yield=0.92)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_92",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 800,
      "current_context": "scorer.add_process_stage(\"Implementation\", opportunities=800, defects=200, target_yield=0.90)",
      "suggested_constant": "BUSINESS_THRESHOLD_800",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "scorer.add_process_stage(\"Implementation\", opportunities=800, defects=200, target_yield=0.90)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 150,
      "current_context": "scorer.add_process_stage(\"Testing\", opportunities=150, defects=45, target_yield=0.94)",
      "suggested_constant": "BUSINESS_THRESHOLD_150",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 45,
      "current_context": "scorer.add_process_stage(\"Testing\", opportunities=150, defects=45, target_yield=0.94)",
      "suggested_constant": "BUSINESS_THRESHOLD_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.94,
      "current_context": "scorer.add_process_stage(\"Testing\", opportunities=150, defects=45, target_yield=0.94)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_94",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "scorer.add_process_stage(\"Deployment\", opportunities=20, defects=8, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "scorer.add_process_stage(\"Deployment\", opportunities=20, defects=8, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "scorer.add_process_stage(\"Requirements\", opportunities=200, defects=5, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 300,
      "current_context": "scorer.add_process_stage(\"Design\", opportunities=300, defects=15, target_yield=0.92)",
      "suggested_constant": "BUSINESS_THRESHOLD_300",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 15,
      "current_context": "scorer.add_process_stage(\"Design\", opportunities=300, defects=15, target_yield=0.92)",
      "suggested_constant": "BUSINESS_THRESHOLD_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.92,
      "current_context": "scorer.add_process_stage(\"Design\", opportunities=300, defects=15, target_yield=0.92)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_92",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 5000,
      "current_context": "scorer.add_process_stage(\"Implementation\", opportunities=5000, defects=100, target_yield=0.90)",
      "suggested_constant": "BUSINESS_THRESHOLD_5000",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "scorer.add_process_stage(\"Implementation\", opportunities=5000, defects=100, target_yield=0.90)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 20,
      "current_context": "scorer.add_process_stage(\"Testing\", opportunities=1000, defects=20, target_yield=0.94)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.94,
      "current_context": "scorer.add_process_stage(\"Testing\", opportunities=1000, defects=20, target_yield=0.94)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_94",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "scorer.add_process_stage(\"Deployment\", opportunities=100, defects=2, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 150,
      "current_context": "(\"Business Analysis\", 150, 8, 0.95),",
      "suggested_constant": "BUSINESS_THRESHOLD_150",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "(\"Business Analysis\", 150, 8, 0.95),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "print(\"-\" * 40)",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "for i in range(50):",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "self.assertLess(dpmo_correlation, 0.1)  # Within 10% correlation",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 50,
      "current_context": "scorer.add_process_stage(\"Requirements\", opportunities=50, defects=2, target_yield=0.96)",
      "suggested_constant": "BUSINESS_THRESHOLD_50",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.96,
      "current_context": "scorer.add_process_stage(\"Requirements\", opportunities=50, defects=2, target_yield=0.96)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_96",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.92,
      "current_context": "scorer.add_process_stage(\"Design\", opportunities=100, defects=8, target_yield=0.92)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_92",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 45,
      "current_context": "scorer.add_process_stage(\"Implementation\", opportunities=1000, defects=45, target_yield=0.90)",
      "suggested_constant": "BUSINESS_THRESHOLD_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "scorer.add_process_stage(\"Implementation\", opportunities=1000, defects=45, target_yield=0.90)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "scorer.add_process_stage(\"Testing\", opportunities=200, defects=5, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 25,
      "current_context": "scorer.add_process_stage(\"Deployment\", opportunities=25, defects=0, target_yield=0.98)",
      "suggested_constant": "BUSINESS_THRESHOLD_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.98,
      "current_context": "scorer.add_process_stage(\"Deployment\", opportunities=25, defects=0, target_yield=0.98)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_98",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "(0, 6.0),      # Perfect quality",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 3.4,
      "current_context": "(3.4, 6.0),    # 6-sigma (approx)",
      "suggested_constant": "BUSINESS_THRESHOLD_3_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 6.0,
      "current_context": "(3.4, 6.0),    # 6-sigma (approx)",
      "suggested_constant": "BUSINESS_THRESHOLD_6_0",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 233,
      "current_context": "(233, 5.0),    # 5-sigma (approx)",
      "suggested_constant": "BUSINESS_THRESHOLD_233",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "theater_scorer.add_process_stage(\"Implementation\", opportunities=1000, defects=200, target_yield=0.90)",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_90",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 20,
      "current_context": "dev_scorer.add_process_stage(\"Planning\", opportunities=20, defects=1, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_20",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "dev_scorer.add_process_stage(\"Planning\", opportunities=20, defects=1, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 40,
      "current_context": "dev_scorer.add_process_stage(\"Analysis\", opportunities=40, defects=3, target_yield=0.92)",
      "suggested_constant": "BUSINESS_THRESHOLD_40",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.92,
      "current_context": "dev_scorer.add_process_stage(\"Analysis\", opportunities=40, defects=3, target_yield=0.92)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_92",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "dev_scorer.add_process_stage(\"Design\", opportunities=60, defects=8, target_yield=0.90)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 800,
      "current_context": "dev_scorer.add_process_stage(\"Coding\", opportunities=800, defects=48, target_yield=0.88)",
      "suggested_constant": "BUSINESS_THRESHOLD_800",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 48,
      "current_context": "dev_scorer.add_process_stage(\"Coding\", opportunities=800, defects=48, target_yield=0.88)",
      "suggested_constant": "BUSINESS_THRESHOLD_48",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.88,
      "current_context": "dev_scorer.add_process_stage(\"Coding\", opportunities=800, defects=48, target_yield=0.88)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_88",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 150,
      "current_context": "dev_scorer.add_process_stage(\"Unit Testing\", opportunities=150, defects=12, target_yield=0.92)",
      "suggested_constant": "BUSINESS_THRESHOLD_150",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.92,
      "current_context": "dev_scorer.add_process_stage(\"Unit Testing\", opportunities=150, defects=12, target_yield=0.92)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_92",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.9,
      "current_context": "dev_scorer.add_process_stage(\"Integration Testing\", opportunities=100, defects=8, target_yield=0.90)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_9",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 80,
      "current_context": "dev_scorer.add_process_stage(\"System Testing\", opportunities=80, defects=4, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_80",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4,
      "current_context": "dev_scorer.add_process_stage(\"System Testing\", opportunities=80, defects=4, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_4",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.95,
      "current_context": "dev_scorer.add_process_stage(\"System Testing\", opportunities=80, defects=4, target_yield=0.95)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_95",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.97,
      "current_context": "dev_scorer.add_process_stage(\"UAT\", opportunities=30, defects=1, target_yield=0.97)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_97",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.98,
      "current_context": "dev_scorer.add_process_stage(\"Deployment\", opportunities=10, defects=0, target_yield=0.98)",
      "suggested_constant": "BUSINESS_THRESHOLD_0_98",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.7,
      "current_context": "self.assertGreaterEqual(assessment.reality_score, 0.7)  # Should be high for good evidence",
      "suggested_constant": "BUSINESS_THRESHOLD_0_7",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.1,
      "current_context": "improvement_magnitude=0.10,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_1",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.45,
      "current_context": "validation_score=0.45,  # Low score",
      "suggested_constant": "BUSINESS_THRESHOLD_0_45",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.6,
      "current_context": "evidence_quality=0.60,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "theater_risk=0.50,  # High risk",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.12,
      "current_context": "\"maintainability_improvement\": 0.12",
      "suggested_constant": "BUSINESS_THRESHOLD_0_12",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.78,
      "current_context": "\"baseline_score\": 0.78,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_78",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.17,
      "current_context": "\"improvement_score\": 0.17,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_17",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.2,
      "current_context": "\"overall_improvement\": 0.20,",
      "suggested_constant": "BUSINESS_THRESHOLD_0_2",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "\"coupling_increase\": 0.15  # Coupling got worse - theater risk",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.15,
      "current_context": "\"improvement_score\": 0.15,  # High improvement",
      "suggested_constant": "BUSINESS_THRESHOLD_0_15",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 75,
      "current_context": "\"consolidation_metrics\": {\"files_before\": 75, \"files_after\": 65, \"reduction_percentage\": 0.13},",
      "suggested_constant": "BUSINESS_THRESHOLD_75",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 65,
      "current_context": "\"consolidation_metrics\": {\"files_before\": 75, \"files_after\": 65, \"reduction_percentage\": 0.13},",
      "suggested_constant": "BUSINESS_THRESHOLD_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.13,
      "current_context": "\"consolidation_metrics\": {\"files_before\": 75, \"files_after\": 65, \"reduction_percentage\": 0.13},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_13",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.12,
      "current_context": "\"quality_improvements\": {\"maintainability_delta\": 0.12},",
      "suggested_constant": "BUSINESS_THRESHOLD_0_12",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.08,
      "current_context": "\"architecture_improvements\": {\"coupling_improvement\": 0.08}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_08",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.25,
      "current_context": "\"code_quality\": {\"overall_improvement\": 0.25}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_25",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.65,
      "current_context": "\"before_after\": {\"maintainability\": {\"before\": 0.65, \"after\": 0.80}}",
      "suggested_constant": "BUSINESS_THRESHOLD_0_65",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.8,
      "current_context": "\"before_after\": {\"maintainability\": {\"before\": 0.65, \"after\": 0.80}}",
      "suggested_constant": "QUALITY_GATE_THRESHOLD_80",
      "justification": "Business logic affecting system behavior"
    },
    {
      "value": 6,
      "current_context": "\"after\": {\"god_object_score\": 6}",
      "suggested_constant": "BUSINESS_THRESHOLD_6",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.87,
      "current_context": "cost=CostInfo(usd=0.87, prompt_tokens=4500, completion_tokens=2100),",
      "suggested_constant": "BUSINESS_THRESHOLD_0_87",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 4500,
      "current_context": "cost=CostInfo(usd=0.87, prompt_tokens=4500, completion_tokens=2100),",
      "suggested_constant": "BUSINESS_THRESHOLD_4500",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 2100,
      "current_context": "cost=CostInfo(usd=0.87, prompt_tokens=4500, completion_tokens=2100),",
      "suggested_constant": "BUSINESS_THRESHOLD_2100",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 0.5,
      "current_context": "if max(scores) - min(scores) > 0.5:  # Large variation",
      "suggested_constant": "BUSINESS_THRESHOLD_0_5",
      "justification": "Business rule requiring documentation"
    },
    {
      "value": 900,
      "current_context": "\"analysis_time\": 900,  # 15 minutes",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 480,
      "current_context": "signal.alarm(480)  # 8 minute timeout for analysis",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.82,
      "current_context": "\"cache_efficiency\": 0.82,",
      "suggested_constant": "CONFIG_VALUE_0_82",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.68,
      "current_context": "\"memory_utilization\": 0.68",
      "suggested_constant": "CONFIG_VALUE_0_68",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.92,
      "current_context": "'overall_health': 0.92 if policy_check and cli_check else 0.6,",
      "suggested_constant": "MAGIC_CONSTANT_0_92",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "'overall_health': 0.92 if policy_check and cli_check else 0.6,",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 240,
      "current_context": "], capture_output=True, text=True, timeout=240, cwd=\".\")",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "], capture_output=True, text=True, timeout=300, cwd=\".\")",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "], capture_output=True, text=True, timeout=300)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 20,
      "current_context": "if len(sast_findings) > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "], capture_output=True, text=True, timeout=300)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "DEFAULT_TIMEOUT_SECONDS = 300",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 4,
      "current_context": "MAX_WORKER_THREADS = 4",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 600,
      "current_context": "PARALLEL_TIMEOUT_SECONDS = 600  # 10 minutes",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 142,
      "current_context": "'io_operations': 142,",
      "suggested_constant": "CONFIG_VALUE_142",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 89,
      "current_context": "'cache_hits': 89,",
      "suggested_constant": "CONFIG_VALUE_89",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 11,
      "current_context": "'cache_misses': 11",
      "suggested_constant": "CONFIG_VALUE_11",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 32700,
      "current_context": "'code': -32700,",
      "suggested_constant": "MAGIC_CONSTANT_32700",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 32603,
      "current_context": "'code': -32603,",
      "suggested_constant": "MAGIC_CONSTANT_32603",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "\"throughput_files_per_second\": len(files) / max(time.time() - start_time, 0.001)",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "cache_retention_hours = max(0.1, min(168.0, config.get(\"cache_ttl\", 300) / 3600))",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "def __init__(self, max_size=1000, ttl_seconds=300):",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "event = self.event_queue.get(timeout=0.1)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 168.0,
      "current_context": "cache_retention_hours = max(0.1, min(168.0, config.get(\"cache_ttl\", 300) / 3600))",
      "suggested_constant": "CONFIG_VALUE_168_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "cache_retention_hours = max(0.1, min(168.0, config.get(\"cache_ttl\", 300) / 3600))",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "\"cpu_percent\": process.cpu_percent(interval=0.1),",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "\"parallel\": {\"enabled\": True, \"max_workers\": 4},",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "if isinstance(node, ast.FunctionDef) and len(node.body) > 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "if len(methods) > 15:",
      "suggested_constant": "MAGIC_CONSTANT_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1001,
      "current_context": "\"ANALYSIS_FAILED\": 1001,",
      "suggested_constant": "MAGIC_CONSTANT_1001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1002,
      "current_context": "\"FILE_NOT_FOUND\": 1002,",
      "suggested_constant": "MAGIC_CONSTANT_1002",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1003,
      "current_context": "\"SYNTAX_ERROR\": 1003,",
      "suggested_constant": "MAGIC_CONSTANT_1003",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1004,
      "current_context": "\"PARSING_ERROR\": 1004,",
      "suggested_constant": "MAGIC_CONSTANT_1004",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1005,
      "current_context": "\"PATH_NOT_ACCESSIBLE\": 1005,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1006,
      "current_context": "\"UNSUPPORTED_FILE_TYPE\": 1006,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1007,
      "current_context": "\"TIMEOUT_ERROR\": 1007,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1008,
      "current_context": "\"MEMORY_ERROR\": 1008,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 2001,
      "current_context": "\"CONFIG_INVALID\": 2001,",
      "suggested_constant": "MAGIC_CONSTANT_2001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4001,
      "current_context": "\"PATH_TRAVERSAL_DETECTED\": 4001,",
      "suggested_constant": "MAGIC_CONSTANT_4001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5002,
      "current_context": "\"INITIALIZATION_FAILED\": 5002,",
      "suggested_constant": "MAGIC_CONSTANT_5002",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5003,
      "current_context": "\"DEPENDENCY_MISSING\": 5003,",
      "suggested_constant": "MAGIC_CONSTANT_5003",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5004,
      "current_context": "\"RESOURCE_UNAVAILABLE\": 5004,",
      "suggested_constant": "MAGIC_CONSTANT_5004",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5005,
      "current_context": "\"EXTERNAL_SERVICE_ERROR\": 5005,",
      "suggested_constant": "MAGIC_CONSTANT_5005",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 8080,
      "current_context": "8080: \"network_port\",",
      "suggested_constant": "MAGIC_CONSTANT_8080",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3000,
      "current_context": "3000: \"network_port\",",
      "suggested_constant": "MAGIC_CONSTANT_3000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 443,
      "current_context": "443: \"network_port\",",
      "suggested_constant": "CONFIG_VALUE_443",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "80: \"network_port\",",
      "suggested_constant": "CONFIG_VALUE_80",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 8080,
      "current_context": "\"default_port\": 8080,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 8080,
      "current_context": "8080,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 8080 typically used in network_port context"
    },
    {
      "value": 3000,
      "current_context": "3000,  # common dev ports (but still contextual)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 3000 typically used in network_port context"
    },
    {
      "value": 0.6,
      "current_context": "if (getters + setters) / total > 0.6:",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.4,
      "current_context": "return any(count / total > 0.4 for count in prefixes.values())",
      "suggested_constant": "MAGIC_CONSTANT_0_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 25,
      "current_context": "if method_count > 25:",
      "suggested_constant": "MAGIC_CONSTANT_25",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 25,
      "current_context": "if method_count > 25:",
      "suggested_constant": "MAGIC_CONSTANT_25",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if method_count > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 40,
      "current_context": "if method_count > 40:",
      "suggested_constant": "MAGIC_CONSTANT_40",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "if method_count > 15:",
      "suggested_constant": "MAGIC_CONSTANT_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "if method_count > 15 or loc > 300:",
      "suggested_constant": "MAGIC_CONSTANT_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "if method_count > 15 or loc > 300:",
      "suggested_constant": "MAGIC_CONSTANT_300",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if pattern.success_rate < 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if avg_improvement > 20:  # Significant improvement",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "if performance_improvement > 0.9:",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "if time_per_file < 0.01:  # 10ms",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "if similarity > 0.9:",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "if function_count >= 4:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "elif similarity > 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "if similarity > 0.9 and block_count >= 3:",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "if len(functions) >= 4:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "elif similarity > 0.7:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "elif similarity > 0.8 and block_count >= 2:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "elif similarity > 0.7:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "remediation_confidence >= 0.3  # At least 30% auto-fixable",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "(\"Remediation Confidence\", f\"{result.remediation_confidence:.1%}\", result.remediation_confidence >= 0.30)",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if len(methods) > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "confidence_level = \"HIGH\" if fix['confidence'] >= 0.8 else \"MEDIUM\" if fix['confidence'] >= 0.5 else \"LOW\"",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "confidence_level = \"HIGH\" if fix['confidence'] >= 0.8 else \"MEDIUM\" if fix['confidence'] >= 0.5 else \"LOW\"",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6,
      "current_context": "elif param_count > 6:",
      "suggested_constant": "MAGIC_CONSTANT_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if len(methods) > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if method_count > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "return clean_line[:50] + \"...\" if len(clean_line) > 50 else clean_line",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "return clean_line[:50] + \"...\" if len(clean_line) > 50 else clean_line",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "return clean_line[:50] + \"...\" if len(clean_line) > 50 else clean_line",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "return clean_line[:50] + \"...\" if len(clean_line) > 50 else clean_line",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300.0,
      "current_context": "timeout_seconds: float = 300.0",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.583,
      "current_context": "\"performance_improvement\": 0.583,  # 58.3% improvement",
      "suggested_constant": "CONFIG_VALUE_0_583",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.85,
      "current_context": "\"cache_hit_rate\": 0.85,",
      "suggested_constant": "CONFIG_VALUE_0_85",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.75,
      "current_context": "\"parallel_efficiency\": 0.75",
      "suggested_constant": "CONFIG_VALUE_0_75",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "current_context": "if performance_improvement > 0.9:  # >90% improvement is suspicious",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if len(self.performance_history) > 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "await asyncio.sleep(0.2)",
      "suggested_constant": "CONFIG_VALUE_0_2",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "current_context": "await asyncio.sleep(0.3)",
      "suggested_constant": "CONFIG_VALUE_0_3",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 25,
      "current_context": "metrics = {\"files_processed\": 25, \"linter_rules_applied\": 50}",
      "suggested_constant": "CONFIG_VALUE_25",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "metrics = {\"files_processed\": 25, \"linter_rules_applied\": 50}",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "if weight_sum > total_weight * 0.5:  # Weighted majority",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "timeout_seconds=phase_config.get('timeout', 300)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.05,
      "current_context": "test_coverage_bonus: float = 0.05  # Up to 5% bonus for >95% coverage",
      "suggested_constant": "MAGIC_CONSTANT_0_05",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "if test_coverage is not None and test_coverage > 0.95:",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "elif test_coverage is not None and test_coverage > 0.80:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.583,
      "current_context": "target_improvement: float = 0.583  # 58.3%",
      "suggested_constant": "MAGIC_CONSTANT_0_583",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.583,
      "current_context": "self.target_improvement = 0.583  # 58.3%",
      "suggested_constant": "MAGIC_CONSTANT_0_583",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.85,
      "current_context": "return 0.85  # Mock 85% hit rate",
      "suggested_constant": "CONFIG_VALUE_0_85",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "current_context": "if avg_cache_hit_rate < 0.8:",
      "suggested_constant": "CONFIG_VALUE_0_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.7,
      "current_context": "if avg_parallel_efficiency < 0.7:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if len(self.baseline_measurements[phase_name]) > 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "if recent_avg < older_avg * 0.95:  # 5% improvement",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.05,
      "current_context": "elif recent_avg > older_avg * 1.05:  # 5% degradation",
      "suggested_constant": "MAGIC_CONSTANT_1_05",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.25,
      "current_context": "expected_improvement=0.25,",
      "suggested_constant": "CONFIG_VALUE_0_25",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1800,
      "current_context": "self.maintenance_interval = 1800  # 30 minutes",
      "suggested_constant": "CONFIG_VALUE_1800",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 604800,
      "current_context": "if current_time - self.storage_stats.get(\"last_vacuum\", 0) > 604800:  # 7 days",
      "suggested_constant": "CONFIG_VALUE_604800",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "if abs(expected_improvement - perf_corr.improvement_percentage) > 0.1:",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2000,
      "current_context": "if self.enable_compression and len(content_json) > 2000:",
      "suggested_constant": "MAGIC_CONSTANT_2000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "return min(0.5, total_penalty / len(duplications) if duplications else 0.0)",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "elif rule_id == 4 and 'unbounded' in violation_type:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.75,
      "current_context": "if arch_health < 0.75:",
      "suggested_constant": "MAGIC_CONSTANT_0_75",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if violation_types.count('connascence_of_meaning') > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "concentration_penalty = max(0.0, 0.5 - concentration_ratio)  # Penalty if <50% files affected",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "if method_count > 15:",
      "suggested_constant": "MAGIC_CONSTANT_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if consistency_report['overall_consistency'] < 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if strength > 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "elif strength > 0.6:",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "strong_correlations = len([c for c in correlations if c.get('correlation_strength', 0) > 0.8])",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "'strong_correlations': len([c for c in correlations if c.get('correlation_strength', 0) > 0.8]),",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if func_length > 50:  # Function too long",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "\"projection\": 0.8 if critical_violations == 0 else 0.5,",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "\"projection\": 0.8 if critical_violations == 0 else 0.5,",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "node.value > 1000 or node.value in {80, 443, 8080, 3000, 5432, 6379, 27017}",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 443,
      "current_context": "node.value > 1000 or node.value in {80, 443, 8080, 3000, 5432, 6379, 27017}",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 443 typically used in network_port context"
    },
    {
      "value": 8080,
      "current_context": "node.value > 1000 or node.value in {80, 443, 8080, 3000, 5432, 6379, 27017}",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 8080 typically used in network_port context"
    },
    {
      "value": 3000,
      "current_context": "node.value > 1000 or node.value in {80, 443, 8080, 3000, 5432, 6379, 27017}",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 3000 typically used in network_port context"
    },
    {
      "value": 5432,
      "current_context": "node.value > 1000 or node.value in {80, 443, 8080, 3000, 5432, 6379, 27017}",
      "suggested_constant": "MAGIC_CONSTANT_5432",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6379,
      "current_context": "node.value > 1000 or node.value in {80, 443, 8080, 3000, 5432, 6379, 27017}",
      "suggested_constant": "MAGIC_CONSTANT_6379",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 27017,
      "current_context": "node.value > 1000 or node.value in {80, 443, 8080, 3000, 5432, 6379, 27017}",
      "suggested_constant": "MAGIC_CONSTANT_27017",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "max_workers: int = 4",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.583,
      "current_context": "if result.performance_improvement < 0.583:",
      "suggested_constant": "MAGIC_CONSTANT_0_583",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "if result.performance_improvement < 0.2:",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.4,
      "current_context": "if result.performance_improvement < 0.4:",
      "suggested_constant": "MAGIC_CONSTANT_0_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if len(self.analysis_history) > 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.583,
      "current_context": "performance_target=0.583",
      "suggested_constant": "CONFIG_VALUE_0_583",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "self.cleanup_interval = 300  # 5 minutes",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "if avg_improvement > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 143.0,
      "current_context": "\"current_value\": 143.0,",
      "suggested_constant": "CONFIG_VALUE_143_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "current_context": "if len(underutilized) > len(self.memory_entries) * 0.3:",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if avg_improvement < 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "elif avg_improvement > 80:",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.1,
      "current_context": "underutilized = [entry for entry in self.memory_entries.values() if entry.access_count < avg_access * 0.1]",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3.4,
      "current_context": "if dpmo < 3.4:",
      "suggested_constant": "MAGIC_CONSTANT_3_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 233,
      "current_context": "elif dpmo < 233:",
      "suggested_constant": "MAGIC_CONSTANT_233",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6210,
      "current_context": "elif dpmo < 6210:",
      "suggested_constant": "MAGIC_CONSTANT_6210",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 66807,
      "current_context": "elif dpmo < 66807:",
      "suggested_constant": "MAGIC_CONSTANT_66807",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "high_confidence_fixes = [f for f in auto_fixes if f.confidence >= 0.8]",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "medium_confidence_fixes = [f for f in auto_fixes if 0.5 <= f.confidence < 0.8]",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "medium_confidence_fixes = [f for f in auto_fixes if 0.5 <= f.confidence < 0.8]",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "low_confidence_fixes = [f for f in auto_fixes if f.confidence < 0.5]",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "high_confidence_count = len([f for f in fixes if f.confidence >= 0.8])",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "if abs(value) > 1000000:  # Very large numbers",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3.14159,
      "current_context": "if value == 3.14159 or abs(value - 3.14159) < 0.001:",
      "suggested_constant": "MAGIC_CONSTANT_3_14159",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "if value == 3.14159 or abs(value - 3.14159) < 0.001:",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2.71828,
      "current_context": "elif value == 2.71828 or abs(value - 2.71828) < 0.001:",
      "suggested_constant": "MAGIC_CONSTANT_2_71828",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "elif value == 2.71828 or abs(value - 2.71828) < 0.001:",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3.14159,
      "current_context": "if value == 3.14159 or abs(value - 3.14159) < 0.001:",
      "suggested_constant": "MAGIC_CONSTANT_3_14159",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2.71828,
      "current_context": "elif value == 2.71828 or abs(value - 2.71828) < 0.001:",
      "suggested_constant": "MAGIC_CONSTANT_2_71828",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "if critical_ratio > 0.1:  # > 10% critical",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "if high_complexity_ratio > 0.3:",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "elif high_complexity_ratio < 0.1:",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.05,
      "current_context": "elif critical_ratio > 0.05 or high_ratio > 0.3:  # > 5% critical or > 30% high",
      "suggested_constant": "MAGIC_CONSTANT_0_05",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "elif critical_ratio > 0.05 or high_ratio > 0.3:  # > 5% critical or > 30% high",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "elif high_ratio > 0.2:  # > 20% high",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "self.max_worker_threads = self._get_config('max_worker_threads', 4)",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 6,
      "current_context": "'components_loaded': 6,  # detector, classifier, metrics, reporter, fixer, cache",
      "suggested_constant": "CONFIG_VALUE_6",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "'files_per_second': files_analyzed / max((analysis_time / 1000), 0.001)",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "elif critical_count > 5 or high_count > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "CLEANUP_INTERVAL = 300  # 5 minutes",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 600,
      "current_context": "MAX_IDLE_TIME = 600     # 10 minutes",
      "suggested_constant": "CONFIG_VALUE_600",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)  # 1ms backoff",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15.0,
      "current_context": "elif calculation_time < 15.0:",
      "suggested_constant": "MAGIC_CONSTANT_15_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if total_violations > 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6,
      "current_context": "if len(component_files) >= 6:  # Expected 7 main components",
      "suggested_constant": "MAGIC_CONSTANT_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6,
      "current_context": "if len(list(self.refactored_path.glob(\"connascence_*.py\"))) >= 6:",
      "suggested_constant": "MAGIC_CONSTANT_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "if documented_files >= 0.9:  # 90% coverage",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if type_coverage >= 0.8:  # 80% coverage",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6,
      "current_context": "return len(component_files) >= 6",
      "suggested_constant": "MAGIC_CONSTANT_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "if avg_file_size > 300:",
      "suggested_constant": "MAGIC_CONSTANT_300",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "if coupling_ratio > 0.2:  # More than 20% large files",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "if maintainability_index < 0.5:",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.15,
      "current_context": "if god_object_ratio > 0.15:",
      "suggested_constant": "MAGIC_CONSTANT_0_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "if maintainability_index < 0.6:",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "if len(python_files) < total_files * 0.5:",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "elif coupling_ratio > 0.1:  # More than 10% large files",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "elif maintainability_index < 0.7:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "elif architectural_health < 0.7:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "if hotspot_density > 0.2:",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "def warm_cache(self, file_paths: List[Union[str, Path]], max_workers: int = 4):",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "current_context": "if self.cache_stats[\"size_bytes\"] <= self.max_size_bytes * 0.9:",
      "suggested_constant": "CONFIG_VALUE_0_9",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "def __init__(self, max_memory_mb: int = 50):",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "current_context": "if hit_rate < 0.6:",
      "suggested_constant": "CONFIG_VALUE_0_6",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "current_context": "elif hit_rate > 0.9:",
      "suggested_constant": "CONFIG_VALUE_0_9",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "for key in old_entries[:50]:",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 600,
      "current_context": "if hasattr(entry, 'last_accessed') and (current_time - entry.last_accessed) > 600:",
      "suggested_constant": "CONFIG_VALUE_600",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "\"max_workers\": self.streaming_config.get(\"max_workers\", 4),",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "self.cache_manager = CacheManager(max_memory_mb=50)",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 25,
      "current_context": "- **Status**: {'[OK] PASS' if len(results.get('god_objects', [])) <= 25 else '[FAIL] FAIL'}",
      "suggested_constant": "MAGIC_CONSTANT_25",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6,
      "current_context": "severity=6 if param_count > 5 else 4,",
      "suggested_constant": "MAGIC_CONSTANT_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "severity=6 if param_count > 5 else 4,",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6,
      "current_context": "if parameter_count <= 6:",
      "suggested_constant": "MAGIC_CONSTANT_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "if len(positional_args) > 4:  # More than 4 positional args",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "confidence=0.9,",
      "suggested_constant": "CONFIG_VALUE_0_9",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "message=f\"Potential magic string: '{node.value[:50]}{'...' if len(node.value) > 50 else ''}'\",",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "message=f\"Potential magic string: '{node.value[:50]}{'...' if len(node.value) > 50 else ''}'\",",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "return line_count >= self.min_lines and len(block.normalized_content) > 50",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "], capture_output=True, text=True, timeout=300)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 4,
      "current_context": "if violation.rule_number == 4:  # Assertion density",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "f\"Priority: {'CRITICAL' if rule_num in [1, 2, 3, 10] else 'HIGH' if rule_num in [4, 5, 7] else 'MEDIUM'}\"",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.34,
      "current_context": "if defect_density > 0.34:",
      "suggested_constant": "MAGIC_CONSTANT_0_34",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if len(dependencies) > 50:  # Many dependencies = higher risk",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "if success_rate < 0.95:",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "if avg_time > 0.5 or memory_mb > 100:",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "elif avg_time > 0.5:",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "elif avg_time > 0.1 or memory_mb > 20:",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "elif avg_time > 0.1 or memory_mb > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "elif avg_time > 0.1:",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "if stats['total_time'] / stats['call_count'] > 0.1",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if stats['total_memory'] / (1024 * 1024) > 20  # >20MB",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "elif avg_time > 0.01 or memory_mb > 5:",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.8,
      "current_context": "'performance_overhead_target': 1.8,",
      "suggested_constant": "CONFIG_VALUE_1_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "'max_workers': 4,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "'timeout_seconds': 300",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1.8,
      "current_context": "'performance_overhead_target': 1.8,",
      "suggested_constant": "CONFIG_VALUE_1_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "'max_workers': 4,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "'timeout_seconds': 300,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1.8,
      "current_context": "'performance_overhead_target': sc_config.get('performance_overhead_target', 1.8),",
      "suggested_constant": "CONFIG_VALUE_1_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "'max_workers': sc_config.get('max_workers', 4),",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "'timeout_seconds': sc_config.get('timeout_seconds', 300)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1.8,
      "current_context": "'performance_overhead_target': sc_config.get('performance_overhead_target', 1.8),",
      "suggested_constant": "CONFIG_VALUE_1_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "'max_workers': sc_config.get('max_workers', 4),",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 4,
      "current_context": "max_workers = sc_config.get('max_workers', 4)",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "timeout = sc_config.get('timeout_seconds', 300)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 600,
      "current_context": "if timeout > 600:  # 10 minutes",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "cmd, capture_output=True, text=True, env=env, timeout=300",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "cmd, capture_output=True, text=True, env=env, timeout=300",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "cmd, capture_output=True, text=True, env=env, timeout=300",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 4,
      "current_context": "self.max_workers = config.get('max_workers', 4)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "self.timeout_seconds = config.get('timeout_seconds', 300)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "cache_ttl: int = 300",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "def __init__(self, ttl_seconds: int = 300, max_size: int = 100):",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1500,
      "current_context": "duration_ms = result.get('analysis_duration_ms', 1500)",
      "suggested_constant": "MAGIC_CONSTANT_1500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1500,
      "current_context": "\"analysis_duration_ms\": analysis_data.get(\"analysis_duration_ms\", 1500),",
      "suggested_constant": "MAGIC_CONSTANT_1500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "feature_strength = np.mean(list(features.values())) if features else 0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "\"breach_notification\": 0.1,",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if max_indent > 20:  # More than 5 levels of nesting (assuming 4 spaces)",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "if duplication_ratio > 0.1:  # More than 10% duplication",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "severity=PatternSeverity.HIGH if complexity > 20 else PatternSeverity.MEDIUM,",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "\"exception_specificity\": 0.2",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "if features.get(\"caching_usage\", 0) < 0.3:",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "if features.get(\"empty_test_ratio\", 0) > 0.5:",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "if features.get(\"trivial_assertion_ratio\", 0) > 0.3:",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "if value > 0.5:  # Significant feature",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "if features.get(\"perfect_values_count\", 0) > 0.5:",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "if impl_ratio < 0.3:",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "\"risk_level\": \"HIGH\" if len(results[\"high_risk_files\"]) > results[\"total_files\"] * 0.1 else \"MEDIUM\" if results[\"theater_files\"] > 0 else \"LOW\"",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "elif impl_ratio > 0.7:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "if prediction.probability > 0.5:",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "has_theater = any(p.probability > 0.5 for p in predictions)",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "return positional_args >= 4",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "return body_lines > 50  # Long functions often have algorithmic coupling",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "\"nodes_per_second\": profile[\"nodes_visited\"] / max((end_time - profile[\"start_time\"]), 0.001),",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "def __init__(self, max_memory: int = 50 * 1024 * 1024):",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 70,
      "current_context": "if cache_stats[\"hit_rate_percent\"] < 70:",
      "suggested_constant": "CONFIG_VALUE_70",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "high_fan_out_files = [file_path for file_path, deps in self.dependency_graph.items() if len(deps) > 20]",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "print(\"=\" * 50)",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300.0,
      "current_context": "def cleanup_old_resources(self, max_age_seconds: float = 300.0) -> int:",
      "suggested_constant": "MAGIC_CONSTANT_300_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50.0,
      "current_context": "def cleanup_large_resources(self, min_size_mb: float = 50.0) -> int:",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "if stats.cleanup_success_rate < 0.95:",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if stats.currently_tracked > self.max_tracked_resources * 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "assert 0.1 <= memory_sample_interval <= 10.0, \"Interval must be 0.1-10.0 seconds\"",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "self.event_timings[event_type] = self.event_timings[event_type][-80:]",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 45000,
      "current_context": "target_throughput = 45000",
      "suggested_constant": "MAGIC_CONSTANT_45000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15.0,
      "current_context": "phase_improvements['phase_3_5_caching_optimization'] = 15.0  # Conservative estimate",
      "suggested_constant": "CONFIG_VALUE_15_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 6,
      "current_context": "parallel_workers=6,",
      "suggested_constant": "CONFIG_VALUE_6",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90.0,
      "current_context": "file_hit_rate >= 90.0 and  # File cache: 90%+ hit rate",
      "suggested_constant": "CONFIG_VALUE_90_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 75.0,
      "current_context": "ast_hit_rate >= 75.0 and   # AST cache: 75%+ hit rate",
      "suggested_constant": "CONFIG_VALUE_75_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "warming_results['files_warmed'] >= 20 and  # At least 20 files warmed",
      "suggested_constant": "CONFIG_VALUE_20",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 85.0,
      "current_context": "target_improvement_percent=85.0,",
      "suggested_constant": "CONFIG_VALUE_85_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15.0,
      "current_context": "warming_time < 15.0 and                # <15 seconds warming time",
      "suggested_constant": "CONFIG_VALUE_15_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 25,
      "current_context": "streaming_files = self.test_files[:25]  # 25 files for streaming test",
      "suggested_constant": "CONFIG_VALUE_25",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "for file_path in self.test_files[:50]:",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90,
      "current_context": "if current_usage.get('utilization_percent', 0) > 90:",
      "suggested_constant": "CONFIG_VALUE_90",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90,
      "current_context": "if file_hit_rate > 90:",
      "suggested_constant": "CONFIG_VALUE_90",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 85,
      "current_context": "if ast_hit_rate > 85:",
      "suggested_constant": "CONFIG_VALUE_85",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20.0,
      "current_context": "target_improvement_percent=20.0,",
      "suggested_constant": "CONFIG_VALUE_20_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 40,
      "current_context": "priority_files=self.test_files[:40],  # More files for better testing",
      "suggested_constant": "CONFIG_VALUE_40",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "await asyncio.sleep(0.001)",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.0005,
      "current_context": "await asyncio.sleep(0.0005)  # Faster with caching",
      "suggested_constant": "CONFIG_VALUE_0_0005",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 75,
      "current_context": "cache_improvements.append(file_hit_rate - 75)  # Baseline 75%",
      "suggested_constant": "CONFIG_VALUE_75",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 70,
      "current_context": "cache_improvements.append(ast_hit_rate - 70)  # Baseline 70%",
      "suggested_constant": "CONFIG_VALUE_70",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "parallel_workers: int = 4",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "batch_size: int = 50",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 25,
      "current_context": "python_files = [f for f in test_files if f.endswith('.py')][:25]",
      "suggested_constant": "MAGIC_CONSTANT_25",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "parallel_workers=4,",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "if file_results.get(\"avg_hit_rate_percent\", 100) < 80:",
      "suggested_constant": "CONFIG_VALUE_80",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "if file_results.get(\"avg_access_time_ms\", 0) > 50:",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 70,
      "current_context": "if ast_results.get(\"avg_hit_rate_percent\", 100) < 70:",
      "suggested_constant": "CONFIG_VALUE_70",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "current_context": "await asyncio.sleep(0.01)",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "priority_files=test_files[:20],  # Prioritize first 20 files",
      "suggested_constant": "CONFIG_VALUE_20",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "current_context": "if queue_utilization < 0.3:",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.1,
      "current_context": "if recent_throughputs[-1] > recent_throughputs[0] * 1.1:",
      "suggested_constant": "MAGIC_CONSTANT_1_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "elif queue_utilization > 0.9:",
      "suggested_constant": "CONFIG_VALUE_0_9",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 31.7,
      "current_context": "\"memory_usage_reduction_percent\": 31.7,",
      "suggested_constant": "CONFIG_VALUE_31_7",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 73.4,
      "current_context": "\"thread_contention_reduction_percent\": 73.4,",
      "suggested_constant": "CONFIG_VALUE_73_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 257.8,
      "current_context": "\"detector_initialization_time_ms\": 257.8,  # Reduced from 453.2ms",
      "suggested_constant": "CONFIG_VALUE_257_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "current_context": "elif recent_throughputs[-1] < recent_throughputs[0] * 0.9:",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if queue.current_size() < self.config.max_pool_size * 0.8:",
      "suggested_constant": "CONFIG_VALUE_0_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "if queue.current_size() < avg_capacity * 0.5:",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "if pooled_detector and current_time - pooled_detector.last_used > 300:  # 5 minutes idle",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "for future in as_completed(future_to_task, timeout=300):  # 5 minute timeout",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300.0,
      "current_context": "pool_cleanup_interval: float = 300.0):",
      "suggested_constant": "CONFIG_VALUE_300_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "assert 4 <= max_shared_pools <= 64, \"max_shared_pools must be 4-64\"",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80.0,
      "current_context": "if self._calculate_data_sharing_efficiency() > 80.0:",
      "suggested_constant": "CONFIG_VALUE_80_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 70.0,
      "current_context": "if cache_efficiency < 70.0:",
      "suggested_constant": "CONFIG_VALUE_70_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80.0,
      "current_context": "if coordination_efficiency < 80.0:",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80.0 typically used in network_port context"
    },
    {
      "value": 0.5,
      "current_context": "if stats.get(\"pool_utilization\", 0.0) < 0.5:",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "pool.reference_count < 4):  # Max 4 files per pool",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 100000,
      "current_context": "elif file_size < 100000:  # < 100KB",
      "suggested_constant": "MAGIC_CONSTANT_100000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.4,
      "current_context": "return (utilization * 0.4 + cache_efficiency * 0.6) * 100.0",
      "suggested_constant": "CONFIG_VALUE_0_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "current_context": "return (utilization * 0.4 + cache_efficiency * 0.6) * 100.0",
      "suggested_constant": "CONFIG_VALUE_0_6",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.005,
      "current_context": "len(pool.violation_patterns_cache) * 0.005  # ~5KB per pattern",
      "suggested_constant": "CONFIG_VALUE_0_005",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "current_context": "len(pool.analysis_results_cache) * 0.01 +  # ~10KB per result",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "len(pool.ast_cache) * 0.1 +  # ~100KB per AST",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.05,
      "current_context": "len(pool.source_cache) * 0.05 +  # ~50KB per source",
      "suggested_constant": "CONFIG_VALUE_0_05",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50.0,
      "current_context": "target_improvement_percent: float = 50.0) -> Dict[str, Any]:",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50.0,
      "current_context": "if target_improvement_percent != 50.0:",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 90,
      "current_context": "assert 1 <= self.target_improvement_percent <= 90, \"Improvement target must be 1-90%\"",
      "suggested_constant": "MAGIC_CONSTANT_90",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 95.0,
      "current_context": "improvement_percent = min(warming_effectiveness, 95.0)  # Based on real measurements",
      "suggested_constant": "CONFIG_VALUE_95_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20.0,
      "current_context": "success = improvement_percent > 20.0  # At least 20% improvement",
      "suggested_constant": "MAGIC_CONSTANT_20_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50.0,
      "current_context": "if avg_improvement < 50.0:",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50.0,
      "current_context": "if avg_improvement >= 50.0:",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50.0,
      "current_context": "if parallel_stats[\"parallelization_ratio_percent\"] < 50.0:",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15.0,
      "current_context": "avg_miss_time = 15.0  # 15ms average for cache miss",
      "suggested_constant": "CONFIG_VALUE_15_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 25,
      "current_context": "batch_size=25,",
      "suggested_constant": "CONFIG_VALUE_25",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80.0,
      "current_context": "warming_effectiveness >= 80.0 and",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80.0 typically used in network_port context"
    },
    {
      "value": 0.9,
      "current_context": "success = optimized_hit_rate >= target_hit_rate * 0.9  # 90% of target",
      "suggested_constant": "CONFIG_VALUE_0_9",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "for future in as_completed(futures, timeout=300):  # 5 minute timeout",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 98.0,
      "current_context": "return min(improved_rate, 98.0)  # Cap at realistic maximum",
      "suggested_constant": "CONFIG_VALUE_98_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "sample_files = project_files[:20]  # Sample for baseline",
      "suggested_constant": "CONFIG_VALUE_20",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20.0,
      "current_context": "baseline_time_ms=expected_files * 20.0,  # Estimated cold cache time",
      "suggested_constant": "CONFIG_VALUE_20_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50.0,
      "current_context": "\"target_achievement_50_percent\": avg_improvement >= 50.0,",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "priority_files=project_files[:50],  # Top 50 files",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2000,
      "current_context": "current_time = baseline_metrics.get(\"ast_cache\", {}).get(\"baseline_parse_time_ms\", 2000)",
      "suggested_constant": "CONFIG_VALUE_2000",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "speedup_factor = sequential_equivalent / max(parallel_time, 0.001)",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "speedup = sequential_time / max(parallel_time, 0.001)",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.2,
      "current_context": "\"parallel_processing_effective\": overall_speedup > 1.2,",
      "suggested_constant": "CONFIG_VALUE_1_2",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "time.sleep(0.5)  # Sample every 500ms",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 50.0,
      "current_context": "if overall_improvement >= 50.0:",
      "suggested_constant": "CONFIG_VALUE_50_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 70.0,
      "current_context": "warming_effectiveness >= 70.0 and  # 70%+ files warmed",
      "suggested_constant": "MAGIC_CONSTANT_70_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80.0,
      "current_context": "fast_access_rate >= 80.0 and       # 80%+ fast accesses",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80.0 typically used in network_port context"
    },
    {
      "value": 20,
      "current_context": "files_warmed >= 20                 # At least 20 files warmed",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 40,
      "current_context": "streaming_files = self.test_files[:40]  # Use 40 files for streaming test",
      "suggested_constant": "CONFIG_VALUE_40",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15.0,
      "current_context": "time_improvement >= 15.0 and       # 15%+ time improvement",
      "suggested_constant": "CONFIG_VALUE_15_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50.0,
      "current_context": "'improvement_achieved': overall_improvement >= 50.0  # Target: 50%+ improvement",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "if content and access_time < 0.01:  # < 10ms = fast access",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "max(baseline_avg_time, 0.001)) * 100",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "len(optimized_operations) >= len(baseline_operations) * 0.9  # Process most files",
      "suggested_constant": "CONFIG_VALUE_0_9",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "if 50 <= line_count < 200:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "'traversal_reduction_achieved': traversal_reduction_percent > 50,",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "traversal_reduction_percent > 50 and",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1500,
      "current_context": "elif 500 <= line_count < 1500:",
      "suggested_constant": "MAGIC_CONSTANT_1500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1500,
      "current_context": "elif line_count >= 1500:",
      "suggested_constant": "MAGIC_CONSTANT_1500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "elif avg_time_per_file < 5000: # < 5s per file",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "assert 0.5 <= sensitivity <= 2.0, \"sensitivity must be 0.5-2.0\"",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "assert 50 <= history_window <= 1000, \"history_window must be 50-1000\"",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if len(self.metrics_history) < 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 95.0,
      "current_context": "if metrics.cpu_usage_percent > 95.0:",
      "suggested_constant": "MAGIC_CONSTANT_95_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "wait_time_std = (sum((x - wait_time_avg) ** 2 for x in wait_times) / len(wait_times)) ** 0.5",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "assert 0.5 <= monitoring_interval <= 60.0, \"monitoring_interval must be 0.5-60 seconds\"",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "if not self.baseline_established and len(self.metrics_history) >= 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "if throughput_ratio < 0.7:  # 30% degradation",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 25.0,
      "current_context": "\"critical\": 25.0 / sensitivity,   # 25ms wait time",
      "suggested_constant": "CONFIG_VALUE_25_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50.0,
      "current_context": "\"emergency\": 50.0 / sensitivity   # 50ms wait time",
      "suggested_constant": "CONFIG_VALUE_50_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.7,
      "current_context": "\"warning\": 0.7 / sensitivity,     # 70% pool utilization",
      "suggested_constant": "CONFIG_VALUE_0_7",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "current_context": "\"critical\": 0.9 / sensitivity,    # 90% pool utilization",
      "suggested_constant": "CONFIG_VALUE_0_9",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.98,
      "current_context": "\"emergency\": 0.98 / sensitivity   # 98% pool utilization",
      "suggested_constant": "CONFIG_VALUE_0_98",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80.0,
      "current_context": "elif metrics.cpu_usage_percent > 80.0 and metrics.active_threads > 8:",
      "suggested_constant": "CONFIG_VALUE_80_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "\"throughput_files_per_sec\": files_analyzed / max(analysis_duration, 0.001)",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "return self.statistical_significance >= 0.95  # 95% confidence",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1440,
      "current_context": "assert 5 <= self.baseline_window_minutes <= 1440, \"baseline_window must be 5-1440 minutes\"",
      "suggested_constant": "MAGIC_CONSTANT_1440",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1440,
      "current_context": "assert 5 <= window_minutes <= 1440, \"window_minutes must be 5-1440\"",
      "suggested_constant": "MAGIC_CONSTANT_1440",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "if len(data) < 4:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50.0,
      "current_context": "if abs_percent >= 50.0:",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "return 0.5  # Default to not significant if calculation fails",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "if regression_rate > 0.3:  # > 30% regression rate",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "if regression_rate > 0.1:  # > 10% regression rate",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "for i in range(20):",
      "suggested_constant": "CONFIG_VALUE_20",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.7,
      "current_context": "\"correlation_strength\": \"strong\" if r_squared > 0.7 else \"moderate\" if r_squared > 0.4 else \"weak\"",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15.0,
      "current_context": "elif abs_percent >= 15.0:",
      "suggested_constant": "MAGIC_CONSTANT_15_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "if i < 15:  # Build baseline first",
      "suggested_constant": "CONFIG_VALUE_15",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "return 0.5    # Not significant",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.4,
      "current_context": "\"correlation_strength\": \"strong\" if r_squared > 0.7 else \"moderate\" if r_squared > 0.4 else \"weak\"",
      "suggested_constant": "MAGIC_CONSTANT_0_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "if confidence >= 0.5:  # Only include confident measurements",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "await asyncio.sleep(0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "await asyncio.sleep(0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 75.0,
      "current_context": "metrics.buffer_utilization_percent = 75.0  # Simulated",
      "suggested_constant": "CONFIG_VALUE_75_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "current_context": "if throughput_scaling.get('linearity', 1.0) < 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "if memory_scaling.get('factor', 0) > 0.5:  # Memory grows faster than linear",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if accuracy < 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "if consistency < 0.7:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if avg_latency > 50:  # > 50ms latency",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if efficiency < 0.8:",
      "suggested_constant": "CONFIG_VALUE_0_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "current_context": "if consistency < 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50.0,
      "current_context": "return expected_reduction >= 50.0  # 50%+ reduction validates claim",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 40.0,
      "current_context": "return expected_improvement >= 40.0  # 40%+ improvement validates claim",
      "suggested_constant": "MAGIC_CONSTANT_40_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if avg_time < 50:  # < 50ms is efficient",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.005,
      "current_context": "metrics.memory_growth_mb = volume * 0.005",
      "suggested_constant": "MAGIC_CONSTANT_0_005",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "metrics.violations_per_second = volume / max(avg_time_seconds, 0.001)",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "metrics.processing_velocity = rate * 0.8  # 80% efficiency",
      "suggested_constant": "CONFIG_VALUE_0_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90.0,
      "current_context": "metrics.buffer_utilization_percent = min(90.0, rate * 2)",
      "suggested_constant": "CONFIG_VALUE_90_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 5000,
      "current_context": "'data_volumes': [10, 50, 100, 500, 1000, 5000],",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "elif peak_throughput > 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "metrics.violations_per_second = volume / max(metrics.total_aggregation_time_ms / 1000, 0.001)",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "r_squared = 1 - (ss_res / max(ss_tot, 0.001))",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "metrics.stream_processing_latency_ms = 10.0 + rate * 0.5",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "metrics.incremental_update_time_ms = 5.0 + rate * 0.1",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "await asyncio.sleep(0.001)",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "await asyncio.sleep(0.001)  # 1ms pause",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 9999,
      "current_context": "'rule_id': f'C{i % 9999:04d}',",
      "suggested_constant": "MAGIC_CONSTANT_9999",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "if i % int(10 / (factor + 0.1)) == 0:  # More correlations for higher complexity",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "profiling_interval: float = 0.5):",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "assert 0.1 <= profiling_interval <= 5.0, \"profiling_interval must be 0.1-5.0 seconds\"",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "current_context": "if contention_rate > 0.3:",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300.0,
      "current_context": "assert 5.0 <= test_duration_seconds <= 300.0, \"test_duration must be 5-300 seconds\"",
      "suggested_constant": "CONFIG_VALUE_300_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "current_context": "if efficiency > 0.8:",
      "suggested_constant": "CONFIG_VALUE_0_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "elif efficiency < 80:",
      "suggested_constant": "CONFIG_VALUE_80",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "elif contention_rate > 0.1:",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "elif efficiency > 0.6:",
      "suggested_constant": "CONFIG_VALUE_0_6",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.05,
      "current_context": "elif contention_rate > 0.05:",
      "suggested_constant": "MAGIC_CONSTANT_0_05",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "high_cpu_snapshots = [s for s in recent_snapshots if s.cpu_usage_percent > 80]",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.4,
      "current_context": "elif efficiency > 0.4:",
      "suggested_constant": "CONFIG_VALUE_0_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)  # 1ms work simulation",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "def __init__(self, max_threads: int = 4, max_memory_mb: int = 512):",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "thread_counts: List[int] = [1, 2, 4, 8]) -> Dict[str, Any]:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2000,
      "current_context": "'large': (2000, 5000),   # 2000-5000 LOC",
      "suggested_constant": "MAGIC_CONSTANT_2000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "'large': (2000, 5000),   # 2000-5000 LOC",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 8000,
      "current_context": "'xlarge': (8000, 15000)  # 8000-15000 LOC",
      "suggested_constant": "MAGIC_CONSTANT_8000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15000,
      "current_context": "'xlarge': (8000, 15000)  # 8000-15000 LOC",
      "suggested_constant": "MAGIC_CONSTANT_15000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 85,
      "current_context": "'claim_validated': 85 <= comparison.traversal_reduction_percent <= 90,",
      "suggested_constant": "MAGIC_CONSTANT_85",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 90,
      "current_context": "'claim_validated': 85 <= comparison.traversal_reduction_percent <= 90,",
      "suggested_constant": "MAGIC_CONSTANT_90",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "elif total_violations > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1440,
      "current_context": "assert 5 <= metrics_retention_minutes <= 1440, \"Retention must be 5min-24hrs\"",
      "suggested_constant": "CONFIG_VALUE_1440",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300.0,
      "current_context": "assert 5.0 <= health_check_interval_seconds <= 300.0, \"Health interval must be 5s-5min\"",
      "suggested_constant": "CONFIG_VALUE_300_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50.0,
      "current_context": "if cache_hit_rate < 50.0:",
      "suggested_constant": "CONFIG_VALUE_50_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 5000,
      "current_context": "if avg_latency > 5000:  # 5 seconds",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "if cpu_usage > 80:",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 85,
      "current_context": "if memory_usage_percent > 85:",
      "suggested_constant": "CONFIG_VALUE_85",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "cpu_percent = psutil.cpu_percent(interval=0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.1,
      "current_context": "if late_avg > early_avg * 1.1:",
      "suggested_constant": "MAGIC_CONSTANT_1_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "elif late_avg < early_avg * 0.9:",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "max_partial_results: int = 5000,",
      "suggested_constant": "CONFIG_VALUE_5000",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 100000,
      "current_context": "assert 100 <= max_partial_results <= 100000, \"max_partial_results must be 100-100000\"",
      "suggested_constant": "CONFIG_VALUE_100000",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 100000,
      "current_context": "assert 100 <= max_dependency_nodes <= 100000, \"max_dependency_nodes must be 100-100000\"",
      "suggested_constant": "CONFIG_VALUE_100000",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "assert 0.1 <= cache_retention_hours <= 168.0, \"cache_retention_hours must be 0.1-168\"",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 168.0,
      "current_context": "assert 0.1 <= cache_retention_hours <= 168.0, \"cache_retention_hours must be 0.1-168\"",
      "suggested_constant": "CONFIG_VALUE_168_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 5000,
      "current_context": "assert 100 <= max_trend_points <= 5000, \"Trend points must be 100-5000\"",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300.0,
      "current_context": "if current_time - r.timestamp <= 300.0]",
      "suggested_constant": "MAGIC_CONSTANT_300_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 600.0,
      "current_context": "if current_time - timestamp <= 600.0]",
      "suggested_constant": "MAGIC_CONSTANT_600_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "max_workers: int = 4,",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50000,
      "current_context": "assert 10 <= max_queue_size <= 50000, \"max_queue_size must be 10-50000\"",
      "suggested_constant": "CONFIG_VALUE_50000",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 100000,
      "current_context": "assert 100 <= cache_size <= 100000, \"cache_size must be 100-100000\"",
      "suggested_constant": "CONFIG_VALUE_100000",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "if len(class_methods) > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if metrics.get(\"bug_count\", -1) == 0 and metrics.get(\"complexity\", 0) > 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "'max_analysis_time_seconds': 300,",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "'parallel_workers': 4,",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 5000,
      "current_context": "'maxExecutionTime': 5000,",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "max_analysis_time_seconds=analysis_data.get('max_analysis_time_seconds', 300),",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "parallel_workers=analysis_data.get('parallel_workers', 4),",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 8080,
      "current_context": "8080: \"network_port\",",
      "suggested_constant": "MAGIC_CONSTANT_8080",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3000,
      "current_context": "3000: \"network_port\",",
      "suggested_constant": "MAGIC_CONSTANT_3000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "if 0.7 <= value <= 0.9:",
      "suggested_constant": "CONFIG_VALUE_0_7",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "current_context": "if 0.7 <= value <= 0.9:",
      "suggested_constant": "CONFIG_VALUE_0_9",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 21,
      "current_context": "def validate_node_count(total_nodes: int, min_nodes: int = 3, max_nodes: int = 21) -> None:",
      "suggested_constant": "MAGIC_CONSTANT_21",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if len(rounded_metrics) > len(metrics) * 0.8:  # More than 80% rounded",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 250,
      "current_context": "clean_name = name[:250] + ('.' + ext if ext else '')",
      "suggested_constant": "MAGIC_CONSTANT_250",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if depth > 50:  # Prevent infinite recursion",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 9,
      "current_context": "if len(cells) < 9:",
      "suggested_constant": "MAGIC_CONSTANT_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if len(rows) > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "dpmo = (defects / total_opportunities) * 1000000",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3.4,
      "current_context": "if dpmo <= 3.4:",
      "suggested_constant": "MAGIC_CONSTANT_3_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.15,
      "current_context": "if random.random() < 0.15:  # 15% chance",
      "suggested_constant": "MAGIC_CONSTANT_0_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 233,
      "current_context": "elif dpmo <= 233:",
      "suggested_constant": "MAGIC_CONSTANT_233",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "prediction_probability = 0.3 + (0.4 * learning_factor)  # 30% -> 70%",
      "suggested_constant": "CONFIG_VALUE_0_3",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "current_context": "actual_hit = random.random() < 0.6  # 60% actual hit rate",
      "suggested_constant": "CONFIG_VALUE_0_6",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "\"target_hit_rate\": 0.5,",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.005,
      "current_context": "time.sleep(random.uniform(0.005, 0.020))  # 5-20ms",
      "suggested_constant": "CONFIG_VALUE_0_005",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.02,
      "current_context": "time.sleep(random.uniform(0.005, 0.020))  # 5-20ms",
      "suggested_constant": "CONFIG_VALUE_0_02",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "with ThreadPoolExecutor(max_workers=50) as executor:",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 6210,
      "current_context": "elif dpmo <= 6210:",
      "suggested_constant": "MAGIC_CONSTANT_6210",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50.0,
      "current_context": "learning_factor = min(1.0, i / 50.0)  # Improves over first 50 operations",
      "suggested_constant": "CONFIG_VALUE_50_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.4,
      "current_context": "prediction_probability = 0.3 + (0.4 * learning_factor)  # 30% -> 70%",
      "suggested_constant": "CONFIG_VALUE_0_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "\"exceeds_target\": cache_hit_rate > 0.5",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.95,
      "current_context": "\"status\": \"PASSED\" if successful_requests >= num_requests * 0.95 else \"FAILED\"",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 66810,
      "current_context": "elif dpmo <= 66810:",
      "suggested_constant": "MAGIC_CONSTANT_66810",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "violations['cost_p95'] = metrics.usd_per_task_p95 <= cost_slos.get('usd_per_task_p95', 0.60)",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "violations['cost_p50'] = metrics.usd_per_task_p50 <= cost_slos.get('usd_per_task_p50', 0.30)",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "report.append(\"\\n\" + \"-\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "report.append(\"\\n\" + \"-\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 4,
      "current_context": "max_workers: int = 4) -> Dict:",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "def run(self, max_files: Optional[int] = None, max_workers: int = 4):",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "parser.add_argument('--workers', type=int, default=4, help='Number of parallel workers')",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15,
      "current_context": "if complexity > 15:",
      "suggested_constant": "MAGIC_CONSTANT_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "report.append(\"-\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 20,
      "current_context": "if len(history) > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "CONFIG_VALUE_80",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 4,
      "current_context": "self.max_workers = max_workers or min(os.cpu_count() or 4, 8)",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "low_coverage_results = [r for r in results if r.coverage_percentage and r.coverage_percentage < 80]",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 100000,
      "current_context": "iterations=100000,  # NIST recommended minimum",
      "suggested_constant": "MAGIC_CONSTANT_100000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.85,
      "current_context": "sys.exit(0 if results['overall_success_rate'] >= 0.85 else 1)",
      "suggested_constant": "MAGIC_CONSTANT_0_85",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "if cli_risk > 0.2:",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1650,
      "current_context": "target_fixes = 1650",
      "suggested_constant": "MAGIC_CONSTANT_1650",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3301,
      "current_context": "overall_percentage = (grand_total / 3301 * 100)",
      "suggested_constant": "MAGIC_CONSTANT_3301",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3301,
      "current_context": "'total_violations': 3301,",
      "suggested_constant": "MAGIC_CONSTANT_3301",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80.0,
      "current_context": "phase.progress = 100.0 if result['returncode'] == 0 else 80.0",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80.0 typically used in network_port context"
    },
    {
      "value": 1800,
      "current_context": "timeout=1800  # 30 minutes timeout",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 13,
      "current_context": "(\"src/intelligence/data_pipeline/streaming/failover_manager.py\", 13, \"unexpected indent\"),",
      "suggested_constant": "CONFIG_VALUE_13",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 75,
      "current_context": "(\"src/intelligence/neural_networks/rl/ppo_agent.py\", 75, \"missing if block\"),",
      "suggested_constant": "MAGIC_CONSTANT_75",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "if current_indent > prev_indent + 4 and not prev_line.endswith((',', '(')):",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "if in_class and current_indent < 4:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "report.append(\"-\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "report.append(\"-\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "report.append(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "report.append(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 4,
      "current_context": "if current_indent != class_indent + 4:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "(len(line) > 4 and line[4:].strip().startswith('def '))):",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "elif current_indent == method_indent + 4:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "if current_indent > body_indent + 4:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "elif current_indent == body_indent + 4:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "(len(line) > 4 and line[4:].strip().startswith('def '))):",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "\"=\" * 80,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "\"=\" * 80,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "\"=\" * 80,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "\"=\" * 80,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "\"=\" * 80,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "report_lines.append(\"-\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 1650,
      "current_context": "target_fixes = 1650",
      "suggested_constant": "MAGIC_CONSTANT_1650",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3301,
      "current_context": "overall_percentage = (total_fixes / 3301 * 100)",
      "suggested_constant": "MAGIC_CONSTANT_3301",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3301,
      "current_context": "'total_violations': 3301,",
      "suggested_constant": "MAGIC_CONSTANT_3301",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.137,
      "current_context": "\"correlation_coefficient\": 0.137",
      "suggested_constant": "MAGIC_CONSTANT_0_137",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.904,
      "current_context": "\"similarity\": 0.904,",
      "suggested_constant": "MAGIC_CONSTANT_0_904",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.909,
      "current_context": "\"similarity\": 0.909,",
      "suggested_constant": "MAGIC_CONSTANT_0_909",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 40,
      "current_context": "if failure_rate >= 40:",
      "suggested_constant": "MAGIC_CONSTANT_40",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "return random.randint(5, 15)  # Number of files formatted",
      "suggested_constant": "CONFIG_VALUE_15",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "'timeout_seconds': 300,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 20,
      "current_context": "elif failure_rate >= 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "await asyncio.sleep(0.5)  # Simulate API call delay",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "current_context": "await asyncio.sleep(0.3)",
      "suggested_constant": "CONFIG_VALUE_0_3",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "current_context": "await asyncio.sleep(0.8)",
      "suggested_constant": "CONFIG_VALUE_0_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "await asyncio.sleep(0.5)",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.5,
      "current_context": "await asyncio.sleep(1.5)",
      "suggested_constant": "CONFIG_VALUE_1_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.5,
      "current_context": "await asyncio.sleep(1.5)",
      "suggested_constant": "CONFIG_VALUE_1_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "current_context": "await asyncio.sleep(0.8)",
      "suggested_constant": "CONFIG_VALUE_0_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "await asyncio.sleep(0.5)",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "return success_rate >= 50  # At least 50% of notifications must succeed",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 75,
      "current_context": "elif success_rate >= 75:",
      "suggested_constant": "MAGIC_CONSTANT_75",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if analysis.failure_detected and success_rate < 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "await asyncio.sleep(0.3)",
      "suggested_constant": "CONFIG_VALUE_0_3",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 75,
      "current_context": "elif success_rate >= 75:",
      "suggested_constant": "MAGIC_CONSTANT_75",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "elif success_rate >= 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "elif failure_rate >= 15 or failure_count >= 3:",
      "suggested_constant": "DEFAULT_RETRY_COUNT",
      "justification": "Operational parameter that may need tuning"
    },
    {
      "value": 50,
      "current_context": "elif success_rate >= 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 202,
      "current_context": "if response.status_code in [200, 201, 202]:",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 50,
      "current_context": "assert len(json_str) > 50, \"JSON output too short\"",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "return abstract_count > 0 and abstract_count >= total_methods * 0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "\"edge_case_coverage\": lambda v: v >= 0.3,",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "\"theater_correlation\": lambda v: v >= 0.8",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "report.append(\"-\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "report.append(\"-\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "report.append(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.25,
      "current_context": "if regression_percent > 0.25:  # 25% regression",
      "suggested_constant": "MAGIC_CONSTANT_0_25",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "if current_success_rate < 0.5:  # Below 50% success rate",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.85,
      "current_context": "'phase3_target_met': current_success_rate >= 0.85  # Phase 3 target",
      "suggested_constant": "MAGIC_CONSTANT_0_85",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "if estimated_cost_increase > 0.3:  # 30% cost increase",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.1,
      "current_context": "'phase2_target_met': current_exec_time <= baseline_exec_time * 1.1  # Within 10% of target",
      "suggested_constant": "MAGIC_CONSTANT_1_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "'p95': sorted(execution_times)[int(len(execution_times) * 0.95)] if len(execution_times) > 1 else execution_times[0]",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "('mece', 15),",
      "suggested_constant": "CONFIG_VALUE_15",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15,
      "current_context": "('cache', 15),",
      "suggested_constant": "CONFIG_VALUE_15",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "current_context": "time.sleep(duration * 0.01)  # Scale down for simulation",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 6,
      "current_context": "with concurrent.futures.ThreadPoolExecutor(max_workers=6) as executor:",
      "suggested_constant": "CONFIG_VALUE_6",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "if timeout_val <= 20:",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 50,
      "current_context": "cache = FileContentCache(max_memory=50 * 1024 * 1024)  # 50MB",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 35,
      "current_context": "elif timeout_val <= 35:",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1.1,
      "current_context": "'target_met': actual_exec_time <= theoretical_exec_time * 1.1  # Within 10% tolerance",
      "suggested_constant": "MAGIC_CONSTANT_1_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "'target_met': actual_efficiency >= theoretical_efficiency * 0.95  # Within 5% tolerance",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "'target_met': estimated_cost_reduction >= theoretical_targets['cost_reduction_percent'] * 0.9",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 96.7,
      "current_context": "if overall_hit_rate >= 96.7:",
      "suggested_constant": "CONFIG_VALUE_96_7",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 42,
      "current_context": "print(\"-\" * 42)",
      "suggested_constant": "CONFIG_VALUE_42",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 43.0,
      "current_context": "'Memory Efficiency': {'value': 43.0, 'unit': '% improvement', 'target': 40.0},",
      "suggested_constant": "CONFIG_VALUE_43_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 40.0,
      "current_context": "'Memory Efficiency': {'value': 43.0, 'unit': '% improvement', 'target': 40.0},",
      "suggested_constant": "CONFIG_VALUE_40_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 73.0,
      "current_context": "'Thread Contention Reduction': {'value': 73.0, 'unit': '% reduction', 'target': 70.0},",
      "suggested_constant": "CONFIG_VALUE_73_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 70.0,
      "current_context": "'Thread Contention Reduction': {'value': 73.0, 'unit': '% reduction', 'target': 70.0},",
      "suggested_constant": "CONFIG_VALUE_70_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 97.4,
      "current_context": "'Cache Hit Rate': {'value': 97.4, 'unit': '% hit rate', 'target': 96.7},",
      "suggested_constant": "CONFIG_VALUE_97_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 96.7,
      "current_context": "'Cache Hit Rate': {'value': 97.4, 'unit': '% hit rate', 'target': 96.7},",
      "suggested_constant": "CONFIG_VALUE_96_7",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 6482.0,
      "current_context": "'Aggregation Throughput': {'value': 6482.0, 'unit': ' violations/sec', 'target': 1000.0},",
      "suggested_constant": "CONFIG_VALUE_6482_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 58.3,
      "current_context": "'Cumulative Improvement': {'value': 58.3, 'unit': '% total gain', 'target': 50.0}",
      "suggested_constant": "CONFIG_VALUE_58_3",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50.0,
      "current_context": "'Cumulative Improvement': {'value': 58.3, 'unit': '% total gain', 'target': 50.0}",
      "suggested_constant": "CONFIG_VALUE_50_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "with concurrent.futures.ThreadPoolExecutor(max_workers=50) as executor:",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 95.2,
      "current_context": "'file_cache': [MockCacheMetrics(95.2, 1200, 80)],",
      "suggested_constant": "CONFIG_VALUE_95_2",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1200,
      "current_context": "'file_cache': [MockCacheMetrics(95.2, 1200, 80)],",
      "suggested_constant": "CONFIG_VALUE_1200",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "'file_cache': [MockCacheMetrics(95.2, 1200, 80)],",
      "suggested_constant": "CONFIG_VALUE_80",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 97.8,
      "current_context": "'ast_cache': [MockCacheMetrics(97.8, 800, 20)],",
      "suggested_constant": "CONFIG_VALUE_97_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 800,
      "current_context": "'ast_cache': [MockCacheMetrics(97.8, 800, 20)],",
      "suggested_constant": "CONFIG_VALUE_800",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "'ast_cache': [MockCacheMetrics(97.8, 800, 20)],",
      "suggested_constant": "CONFIG_VALUE_20",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 99.1,
      "current_context": "'memory_cache': [MockCacheMetrics(99.1, 2000, 18)]",
      "suggested_constant": "CONFIG_VALUE_99_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2000,
      "current_context": "'memory_cache': [MockCacheMetrics(99.1, 2000, 18)]",
      "suggested_constant": "CONFIG_VALUE_2000",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 18,
      "current_context": "'memory_cache': [MockCacheMetrics(99.1, 2000, 18)]",
      "suggested_constant": "CONFIG_VALUE_18",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "current_context": "if len(recent_values) >= 3 and max(recent_values) - min(recent_values) < 0.01:",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "if len(recent_values) >= 2 and recent_values[-1] < recent_values[-2] * 0.9:",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "capture_output=True, text=True, timeout=300)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 180,
      "current_context": "capture_output=True, text=True, timeout=180)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 120,
      "current_context": "capture_output=True, text=True, timeout=120)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1757,
      "current_context": "'src': 1757,",
      "suggested_constant": "MAGIC_CONSTANT_1757",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2740,
      "current_context": "'analyzer': 2740,",
      "suggested_constant": "MAGIC_CONSTANT_2740",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2204,
      "current_context": "'tests': 2204",
      "suggested_constant": "MAGIC_CONSTANT_2204",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 127,
      "current_context": "if ord(char) > 127:",
      "suggested_constant": "MAGIC_CONSTANT_127",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 25,
      "current_context": "\"severity\": \"critical\" if method_count > 25 or loc > 1000 else \"high\",",
      "suggested_constant": "MAGIC_CONSTANT_25",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if analyzed_count % 50 == 0:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 20,
      "current_context": "technical[\"detailed_findings\"] = self._extract_detailed_findings(artifacts)[:20]",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "with ThreadPoolExecutor(max_workers=4) as executor:",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 180,
      "current_context": "result = subprocess.run(cmd, capture_output=True, text=True, timeout=180)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "if result.findings and result.execution_time > 300:  # 5 minutes",
      "suggested_constant": "MAGIC_CONSTANT_300",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "def extract_services(self, file_path: str, max_methods_per_service: int = 20) -> List[ServiceCluster]:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1154,
      "current_context": "{\"phase\": 1, \"files\": 1154, \"target_dpmo\": 500, \"target_sigma\": 5.0},",
      "suggested_constant": "MAGIC_CONSTANT_1154",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1731,
      "current_context": "{\"phase\": 2, \"files\": 1731, \"target_dpmo\": 1000, \"target_sigma\": 4.7},",
      "suggested_constant": "MAGIC_CONSTANT_1731",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2885,
      "current_context": "{\"phase\": 3, \"files\": 2885, \"target_dpmo\": 1500, \"target_sigma\": 4.5}",
      "suggested_constant": "MAGIC_CONSTANT_2885",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1500,
      "current_context": "{\"phase\": 3, \"files\": 2885, \"target_dpmo\": 1500, \"target_sigma\": 4.5}",
      "suggested_constant": "MAGIC_CONSTANT_1500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 233,
      "current_context": "elif dpmo <= 233:",
      "suggested_constant": "MAGIC_CONSTANT_233",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6210,
      "current_context": "elif dpmo <= 6210:",
      "suggested_constant": "MAGIC_CONSTANT_6210",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.5,
      "current_context": "\"specification\": {\"current\": 2, \"target\": 1.5, \"sigma\": 5.2},",
      "suggested_constant": "MAGIC_CONSTANT_1_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5.2,
      "current_context": "\"specification\": {\"current\": 2, \"target\": 1.5, \"sigma\": 5.2},",
      "suggested_constant": "MAGIC_CONSTANT_5_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6.0,
      "current_context": "\"final_sigma_level\": scaling_results[-1][\"predicted_sigma\"] if scaling_results else 6.0,",
      "suggested_constant": "MAGIC_CONSTANT_6_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 66807,
      "current_context": "elif dpmo <= 66807:",
      "suggested_constant": "MAGIC_CONSTANT_66807",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 308538,
      "current_context": "elif dpmo <= 308538:",
      "suggested_constant": "MAGIC_CONSTANT_308538",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 691462,
      "current_context": "elif dpmo <= 691462:",
      "suggested_constant": "MAGIC_CONSTANT_691462",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1154,
      "current_context": "{\"phase\": 1, \"target_files\": 1154, \"target_dpmo\": 500, \"target_sigma\": 5.0},",
      "suggested_constant": "MAGIC_CONSTANT_1154",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1731,
      "current_context": "{\"phase\": 2, \"target_files\": 1731, \"target_dpmo\": 1000, \"target_sigma\": 4.7},",
      "suggested_constant": "MAGIC_CONSTANT_1731",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2885,
      "current_context": "{\"phase\": 3, \"target_files\": 2885, \"target_dpmo\": 1500, \"target_sigma\": 4.5}",
      "suggested_constant": "MAGIC_CONSTANT_2885",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1500,
      "current_context": "{\"phase\": 3, \"target_files\": 2885, \"target_dpmo\": 1500, \"target_sigma\": 4.5}",
      "suggested_constant": "MAGIC_CONSTANT_1500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "defect_rate = dpmo / 1_000_000",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 691462,
      "current_context": "elif dpmo >= 691_462:",
      "suggested_constant": "MAGIC_CONSTANT_691462",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 308538,
      "current_context": "elif dpmo >= 308_538:",
      "suggested_constant": "MAGIC_CONSTANT_308538",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "elif successful_phases >= total_phases * 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 66807,
      "current_context": "elif dpmo >= 66_807:",
      "suggested_constant": "MAGIC_CONSTANT_66807",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6210,
      "current_context": "elif dpmo >= 6_210:",
      "suggested_constant": "MAGIC_CONSTANT_6210",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 233,
      "current_context": "elif dpmo >= 233:",
      "suggested_constant": "MAGIC_CONSTANT_233",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "if duration < 0.01:",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if 'return []' in line and 'detect_violations' in lines[i+20-5:i+20+5]:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if 'return []' in line and 'detect_violations' in lines[i+20-5:i+20+5]:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50.0,
      "current_context": "\"cache_performance\": 50.0,  # 50% improvement in cache hit rates",
      "suggested_constant": "CONFIG_VALUE_50_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 45.0,
      "current_context": "\"parallel_processing\": 45.0,  # 45% reduction in processing time",
      "suggested_constant": "CONFIG_VALUE_45_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50.0,
      "current_context": "if overall_improvement >= 50.0:",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 70.0,
      "current_context": "if achievement_rate < 70.0:",
      "suggested_constant": "MAGIC_CONSTANT_70_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50.0,
      "current_context": "overall_achieved = improvements.get('overall_improvement_percent', 0) >= 50.0",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 40.0,
      "current_context": "elif overall_improvement >= 40.0:",
      "suggested_constant": "MAGIC_CONSTANT_40_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "test_files = [str(f) for f in self.project_path.rglob(\"*.py\") if f.is_file()][:50]",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "test_files = [str(f) for f in self.project_path.rglob(\"*.py\") if f.is_file()][:20]",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.0001,
      "current_context": "full_analysis_time += len(content) * 0.0001  # 0.1ms per character",
      "suggested_constant": "MAGIC_CONSTANT_0_0001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "await asyncio.sleep(baseline_time * 0.3)  # 70% improvement simulation",
      "suggested_constant": "CONFIG_VALUE_0_3",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 85,
      "current_context": "return reduction > 85",
      "suggested_constant": "MAGIC_CONSTANT_85",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 85,
      "current_context": "print(f\"Status: {'PASS' if reduction > 85 else 'FAIL'} (target: >85%)\")",
      "suggested_constant": "MAGIC_CONSTANT_85",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "zero_overhead_claim = per_call_overhead_ms < 0.001",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "{'defects': 5, 'opportunities': 1000000, 'expected': 5.0},",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 500000,
      "current_context": "{'defects': 10, 'opportunities': 500000, 'expected': 20.0},",
      "suggested_constant": "MAGIC_CONSTANT_500000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "{'defects': 1, 'opportunities': 1000000, 'expected': 1.0}",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "if abs(actual - test['expected']) < 0.01:",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "if abs(actual - test['expected']) < 0.01:",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "flag_performance_validated = per_eval_ms < 0.1  # <0.1ms per evaluation",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "'performance_claims_accurate': performance_claims_verified >= 0.8",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "'mathematical_integrity': 'VERIFIED' if accuracy_rate >= 0.95 else 'QUESTIONABLE'",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3.4,
      "current_context": "if dpmo < 3.4:",
      "suggested_constant": "MAGIC_CONSTANT_3_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 233,
      "current_context": "elif dpmo < 233:",
      "suggested_constant": "MAGIC_CONSTANT_233",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6210,
      "current_context": "elif dpmo < 6210:",
      "suggested_constant": "MAGIC_CONSTANT_6210",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 66807,
      "current_context": "elif dpmo < 66807:",
      "suggested_constant": "MAGIC_CONSTANT_66807",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 308537,
      "current_context": "elif dpmo < 308537:",
      "suggested_constant": "MAGIC_CONSTANT_308537",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if low_issues > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "if complexity > 15:",
      "suggested_constant": "MAGIC_CONSTANT_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 70,
      "current_context": "if maintainability < 70:",
      "suggested_constant": "MAGIC_CONSTANT_70",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if avg_function_length > 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "if line_coverage < branch_coverage * 0.9:",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "returns = np.random.normal(0.001, 0.02, 252)",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "returns = np.random.normal(-0.001, 0.02, 500)",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 18,
      "current_context": "if siphon.SIPHON_TIME == time(18, 0):",
      "suggested_constant": "MAGIC_CONSTANT_18",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 8000,
      "current_context": "app.run(debug=False, host='0.0.0.0', port=8000)",
      "suggested_constant": "MAGIC_CONSTANT_8000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 8080,
      "current_context": "DEFAULT_PORT = 8080",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 8080 typically used in network_port context"
    },
    {
      "value": 443,
      "current_context": "HTTPS_PORT = 443",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 443 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "HTTP_PORT = 80",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 20,
      "current_context": "CONNECTION_POOL_SIZE = 20",
      "suggested_constant": "CONFIG_VALUE_20",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "WORKER_THREAD_COUNT = 4",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.02,
      "current_context": "noise = random.uniform(-0.02, 0.02)  # Add some noise",
      "suggested_constant": "MAGIC_CONSTANT_0_02",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.02,
      "current_context": "noise = random.uniform(-0.02, 0.02)  # Add some noise",
      "suggested_constant": "MAGIC_CONSTANT_0_02",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "message = f\"{issue_text} (Code: {code[:50]}...)\" if len(code) > 50 else f\"{issue_text} (Code: {code})\"",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "message = f\"{issue_text} (Code: {code[:50]}...)\" if len(code) > 50 else f\"{issue_text} (Code: {code})\"",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if confidence >= 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "elif confidence >= 0.6:",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "estimated_effort_hours=fix_strategy.estimated_hours if fix_strategy else 4,",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.5,
      "current_context": "multiplier = difficulty_multiplier.get(signature.fix_difficulty, 1.5)",
      "suggested_constant": "MAGIC_CONSTANT_1_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "if features[\"recent_failure_rate\"] > 0.2:",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "if probability < 0.7:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "if features[\"recent_failure_rate\"] > 0.2:",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "new_rate = 0.9 * current_rate + 0.1 * (1.0 if success else 0.0)",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "new_rate = 0.9 * current_rate + 0.1 * (1.0 if success else 0.0)",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 120,
      "current_context": "if len(line) > 120:",
      "suggested_constant": "MAGIC_CONSTANT_120",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "confidence: float = 0.7) -> FailurePattern:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "pattern.confidence = max(0.3, pattern.confidence - 0.1)",
      "suggested_constant": "CONFIG_VALUE_0_3",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "pattern.confidence = max(0.3, pattern.confidence - 0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.1,
      "current_context": "if recent_avg > older_avg * 1.1:  # 10% increase",
      "suggested_constant": "MAGIC_CONSTANT_1_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "metric.cpu_percent = process.cpu_percent(interval=0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "cpu_percent = process.cpu_percent(interval=0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1000000,
      "current_context": "metric_id = f\"{name}-{int(time.time() * 1000000)}\"",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if len(violations[violation_name]) >= 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "return actual_added >= expected_count * 0.8  # 80% success rate acceptable",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if files_analyzed >= 20:  # Bounded analysis",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if functions_analyzed >= 50:  # Bounded",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 25,
      "current_context": "if files_analyzed >= 25:  # Bounded operation",
      "suggested_constant": "MAGIC_CONSTANT_25",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "elif violation_count <= 15:",
      "suggested_constant": "MAGIC_CONSTANT_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "cache_key = f\"{project_path}_{int(time.time() // 300)}\"  # 5-minute cache",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "if functions_analyzed > 20:  # Bounded operation",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "if functions_processed > 15:  # Bounded",
      "suggested_constant": "MAGIC_CONSTANT_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "if success_rate < 0.9:",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "{\"thread_id\": 3, \"memory_location\": \"pool_size\", \"access_type\": \"write\", \"value\": 4}",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "{\"thread_id\": 4, \"memory_location\": \"detector_state\", \"access_type\": \"write\", \"value\": \"available\"},",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 25,
      "current_context": "elif overhead < 25:",
      "suggested_constant": "MAGIC_CONSTANT_25",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 25,
      "current_context": "'production_acceptable': overhead_percent < 25",
      "suggested_constant": "MAGIC_CONSTANT_25",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "'consensus_effectiveness': 'HIGH' if consensus_performance['success_rate_percent'] > 80 else 'MODERATE',",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.8,
      "current_context": "'system_health': 'EXCELLENT' if integration_rate > 0.8 and len(races_detected) == 0 else 'GOOD' if integration_rate > 0.6 else 'NEEDS_IMPROVEMENT'",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "'system_health': 'EXCELLENT' if integration_rate > 0.8 and len(races_detected) == 0 else 'GOOD' if integration_rate > 0.6 else 'NEEDS_IMPROVEMENT'",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 25,
      "current_context": "'impact_assessment': 'LOW' if overhead_percent < 10 else 'MODERATE' if overhead_percent < 25 else 'HIGH',",
      "suggested_constant": "MAGIC_CONSTANT_25",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000.0,
      "current_context": "def detect_race_conditions(self, analysis_window_ms: float = 5000.0) -> List[RaceConditionViolation]:",
      "suggested_constant": "MAGIC_CONSTANT_5000_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "if time_diff > 0.1:  # More than 100ms apart",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "self.pool_operations: deque = deque(maxlen=5000)",
      "suggested_constant": "CONFIG_VALUE_5000",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "confidence *= max(0.5, 1.0 - time_diff)",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "with concurrent.futures.ThreadPoolExecutor(max_workers=4) as executor:",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "if (current_time - a.timestamp) < 0.1 and a.thread_id != access.thread_id",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "if (read2.timestamp - read1.timestamp < 0.1 and  # 100ms window",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "assert len(assertions) <= 50, \"Excessive postcondition assertions generated\"",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "if complexity > 5 or param_count > 4 or lines > 40:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 40,
      "current_context": "if complexity > 5 or param_count > 4 or lines > 40:",
      "suggested_constant": "MAGIC_CONSTANT_40",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "comparators=[ast.Constant(value=1000000)]",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "comparators=[ast.Constant(value=-1000000)]",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if self.refactoring_stats.success_rate < 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2000,
      "current_context": "'dict_creation_in_loop': 2000,",
      "suggested_constant": "MAGIC_CONSTANT_2000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "'rule_7_return_values': 80,      # Medium expected violations",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.5,
      "current_context": "return certification_weights.get(rule, 0.5)",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "'critical': 0.8,  # Critical violations may require significant changes",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "return {'critical': 0.9, 'high': 0.7, 'medium': 0.4, 'low': 0.2}.get(violation.severity, 0.3)",
      "suggested_constant": "CONFIG_VALUE_0_3",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "current_context": "elif urgency_factor >= 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "return {'critical': 0.9, 'high': 0.7, 'medium': 0.4, 'low': 0.2}.get(violation.severity, 0.3)",
      "suggested_constant": "CONFIG_VALUE_0_9",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.7,
      "current_context": "return {'critical': 0.9, 'high': 0.7, 'medium': 0.4, 'low': 0.2}.get(violation.severity, 0.3)",
      "suggested_constant": "CONFIG_VALUE_0_7",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.4,
      "current_context": "return {'critical': 0.9, 'high': 0.7, 'medium': 0.4, 'low': 0.2}.get(violation.severity, 0.3)",
      "suggested_constant": "CONFIG_VALUE_0_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.2,
      "current_context": "return {'critical': 0.9, 'high': 0.7, 'medium': 0.4, 'low': 0.2}.get(violation.severity, 0.3)",
      "suggested_constant": "CONFIG_VALUE_0_2",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "current_context": "elif urgency_factor >= 0.6:",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.4,
      "current_context": "elif urgency_factor >= 0.4:",
      "suggested_constant": "MAGIC_CONSTANT_0_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "timeout_per_tool: int = 300  # seconds",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "'timeout_per_tool': 300",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1800,
      "current_context": "\"resolution_timeout\": 1800,  # 30 minutes",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.8,
      "current_context": "\"safety_assessment\": \"high\" if success_rate > 0.8 else \"medium\" if success_rate > 0.6 else \"low\"",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "\"safety_assessment\": \"high\" if success_rate > 0.8 else \"medium\" if success_rate > 0.6 else \"low\"",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "target_success_rate: float = 0.95) -> LoopExecution:",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "max_workers=self.config.get(\"max_test_workers\", 4)",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.7,
      "current_context": "if coupling > 0.7:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "return weighted_sum / total_weight if total_weight > 0 else 0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "if issue.coupling_strength > 0.7:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "if similarity > 0.6:",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if total_failures > 20 or category_count > 4:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "if total_failures > 20 or category_count > 4:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "await asyncio.sleep(0.5)  # Simulate deployment time",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1800,
      "current_context": "self.resolution_timeout = self.config.get(\"resolution_timeout\", 1800)  # 30 minutes",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 600,
      "current_context": "\"resolution_timeout\": 600",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 30000,
      "current_context": "new_timeout = 30000  # 30 seconds",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.9,
      "current_context": "success_rate=0.90,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 20,
      "current_context": "if features.test_failure_count > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "if features.coupling_strength > 0.7:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if features.test_coverage > 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if probability > 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "elif features.coupling_strength < 0.3:",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.4,
      "current_context": "elif features.test_coverage < 0.4:",
      "suggested_constant": "MAGIC_CONSTANT_0_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "elif probability > 0.6:",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.4,
      "current_context": "elif probability > 0.4:",
      "suggested_constant": "MAGIC_CONSTANT_0_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "max_workers: int = 4):",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "timeout=300  # 5 minute timeout",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.95,
      "current_context": "def calculate_confidence_interval(data: List[float], confidence: float = 0.95) -> Tuple[float, float]:",
      "suggested_constant": "CONFIG_VALUE_0_95",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "theoretical_minimum = 0.001  # 1ms theoretical minimum",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "if len(data) < 4:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "if min_success_rate < 0.95:",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "'memory_leak_detected': regression['slope'] > 0.01,  # >0.01 MB per iteration",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": ") if self.benchmark_results else concurrency * 0.1",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "'slow_detector': lambda *args, **kwargs: (time.sleep(0.1), {'result': 'slow'})[1],",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 100000,
      "current_context": "iterations=100000,",
      "suggested_constant": "MAGIC_CONSTANT_100000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "if len(recent_violations) > len(self.violations) * 0.5:",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "elif len(recent_violations) < len(self.violations) * 0.1:",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.85,
      "current_context": "cache_efficiency=0.85,",
      "suggested_constant": "CONFIG_VALUE_0_85",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.65,
      "current_context": "memory_usage=0.65,",
      "suggested_constant": "CONFIG_VALUE_0_65",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.008,
      "current_context": "total_overhead=0.008",
      "suggested_constant": "CONFIG_VALUE_0_008",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "current_context": "target_overhead: float = 0.01) -> Dict[str, Any]:",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "if cache_efficiency < 0.5:",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "current_context": "if load['cpu'] > 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.85,
      "current_context": "if load['memory'] > 0.85:",
      "suggested_constant": "CONFIG_VALUE_0_85",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "time.sleep(0.1)  # Simulate work",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.05,
      "current_context": "time.sleep(0.05)  # Simulate lighter work",
      "suggested_constant": "CONFIG_VALUE_0_05",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "current_context": "adaptive_results = pool.execute_adaptive(configs, target_overhead=0.01)",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "if metrics.error_count > metrics.execution_count * 0.1:",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "target_overhead: float = 0.01) -> Dict[str, ExecutionResult]:",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "if abs(error) > 0.2:  # 200ms tolerance",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "if utilization < 0.3:",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 90,
      "current_context": "if cpu_percent > 90:",
      "suggested_constant": "MAGIC_CONSTANT_90",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 85,
      "current_context": "if memory_percent > 85:",
      "suggested_constant": "MAGIC_CONSTANT_85",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "time.sleep(0.01)  # 10ms work",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "time.sleep(0.1)  # 100ms work",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "time.sleep(0.5)  # 500ms work",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "return best_worker if min_load < 50 else None  # Don't overload",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "elif avg_complexity < 0.5:",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "current_context": "elif utilization > 0.9:",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.2,
      "current_context": "if recent_avg_time > self.target_batch_time * 1.2:",
      "suggested_constant": "MAGIC_CONSTANT_1_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "self.max_workers = max_workers or min(32, (psutil.cpu_count() or 1) + 4)",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.2,
      "current_context": "'worker_count_adjustment': abs(utilization - 0.7) > 0.2,",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.5,
      "current_context": "'batch_size_tuning': load_balance_ratio > 1.5,",
      "suggested_constant": "MAGIC_CONSTANT_1_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "elif recent_avg_time < self.target_batch_time * 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)  # 1ms idle sleep",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "time.sleep(0.1)  # Brief recovery pause",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1000000,
      "current_context": "task_id = f\"{detector_name}_{int(time.time() * 1000000)}\"",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "'resource_optimization': cpu_percent > 80 or memory_percent > 80",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "'resource_optimization': cpu_percent > 80 or memory_percent > 80",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.05,
      "current_context": "time.sleep(0.05)  # 50ms simulated processing",
      "suggested_constant": "CONFIG_VALUE_0_05",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.03,
      "current_context": "time.sleep(0.03)  # 30ms simulated processing",
      "suggested_constant": "CONFIG_VALUE_0_03",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.03,
      "current_context": "\"analysis_time\": 0.03,",
      "suggested_constant": "CONFIG_VALUE_0_03",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.08,
      "current_context": "time.sleep(0.08)  # 80ms simulated processing",
      "suggested_constant": "CONFIG_VALUE_0_08",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.12,
      "current_context": "time.sleep(0.12)  # 120ms simulated processing",
      "suggested_constant": "CONFIG_VALUE_0_12",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.07,
      "current_context": "time.sleep(0.07)  # 70ms simulated processing",
      "suggested_constant": "CONFIG_VALUE_0_07",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "current_context": "overhead_target_achieved = actual_overhead < 0.01  # <1% target",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "if np.random.random() < 0.3:",
      "suggested_constant": "CONFIG_VALUE_0_3",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.02,
      "current_context": "time.sleep(0.02)",
      "suggested_constant": "CONFIG_VALUE_0_02",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "for _ in range(20):",
      "suggested_constant": "CONFIG_VALUE_20",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.234,
      "current_context": "{\"function\": \"data_processor\", \"cpu_time\": 0.234, \"memory_mb\": 45.2},",
      "suggested_constant": "CONFIG_VALUE_0_234",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 45.2,
      "current_context": "{\"function\": \"data_processor\", \"cpu_time\": 0.234, \"memory_mb\": 45.2},",
      "suggested_constant": "CONFIG_VALUE_45_2",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.456,
      "current_context": "{\"function\": \"network_handler\", \"io_wait\": 0.456, \"requests\": 1024}",
      "suggested_constant": "CONFIG_VALUE_0_456",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "current_context": "\"fault_tolerance_effective\": success_rate > 0.6,  # Should handle ~70% success despite 30% failure rate",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "results = pool.execute_adaptive(detector_configs, target_overhead=0.01)",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.005,
      "current_context": "self.overhead_tolerance = 0.005  # 0.5% tolerance",
      "suggested_constant": "MAGIC_CONSTANT_0_005",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "cache_hit_rate = 0.7  # Would get from actual cache metrics",
      "suggested_constant": "CONFIG_VALUE_0_7",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.005,
      "current_context": "base_overhead = 0.005  # 0.5% base overhead",
      "suggested_constant": "MAGIC_CONSTANT_0_005",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if system_load > 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "min_interval = math.log(exec_count + 1) * 0.1  # Logarithmic backoff",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "current_context": "elif system_load < 0.3:",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "elif predicted_execution_time < 0.1:  # Very fast tasks",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "max_threads=4,",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "max_concurrent_detectors=4,",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "cache_size = max(1000, int(base_cache_size * 0.5))",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "optimal_concurrency = max(1, int(optimal_concurrency * 0.5))",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 500000,
      "current_context": "{\"id\": \"PRJ001\", \"name\": \"Digital Transformation\", \"status\": \"active\", \"budget\": 500000, \"completion\": 0.65},",
      "suggested_constant": "MAGIC_CONSTANT_500000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300000,
      "current_context": "{\"id\": \"PRJ002\", \"name\": \"Process Automation\", \"status\": \"completed\", \"budget\": 300000, \"completion\": 1.0},",
      "suggested_constant": "MAGIC_CONSTANT_300000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 200000,
      "current_context": "{\"id\": \"PRJ003\", \"name\": \"Security Upgrade\", \"status\": \"planning\", \"budget\": 200000, \"completion\": 0.0}",
      "suggested_constant": "MAGIC_CONSTANT_200000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2000000,
      "current_context": "{\"id\": \"CC001\", \"name\": \"Engineering\", \"budget\": 2000000, \"actual\": 1950000},",
      "suggested_constant": "MAGIC_CONSTANT_2000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1950000,
      "current_context": "{\"id\": \"CC001\", \"name\": \"Engineering\", \"budget\": 2000000, \"actual\": 1950000},",
      "suggested_constant": "MAGIC_CONSTANT_1950000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "{\"id\": \"CC002\", \"name\": \"Sales\", \"budget\": 1000000, \"actual\": 1100000},",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1100000,
      "current_context": "{\"id\": \"CC002\", \"name\": \"Sales\", \"budget\": 1000000, \"actual\": 1100000},",
      "suggested_constant": "MAGIC_CONSTANT_1100000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 500000,
      "current_context": "{\"id\": \"CC003\", \"name\": \"Operations\", \"budget\": 500000, \"actual\": 450000}",
      "suggested_constant": "MAGIC_CONSTANT_500000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 450000,
      "current_context": "{\"id\": \"CC003\", \"name\": \"Operations\", \"budget\": 500000, \"actual\": 450000}",
      "suggested_constant": "MAGIC_CONSTANT_450000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 75000,
      "current_context": "employee[\"salary\"] = 75000 + (i * 5000)",
      "suggested_constant": "MAGIC_CONSTANT_75000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "employee[\"salary\"] = 75000 + (i * 5000)",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "if self.security.slsa_level not in [1, 2, 3, 4]:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "processing_time = data_size * 0.001  # Simulated processing time",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1247,
      "current_context": "\"auto_scaling_events\": 1247,",
      "suggested_constant": "MAGIC_CONSTANT_1247",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.002,
      "current_context": "processing_time = data_size * 0.002  # Slightly slower than cloud",
      "suggested_constant": "MAGIC_CONSTANT_0_002",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 23,
      "current_context": "\"vpn_connections\": 23",
      "suggested_constant": "CONFIG_VALUE_23",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 16777215,
      "current_context": "\"report_id\": f\"exec_report_{hash(str(parameters)) & 0xffffff:06x}\",",
      "suggested_constant": "MAGIC_CONSTANT_16777215",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 16777215,
      "current_context": "\"report_id\": f\"onprem_exec_{hash(str(parameters)) & 0xffffff:06x}\",",
      "suggested_constant": "MAGIC_CONSTANT_16777215",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "return user_hash < 50  # 50/50 split",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "if level.value >= 4:",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1000000,
      "current_context": "dpmo = (defects / opportunities) * 1_000_000",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "defect_rate = dpmo / 1_000_000",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.023,
      "current_context": "A2_values = {2: 1.880, 3: 1.023, 4: 0.729, 5: 0.577, 6: 0.483,",
      "suggested_constant": "MAGIC_CONSTANT_1_023",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.729,
      "current_context": "A2_values = {2: 1.880, 3: 1.023, 4: 0.729, 5: 0.577, 6: 0.483,",
      "suggested_constant": "MAGIC_CONSTANT_0_729",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.577,
      "current_context": "A2_values = {2: 1.880, 3: 1.023, 4: 0.729, 5: 0.577, 6: 0.483,",
      "suggested_constant": "MAGIC_CONSTANT_0_577",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.483,
      "current_context": "A2_values = {2: 1.880, 3: 1.023, 4: 0.729, 5: 0.577, 6: 0.483,",
      "suggested_constant": "MAGIC_CONSTANT_0_483",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.419,
      "current_context": "7: 0.419, 8: 0.373, 9: 0.337, 10: 0.308}",
      "suggested_constant": "MAGIC_CONSTANT_0_419",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.373,
      "current_context": "7: 0.419, 8: 0.373, 9: 0.337, 10: 0.308}",
      "suggested_constant": "MAGIC_CONSTANT_0_373",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.337,
      "current_context": "7: 0.419, 8: 0.373, 9: 0.337, 10: 0.308}",
      "suggested_constant": "MAGIC_CONSTANT_0_337",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.308,
      "current_context": "7: 0.419, 8: 0.373, 9: 0.337, 10: 0.308}",
      "suggested_constant": "MAGIC_CONSTANT_0_308",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.577,
      "current_context": "A2 = A2_values.get(self.subgroup_size, 0.577)",
      "suggested_constant": "MAGIC_CONSTANT_0_577",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "if stability_ratio >= 0.9:",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "if beyond_1sigma >= 4:",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if len(chart.data_points) < 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "elif stability_ratio >= 0.7:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.67,
      "current_context": "elif cpk >= 1.67:",
      "suggested_constant": "MAGIC_CONSTANT_1_67",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "defect_rate = max(0, random.normalvariate(0.001, 0.0005))",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.0005,
      "current_context": "defect_rate = max(0, random.normalvariate(0.001, 0.0005))",
      "suggested_constant": "MAGIC_CONSTANT_0_0005",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6,
      "current_context": "cp = (usl - lsl) / (6 * std_dev) if usl and lsl else 0",
      "suggested_constant": "MAGIC_CONSTANT_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.33,
      "current_context": "elif cpk >= 1.33:",
      "suggested_constant": "MAGIC_CONSTANT_1_33",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "assert avg_time < 0.1, f\"Average analysis too slow: {avg_time}s\"",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "await self.redis.setex(cache_key, 300, serialized)  # 5 min cache",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "def _detect_volatility_regime(self, returns: pd.Series, window: int = 20) -> pd.Series:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "def _mean_reversion_strength(self, prices: pd.Series, window: int = 20) -> pd.Series:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.94,
      "current_context": "def _adaptive_volatility(self, returns: pd.Series, alpha: float = 0.94) -> pd.Series:",
      "suggested_constant": "MAGIC_CONSTANT_0_94",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "flush_interval: float = 0.1  # 100ms",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.05,
      "current_context": "max_latency: float = 0.05   # 50ms target",
      "suggested_constant": "CONFIG_VALUE_0_05",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "processing_threads: int = 4",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 120,
      "current_context": "await asyncio.sleep(120)",
      "suggested_constant": "CONFIG_VALUE_120",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50.0,
      "current_context": "collector.record_processing_time(\"test_comp\", \"sample_op\", 50.0 + i, True)",
      "suggested_constant": "CONFIG_VALUE_50_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "await asyncio.sleep(0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "'put_call_ratio': np.random.uniform(0.5, 2.0)",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "def __init__(self, max_size: int = 10000, ttl_seconds: int = 300):",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 5000,
      "current_context": "def __init__(self, max_size: int = 5000, ttl_seconds: int = 60):",
      "suggested_constant": "CONFIG_VALUE_5000",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2.1,
      "current_context": "time.sleep(2.1)  # Wait for TTL expiration",
      "suggested_constant": "CONFIG_VALUE_2_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.75,
      "current_context": "test_prediction = {\"prediction\": 0.75, \"confidence\": 0.8}",
      "suggested_constant": "CONFIG_VALUE_0_75",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "current_context": "test_prediction = {\"prediction\": 0.75, \"confidence\": 0.8}",
      "suggested_constant": "CONFIG_VALUE_0_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "test_features = np.random.randn(50)",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 40,
      "current_context": "print(\"=\" * 40)",
      "suggested_constant": "CONFIG_VALUE_40",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "self.l1_cache = LRUCache(max_size=l1_size, default_ttl=300)  # 5 min TTL",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "ttl_seconds=config.get('prediction_cache_ttl', 300)",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 5000,
      "current_context": "max_size=config.get('feature_cache_size', 5000),",
      "suggested_constant": "CONFIG_VALUE_5000",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "def __init__(self, batch_size: int = 32, max_wait_ms: int = 50):",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.0001,
      "current_context": "'parameters': {'learning_rate': 1e-4}",
      "suggested_constant": "MAGIC_CONSTANT_0_0001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "if not self.request_queue.put(request, timeout=0.1):",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.5,
      "current_context": "confidence = float(output.confidence.item()) if hasattr(output, 'confidence') else 0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "request = self.request_queue.get(timeout=0.1)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.01,
      "current_context": "request = inference_engine.request_queue.get(timeout=0.01)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.5,
      "current_context": "batch_confidence = output.confidence if hasattr(output, 'confidence') else torch.ones_like(batch_preds) * 0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.05,
      "current_context": "def calculate_var(self, x: torch.Tensor, confidence_level: float = 0.05) -> torch.Tensor:",
      "suggested_constant": "MAGIC_CONSTANT_0_05",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.05,
      "current_context": "def calculate_expected_shortfall(self, x: torch.Tensor, confidence_level: float = 0.05) -> torch.Tensor:",
      "suggested_constant": "MAGIC_CONSTANT_0_05",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "def __init__(self, d_model: int, max_len: int = 5000):",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.02,
      "current_context": "noise = random.uniform(-0.02, 0.02)",
      "suggested_constant": "MAGIC_CONSTANT_0_02",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "adjusted_predictions = dpi_output.predictions * (1 + 0.1 * antifragility)",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.02,
      "current_context": "noise = random.uniform(-0.02, 0.02)",
      "suggested_constant": "MAGIC_CONSTANT_0_02",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.96,
      "current_context": "lower_bound = predictions - 1.96 * risk * (1 - confidence)",
      "suggested_constant": "CONFIG_VALUE_1_96",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.96,
      "current_context": "upper_bound = predictions + 1.96 * risk * (1 - confidence)",
      "suggested_constant": "CONFIG_VALUE_1_96",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 48,
      "current_context": "def __init__(self, input_dim: int, antifragile_dim: int = 48):",
      "suggested_constant": "MAGIC_CONSTANT_48",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.05,
      "current_context": "def calculate_var(self, x: torch.Tensor, confidence_level: float = 0.05) -> torch.Tensor:",
      "suggested_constant": "MAGIC_CONSTANT_0_05",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.05,
      "current_context": "def calculate_expected_shortfall(self, x: torch.Tensor, confidence_level: float = 0.05) -> torch.Tensor:",
      "suggested_constant": "MAGIC_CONSTANT_0_05",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.005,
      "current_context": "if confidence_level <= 0.005:",
      "suggested_constant": "MAGIC_CONSTANT_0_005",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.005,
      "current_context": "if confidence_level <= 0.005:",
      "suggested_constant": "MAGIC_CONSTANT_0_005",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "elif confidence_level <= 0.01:",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "elif confidence_level <= 0.01:",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 48,
      "current_context": "nn.Linear(32 + 24 + 48, hidden_dim),  # tail_dim + smile_dim + antifragile_dim",
      "suggested_constant": "MAGIC_CONSTANT_48",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.15,
      "current_context": "antifragility_weight=0.15",
      "suggested_constant": "MAGIC_CONSTANT_0_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.15,
      "current_context": "lstm_model = create_lstm_predictor(enable_dpi=True, antifragility_weight=0.15)",
      "suggested_constant": "MAGIC_CONSTANT_0_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 90,
      "current_context": "print(f\"  Target <90ms: {'' if ensemble_result['total_inference_time_ms'] < 90 else ''}\")",
      "suggested_constant": "MAGIC_CONSTANT_90",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "def get_high_gary_dpi_patterns(min_weight: float = 0.7) -> List[PatternCharacteristics]:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "def get_antifragile_patterns(min_factor: float = 0.6) -> List[PatternCharacteristics]:",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "taleb_antifragility_factor=0.8",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "taleb_antifragility_factor=0.8",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "taleb_antifragility_factor=0.6",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "taleb_antifragility_factor=0.6",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "max_bars=80,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.7,
      "current_context": "taleb_antifragility_factor=0.7",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "max_bars=80,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.7,
      "current_context": "taleb_antifragility_factor=0.7",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.4,
      "current_context": "taleb_antifragility_factor=0.4",
      "suggested_constant": "MAGIC_CONSTANT_0_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.4,
      "current_context": "taleb_antifragility_factor=0.4",
      "suggested_constant": "MAGIC_CONSTANT_0_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "taleb_antifragility_factor=0.3",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "taleb_antifragility_factor=0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "taleb_antifragility_factor=0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.4,
      "current_context": "taleb_antifragility_factor=0.4",
      "suggested_constant": "MAGIC_CONSTANT_0_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.4,
      "current_context": "taleb_antifragility_factor=0.4",
      "suggested_constant": "MAGIC_CONSTANT_0_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "taleb_antifragility_factor=0.3",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "taleb_antifragility_factor=0.3",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "taleb_antifragility_factor=0.6",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "taleb_antifragility_factor=0.6",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "taleb_antifragility_factor=0.7",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "taleb_antifragility_factor=0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "taleb_antifragility_factor=0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "taleb_antifragility_factor=0.8",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "taleb_antifragility_factor=0.8",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "taleb_antifragility_factor=0.6",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "nn.Conv2d(out_channels, out_channels // 4, 1),",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "nn.Linear(planes, planes // 4),",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.0001,
      "current_context": "'learning_rate': 1e-4,",
      "suggested_constant": "MAGIC_CONSTANT_0_0001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.05,
      "current_context": "significance_level: float = 0.05",
      "suggested_constant": "MAGIC_CONSTANT_0_05",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.99,
      "current_context": "if not (0.99 <= total_allocation <= 1.01):  # Allow small floating point errors",
      "suggested_constant": "MAGIC_CONSTANT_0_99",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.01,
      "current_context": "if not (0.99 <= total_allocation <= 1.01):  # Allow small floating point errors",
      "suggested_constant": "MAGIC_CONSTANT_1_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5001,
      "current_context": "return StandardError(code=5001, message=message, **kwargs)",
      "suggested_constant": "MAGIC_CONSTANT_5001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5001,
      "current_context": "return StandardError(code=5001, message=str(e), context=context or {})",
      "suggested_constant": "MAGIC_CONSTANT_5001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 8080,
      "current_context": "default=8080,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 8080 typically used in network_port context"
    },
    {
      "value": 300,
      "current_context": "\"timeout_seconds\": 300",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 120,
      "current_context": "\"timeout_seconds\": 120",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "timeout_seconds: int = 300",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 20,
      "current_context": "if category_dist[ViolationCategory.STYLE.value] > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "timeout: int = 300  # seconds",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 4,
      "current_context": "worker_threads: int = 4",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "connection_pool_size: int = 20",
      "suggested_constant": "CONFIG_VALUE_20",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "time.sleep(0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "current_context": "if confidence > 0.8:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "'sentiment_analysis': sentiment > 0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if len(self.metric_history) >= 20 and not self.baseline_established:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 800,
      "current_context": "memory_mb = random.uniform(100, 800)",
      "suggested_constant": "MAGIC_CONSTANT_800",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 90,
      "current_context": "cpu_percent = random.uniform(10, 90)",
      "suggested_constant": "MAGIC_CONSTANT_90",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "exec_time = random.uniform(0.1, 2.0)",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 70.0,
      "current_context": "if metrics.test_coverage < 70.0:",
      "suggested_constant": "MAGIC_CONSTANT_70_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80.0,
      "current_context": "<div class=\"metric-value\" style=\"color: {get_status_color(metrics.test_coverage, 80.0)}\">",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80.0 typically used in network_port context"
    },
    {
      "value": 4,
      "current_context": "with ThreadPoolExecutor(max_workers=4) as executor:",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "elif failed_tests > len(integration_tests) * 0.5:  # More than 50% tests failed",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 42,
      "current_context": "if value in [True, False, None, \"success\", \"OK\", \"done\", 42]:",
      "suggested_constant": "MAGIC_CONSTANT_42",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "def create_kelly_calculator(dpi_lookback: int = 20) -> KellyCriterionCalculator:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "elif dpi_value < 0.3:",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.015,
      "current_context": "average_loss=0.015,",
      "suggested_constant": "MAGIC_CONSTANT_0_015",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50.0,
      "current_context": "\"target_met\": np.mean(times) < 50.0,",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.94,
      "current_context": "def _calculate_ewma_volatility(self, returns: np.ndarray, lambda_param: float = 0.94) -> float:",
      "suggested_constant": "MAGIC_CONSTANT_0_94",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "if len(input_data.historical_returns) < 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.2,
      "current_context": "risk_result.var *= 1.2  # 20% buffer",
      "suggested_constant": "CONFIG_VALUE_1_2",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.2,
      "current_context": "risk_result.cvar *= 1.2",
      "suggested_constant": "CONFIG_VALUE_1_2",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "return len(data.historical_returns) >= 20",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "if not (0.8 <= input_data.confidence_level <= 0.99):",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.99,
      "current_context": "if not (0.8 <= input_data.confidence_level <= 0.99):",
      "suggested_constant": "MAGIC_CONSTANT_0_99",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 44,
      "current_context": "if len(otp) == 44 and otp.startswith(expected_prefix):",
      "suggested_constant": "MAGIC_CONSTANT_44",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "await asyncio.sleep(0.5)  # Simulate TouchID delay",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.2,
      "current_context": "return await asyncio.wait_for(self.broker.get_positions(), timeout=0.2)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.3,
      "current_context": "timeout=0.3",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.999,
      "current_context": "'availability_target': 0.999,  # 99.9% uptime",
      "suggested_constant": "MAGIC_CONSTANT_0_999",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.999,
      "current_context": "target = self.config.get('availability_target', 0.999)",
      "suggested_constant": "MAGIC_CONSTANT_0_999",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.999,
      "current_context": "target_availability = self.config.get('availability_target', 0.999)",
      "suggested_constant": "MAGIC_CONSTANT_0_999",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "elif health_ratio >= 0.5:",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.999,
      "current_context": "sla_target: float = 0.999",
      "suggested_constant": "MAGIC_CONSTANT_0_999",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.999,
      "current_context": "self.sla_target = self.config.get('sla_target', 0.999)  # 99.9% default",
      "suggested_constant": "CONFIG_VALUE_0_999",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "if int(time.time()) % 300 == 0:  # Every 5 minutes",
      "suggested_constant": "MAGIC_CONSTANT_300",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 17280,
      "current_context": "lambda: deque(maxlen=self.config.get('max_samples', 17280))  # 24h at 5s intervals",
      "suggested_constant": "CONFIG_VALUE_17280",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90,
      "current_context": "if 'memory_usage' in failure_context and failure_context['memory_usage'] > 90:",
      "suggested_constant": "MAGIC_CONSTANT_90",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 95,
      "current_context": "if 'cpu_usage' in failure_context and failure_context['cpu_usage'] > 95:",
      "suggested_constant": "MAGIC_CONSTANT_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 95,
      "current_context": "if 'disk_usage' in failure_context and failure_context['disk_usage'] > 95:",
      "suggested_constant": "CONFIG_VALUE_95",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 900,
      "current_context": "SESSION_TIMEOUT = 900  # 15 minutes",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "await asyncio.sleep(300)  # Run every 5 minutes",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "if entry[\"timestamp\"] > (time.time() - 300)  # Last 5 minutes",
      "suggested_constant": "MAGIC_CONSTANT_300",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 384,
      "current_context": "key_file.chmod(0o600)  # Restrict permissions",
      "suggested_constant": "CONFIG_VALUE_384",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90,
      "current_context": "return intervals.get(classification, 90 * 24 * 3600)",
      "suggested_constant": "CONFIG_VALUE_90",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "monitoring_interval: int = 300) -> bool:",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2555,
      "current_context": "\"retention_days\": 2555,",
      "suggested_constant": "MAGIC_CONSTANT_2555",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "\"drift_detection_interval\": 300,  # 5 minutes",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 900,
      "current_context": "\"timeout\": 900",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 2555,
      "current_context": "\"retention_days\": 2555,  # 7 years",
      "suggested_constant": "MAGIC_CONSTANT_2555",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 900,
      "current_context": "\"timeout\": 900",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 21600,
      "current_context": "discovery_interval = 21600  # 6 hours",
      "suggested_constant": "CONFIG_VALUE_21600",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1800,
      "current_context": "\"assessment_interval\": 1800,  # 30 minutes",
      "suggested_constant": "CONFIG_VALUE_1800",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1800,
      "current_context": "\"update_interval\": 1800,  # More frequent updates for commercial feeds",
      "suggested_constant": "CONFIG_VALUE_1800",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "\"update_interval\": 300,  # 5 minutes for internal feeds",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.2,
      "current_context": "if change >= 0.2  # 20% increase",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "self.executor = ThreadPoolExecutor(max_workers=4)",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "elif lines < 300:",
      "suggested_constant": "MAGIC_CONSTANT_300",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "{\"defects\": 5, \"opportunities\": 1000000, \"expected_dpmo\": 5.0},",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 500000,
      "current_context": "{\"defects\": 10, \"opportunities\": 500000, \"expected_dpmo\": 20.0},",
      "suggested_constant": "MAGIC_CONSTANT_500000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "{\"defects\": 1, \"opportunities\": 1000000, \"expected_dpmo\": 1.0}",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "\"within_spec\": overhead_per_call < 0.01,  # <0.01ms per call",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "\"within_spec\": eval_per_call_ms < 0.1,  # <0.1ms per evaluation",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "\"effective\": protection_rate >= 0.95,",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "\"functional\": completeness >= 0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "\"functional\": init_successful and component_completeness >= 0.8",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2555,
      "current_context": "'access_log_retention_days': 2555,",
      "suggested_constant": "MAGIC_CONSTANT_2555",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6,
      "current_context": "with ThreadPoolExecutor(max_workers=6) as executor:",
      "suggested_constant": "CONFIG_VALUE_6",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90,
      "current_context": "key_rotation_interval: int = 90  # days",
      "suggested_constant": "CONFIG_VALUE_90",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1095,
      "current_context": "\"CUI//BASIC\": 1095,      # 3 years",
      "suggested_constant": "MAGIC_CONSTANT_1095",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2555,
      "current_context": "\"CUI//SP-PRIV\": 2555,   # 7 years",
      "suggested_constant": "MAGIC_CONSTANT_2555",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1825,
      "current_context": "\"CUI//SP-PROP\": 1825,   # 5 years",
      "suggested_constant": "MAGIC_CONSTANT_1825",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3650,
      "current_context": "\"CUI//SP-EXPT\": 3650    # 10 years",
      "suggested_constant": "MAGIC_CONSTANT_3650",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 70,
      "current_context": "if 'cpu_usage' in baseline_summary and baseline_summary['cpu_usage']['mean'] > 70:",
      "suggested_constant": "MAGIC_CONSTANT_70",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 72,
      "current_context": "(datetime.now() - incident.timestamp).total_seconds() > 72 * 3600)",
      "suggested_constant": "MAGIC_CONSTANT_72",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 72,
      "current_context": "self.notification_timeout = timedelta(hours=72)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 2190,
      "current_context": "base_retention = max(base_retention, 2190)  # 6 years for PHI",
      "suggested_constant": "MAGIC_CONSTANT_2190",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2555,
      "current_context": "base_retention = max(base_retention, 2555)  # 7 years for PII",
      "suggested_constant": "MAGIC_CONSTANT_2555",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2555,
      "current_context": "self.access_log_retention_days = config.get('access_log_retention_days', 2555)  # 7 years",
      "suggested_constant": "MAGIC_CONSTANT_2555",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "return result['success_rate'] >= 0.95",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "\"completed\" if success_rate >= 0.95 else \"partial_completion\"",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 7.5,
      "current_context": "if self._calculate_entropy(header) > 7.5:",
      "suggested_constant": "MAGIC_CONSTANT_7_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 65537,
      "current_context": "public_exponent=65537,",
      "suggested_constant": "MAGIC_CONSTANT_65537",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 14400,
      "current_context": "SLA_MEDIUM = 14400     # 4 hours",
      "suggested_constant": "MAGIC_CONSTANT_14400",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "\"emergency_escalation_delay\": 300,  # 5 minutes",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 900,
      "current_context": "\"critical_escalation_delay\": 900,   # 15 minutes",
      "suggested_constant": "CONFIG_VALUE_900",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 172800,
      "current_context": "estimated_time_to_resolve=172800,  # 48 hours",
      "suggested_constant": "MAGIC_CONSTANT_172800",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1800,
      "current_context": "estimated_time_to_contain=1800,  # 30 minutes",
      "suggested_constant": "MAGIC_CONSTANT_1800",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 43200,
      "current_context": "estimated_time_to_resolve=43200,  # 12 hours",
      "suggested_constant": "MAGIC_CONSTANT_43200",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 604800,
      "current_context": "estimated_time_to_resolve=604800,  # 7 days",
      "suggested_constant": "MAGIC_CONSTANT_604800",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 7200,
      "current_context": "ttl=7200,  # 2 hours",
      "suggested_constant": "MAGIC_CONSTANT_7200",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 14400,
      "current_context": "ttl=14400,  # 4 hours",
      "suggested_constant": "MAGIC_CONSTANT_14400",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1800,
      "current_context": "time.sleep(1800)",
      "suggested_constant": "CONFIG_VALUE_1800",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1000000,
      "current_context": "test_opportunities = 1000000",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)  # 1ms baseline",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1000000,
      "current_context": "test_opportunities = 1000000",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "expected_dpmo = (test_defects / test_opportunities) * 1000000  # Should be 5.0",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6210,
      "current_context": "test_dpmo_values = [3.4, 233, 6210, 66807, 308537]",
      "suggested_constant": "MAGIC_CONSTANT_6210",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 66807,
      "current_context": "test_dpmo_values = [3.4, 233, 6210, 66807, 308537]",
      "suggested_constant": "MAGIC_CONSTANT_66807",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 308537,
      "current_context": "test_dpmo_values = [3.4, 233, 6210, 66807, 308537]",
      "suggested_constant": "MAGIC_CONSTANT_308537",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001 + (claimed_overhead / 100 * 0.001))  # Add claimed overhead",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.005,
      "current_context": "accurate_measurement = 0.005 <= measured_time <= 0.015",
      "suggested_constant": "MAGIC_CONSTANT_0_005",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.015,
      "current_context": "accurate_measurement = 0.005 <= measured_time <= 0.015",
      "suggested_constant": "MAGIC_CONSTANT_0_015",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001 + (claimed_overhead / 100 * 0.001))  # Add claimed overhead",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "execution_time=0.001,  # Minimal time for calculation",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "passed=abs(actual_dpmo - expected_dpmo) < 0.01,",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "passed=abs(actual_rty - expected_rty) < 0.01,",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "execution_time=0.001,",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 100000,
      "current_context": "def derive_key(self, password: bytes, salt: bytes, iterations: int = 100000,",
      "suggested_constant": "MAGIC_CONSTANT_100000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 65537,
      "current_context": "public_exponent=65537,",
      "suggested_constant": "MAGIC_CONSTANT_65537",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3072,
      "current_context": "'RSA-3072': {'key_size': 3072, 'padding': 'OAEP'},",
      "suggested_constant": "MAGIC_CONSTANT_3072",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "\"critical\": {\"notify_within_minutes\": 15, \"escalate_after_hours\": 2},",
      "suggested_constant": "MAGIC_CONSTANT_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "\"high\": {\"notify_within_minutes\": 30, \"escalate_after_hours\": 4},",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 240,
      "current_context": "\"low\": {\"notify_within_minutes\": 240, \"escalate_after_hours\": 24}",
      "suggested_constant": "MAGIC_CONSTANT_240",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "await asyncio.sleep(300)  # Check every 5 minutes",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 120,
      "current_context": "await asyncio.sleep(120)  # Check every 2 minutes",
      "suggested_constant": "CONFIG_VALUE_120",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 600,
      "current_context": "await asyncio.sleep(600)  # Check every 10 minutes",
      "suggested_constant": "CONFIG_VALUE_600",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 900,
      "current_context": "await asyncio.sleep(900)  # Check every 15 minutes",
      "suggested_constant": "CONFIG_VALUE_900",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "await asyncio.sleep(300)  # Wait longer on error",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 600,
      "current_context": "await asyncio.sleep(600)",
      "suggested_constant": "CONFIG_VALUE_600",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "await asyncio.sleep(300)",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 900,
      "current_context": "await asyncio.sleep(900)",
      "suggested_constant": "CONFIG_VALUE_900",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1200,
      "current_context": "await asyncio.sleep(1200)",
      "suggested_constant": "CONFIG_VALUE_1200",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1800,
      "current_context": "await asyncio.sleep(1800)",
      "suggested_constant": "CONFIG_VALUE_1800",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "async def _run_command(self, cmd: List[str], timeout: int = 300, cwd: Path = None) -> subprocess.CompletedProcess:",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 180,
      "current_context": "\"timeout\": 180,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 120,
      "current_context": "\"timeout\": 120,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 90,
      "current_context": "validity_days: int = 90) -> TLSCertificate:",
      "suggested_constant": "MAGIC_CONSTANT_90",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 420,
      "current_context": "os.chmod(permanent_cert, 0o644)  # Certificate readable by all",
      "suggested_constant": "MAGIC_CONSTANT_420",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "\"session_timeout\": 300",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.95,
      "current_context": "if percentage >= 0.95:",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "elif percentage >= 0.80:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "elif percentage >= 0.60:",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1433,
      "current_context": "self.common_vulnerable_ports = [21, 23, 53, 135, 139, 445, 1433, 3389]",
      "suggested_constant": "MAGIC_CONSTANT_1433",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3389,
      "current_context": "self.common_vulnerable_ports = [21, 23, 53, 135, 139, 445, 1433, 3389]",
      "suggested_constant": "MAGIC_CONSTANT_3389",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1433,
      "current_context": "139: \"NetBIOS\", 445: \"SMB\", 1433: \"SQL Server\", 3389: \"RDP\"",
      "suggested_constant": "MAGIC_CONSTANT_1433",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3389,
      "current_context": "139: \"NetBIOS\", 445: \"SMB\", 1433: \"SQL Server\", 3389: \"RDP\"",
      "suggested_constant": "MAGIC_CONSTANT_3389",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3389,
      "current_context": "if 3389 in open_ports:",
      "suggested_constant": "MAGIC_CONSTANT_3389",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 21,
      "current_context": "if 21 in open_ports or 23 in open_ports:",
      "suggested_constant": "MAGIC_CONSTANT_21",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 23,
      "current_context": "if 21 in open_ports or 23 in open_ports:",
      "suggested_constant": "MAGIC_CONSTANT_23",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1048575,
      "current_context": "scan_id = f\"vuln_scan_{int(start_time)}_{hash(target) & 0xfffff:05x}\"",
      "suggested_constant": "MAGIC_CONSTANT_1048575",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1048575,
      "current_context": "scan_id = f\"network_scan_{int(start_time)}_{hash(target) & 0xfffff:05x}\"",
      "suggested_constant": "MAGIC_CONSTANT_1048575",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "target_yield: float = 0.95) -> None:",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "if rty < 0.95:",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "dpmo = (total_weighted_defects * 1_000_000) / total_opportunities",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6210,
      "current_context": "<div class=\"value {'pass' if metrics.dpmo < 6210 else 'fail'}\">{metrics.dpmo:,.0f}</div>",
      "suggested_constant": "MAGIC_CONSTANT_6210",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "<div class=\"value {'pass' if metrics.rty > 0.95 else 'fail'}\">{metrics.rty:.2%}</div>",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4.0,
      "current_context": "<div class=\"value {'pass' if metrics.sigma_level >= 4.0 else 'fail'}\">{metrics.sigma_level}</div>",
      "suggested_constant": "MAGIC_CONSTANT_4_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6210,
      "current_context": "writer.writerow(['DPMO', metrics.dpmo, '<6210', 'PASS' if metrics.dpmo < 6210 else 'FAIL'])",
      "suggested_constant": "MAGIC_CONSTANT_6210",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "writer.writerow(['RTY', f\"{metrics.rty:.2%}\", '>95%', 'PASS' if metrics.rty > 0.95 else 'FAIL'])",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4.0,
      "current_context": "writer.writerow(['Sigma Level', metrics.sigma_level, '4.0', 'PASS' if metrics.sigma_level >= 4.0 else 'FAIL'])",
      "suggested_constant": "MAGIC_CONSTANT_4_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "<p>Yield: <strong class=\"{'pass' if yield_rate > 0.95 else 'fail'}\">{yield_rate:.2%}</strong></p>",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.0001,
      "current_context": "drift = 0.0001",
      "suggested_constant": "MAGIC_CONSTANT_0_0001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "volume_base = 1000000",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "def create_dpi_calculator(lookback_periods: int = 20) -> DistributionalPressureIndex:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "bias = 0.5 + np.tanh(momentum_difference * 10) * 0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "bias = 0.5 + np.tanh(momentum_difference * 10) * 0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50.0,
      "current_context": "\"target_met\": np.mean(times) < 50.0",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "return 0.5, components",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.005,
      "current_context": "'high': prices * (1 + np.abs(np.random.normal(0, 0.005, periods))),",
      "suggested_constant": "MAGIC_CONSTANT_0_005",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.005,
      "current_context": "'low': prices * (1 - np.abs(np.random.normal(0, 0.005, periods))),",
      "suggested_constant": "MAGIC_CONSTANT_0_005",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "\"hit_rate\": min(0.95, 0.85 + variance),",
      "suggested_constant": "CONFIG_VALUE_0_95",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.98,
      "current_context": "\"efficiency\": min(0.98, 0.92 + variance)",
      "suggested_constant": "CONFIG_VALUE_0_98",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.8,
      "current_context": "\"analysis_speed\": 1.8 * (1 + variance),",
      "suggested_constant": "CONFIG_VALUE_1_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.4,
      "current_context": "\"memory_efficiency\": 1.4 * (1 - variance),",
      "suggested_constant": "CONFIG_VALUE_1_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2.1,
      "current_context": "\"cache_effectiveness\": 2.1 * (1 + variance)",
      "suggested_constant": "CONFIG_VALUE_2_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 300,
      "current_context": "time.sleep(300)  # 5 minute retry on error",
      "suggested_constant": "DEFAULT_RETRY_COUNT",
      "justification": "Operational parameter that may need tuning"
    },
    {
      "value": 0.85,
      "current_context": "\"hit_rate\": min(0.95, 0.85 + variance),",
      "suggested_constant": "CONFIG_VALUE_0_85",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.92,
      "current_context": "\"efficiency\": min(0.98, 0.92 + variance)",
      "suggested_constant": "CONFIG_VALUE_0_92",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.003,
      "current_context": "\"percentage\": max(0.05, 0.08 - 0.003 * (base_time.day % 10) / 10)",
      "suggested_constant": "MAGIC_CONSTANT_0_003",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.005,
      "current_context": "\"false_positive_rate\": max(0.10, 0.15 - 0.005 * (base_time.day % 10))",
      "suggested_constant": "MAGIC_CONSTANT_0_005",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.006,
      "current_context": "\"maintainability\": min(0.80, 0.72 + 0.006 * (base_time.day % 14))",
      "suggested_constant": "MAGIC_CONSTANT_0_006",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.4,
      "current_context": "if reduction_rate > 0.40:",
      "suggested_constant": "MAGIC_CONSTANT_0_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "if file_data.get(\"complexity_increase\", 0) > 0.10:",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "if god_data.get(\"coupling_increase\", 0) > 0.10:",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "if file_data.get(\"maintainability_improvement\", 0) >= 0.10:",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.15,
      "current_context": "if file_data.get(\"duplication_reduction\", 0) >= 0.15:",
      "suggested_constant": "MAGIC_CONSTANT_0_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.08,
      "current_context": "if file_data.get(\"coupling_improvement\", 0) >= 0.08:",
      "suggested_constant": "MAGIC_CONSTANT_0_08",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.15,
      "current_context": "if doc_data.get(\"clarity_improvement\", 0) >= 0.15:",
      "suggested_constant": "MAGIC_CONSTANT_0_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "if ux_data.get(\"user_satisfaction_increase\", 0) >= 0.20:",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "if god_data.get(\"complexity_improvement\", 0) >= 0.20:",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.15,
      "current_context": "if god_data.get(\"maintainability_improvement\", 0) >= 0.15:",
      "suggested_constant": "MAGIC_CONSTANT_0_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "if reduction_rate > 0.20 and maintainability < 0.03:",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.03,
      "current_context": "if reduction_rate > 0.20 and maintainability < 0.03:",
      "suggested_constant": "MAGIC_CONSTANT_0_03",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.25,
      "current_context": "if reduction > 0.25 and complexity_improvement < 0.05:",
      "suggested_constant": "MAGIC_CONSTANT_0_25",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.05,
      "current_context": "if reduction > 0.25 and complexity_improvement < 0.05:",
      "suggested_constant": "MAGIC_CONSTANT_0_05",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "if operations_count > 0 and syntax_only_changes / operations_count > 0.70:",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.005,
      "current_context": "no_opportunity = abs(price_change) < 0.005",
      "suggested_constant": "MAGIC_CONSTANT_0_005",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.05,
      "current_context": "return abs(price_change) > 0.05  # 5% move triggers adjustment",
      "suggested_constant": "MAGIC_CONSTANT_0_05",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "trade_signal = abs(price_change) > 0.01 and volume > 10000",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "file_weight: float = 0.6,",
      "suggested_constant": "CONFIG_VALUE_0_6",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.4,
      "current_context": "incremental_weight: float = 0.4) -> CacheHealthMetrics:",
      "suggested_constant": "CONFIG_VALUE_0_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "if combined_hit_rate < 0.5:",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "current_context": "if combined_memory_utilization > 0.9:",
      "suggested_constant": "CONFIG_VALUE_0_9",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.7,
      "current_context": "elif combined_hit_rate < 0.7:",
      "suggested_constant": "CONFIG_VALUE_0_7",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.3,
      "current_context": "elif combined_memory_utilization < 0.3:",
      "suggested_constant": "CONFIG_VALUE_0_3",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.2,
      "current_context": "if file_hit_rate < incremental_hit_rate - 0.2:",
      "suggested_constant": "CONFIG_VALUE_0_2",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.2,
      "current_context": "elif incremental_hit_rate < file_hit_rate - 0.2:",
      "suggested_constant": "CONFIG_VALUE_0_2",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "current_context": "def create_mock_results(count: int = 5, success_rate: float = 0.8) -> List[Dict[str, Any]]:",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.75,
      "current_context": "def create_cache_mock(hit_rate: float = 0.75) -> Mock:",
      "suggested_constant": "CONFIG_VALUE_0_75",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 75,
      "current_context": "hits=75,",
      "suggested_constant": "CONFIG_VALUE_75",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 25,
      "current_context": "misses=25,",
      "suggested_constant": "CONFIG_VALUE_25",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "change_summary = self._truncate(row.get('change_summary', ''), 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 9,
      "current_context": "if len(parts) >= 9 and parts[0] != 'Version':  # Skip header",
      "suggested_constant": "MAGIC_CONSTANT_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "'artifacts_changed': parts[4],",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "return len(added) > 20",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "'change_summary': self._truncate(change_summary, 80),",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 9,
      "current_context": "if len(cells) >= 9:",
      "suggested_constant": "MAGIC_CONSTANT_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "change_summary=change_summary[:80] if change_summary else \"\u2014\",",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 4,
      "current_context": "'artifacts_changed': cells[4],",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "f\"{self.change_summary[:80]} | {artifacts} | {self.status} | \"",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 4,
      "current_context": "'parallel_workers': 4,",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 3.4,
      "current_context": "if dpmo <= 3.4:",
      "suggested_constant": "MAGIC_CONSTANT_3_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "dpmo = defect_rate * 1_000_000",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 233,
      "current_context": "elif dpmo <= 233:",
      "suggested_constant": "MAGIC_CONSTANT_233",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6210,
      "current_context": "elif dpmo <= 6210:",
      "suggested_constant": "MAGIC_CONSTANT_6210",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 66807,
      "current_context": "elif dpmo <= 66807:",
      "suggested_constant": "MAGIC_CONSTANT_66807",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4.7,
      "current_context": "status = \"PASS\" if overall_impact < 4.7 else \"FAIL\"",
      "suggested_constant": "MAGIC_CONSTANT_4_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 308537,
      "current_context": "elif dpmo <= 308537:",
      "suggested_constant": "MAGIC_CONSTANT_308537",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.03,
      "current_context": "await asyncio.sleep(0.03)  # 30ms delay",
      "suggested_constant": "CONFIG_VALUE_0_03",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "current_context": "await asyncio.sleep(0.01)  # 10ms per close",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)  # Simulate work",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "current_context": "time.sleep(0.01)",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.015,
      "current_context": "average_loss=0.015,",
      "suggested_constant": "MAGIC_CONSTANT_0_015",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if calc_time < 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "if calc_time < 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.002,
      "current_context": "returns = np.random.normal(0.002, 0.02, 252)  # 1 year of daily returns",
      "suggested_constant": "MAGIC_CONSTANT_0_002",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.025,
      "current_context": "average_win=0.025,",
      "suggested_constant": "MAGIC_CONSTANT_0_025",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.018,
      "current_context": "average_loss=0.018,",
      "suggested_constant": "MAGIC_CONSTANT_0_018",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.015,
      "current_context": "average_loss=0.015,",
      "suggested_constant": "MAGIC_CONSTANT_0_015",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "dpi_target_met = dpi_avg_time < 50 and dpi_max_time < 100",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "kelly_target_met = kelly_avg_time < 50 and kelly_max_time < 100",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "returns = np.random.normal(0.001, 0.02, 50)",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.52,
      "current_context": "win_rate=0.52 + np.random.uniform(-0.1, 0.1),",
      "suggested_constant": "MAGIC_CONSTANT_0_52",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.015,
      "current_context": "average_win=0.015 + np.random.uniform(0, 0.01),",
      "suggested_constant": "MAGIC_CONSTANT_0_015",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.012,
      "current_context": "average_loss=0.012 + np.random.uniform(0, 0.01),",
      "suggested_constant": "MAGIC_CONSTANT_0_012",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "win_rate=0.52 + np.random.uniform(-0.1, 0.1),",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "average_win=0.015 + np.random.uniform(0, 0.01),",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "average_loss=0.012 + np.random.uniform(0, 0.01),",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "win_rate=0.52 + np.random.uniform(-0.1, 0.1),",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "def __init__(self, position_count=5, delay_ms=50):",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "{'positions': 3, 'delay_ms': 20, 'name': 'Light Load'},",
      "suggested_constant": "CONFIG_VALUE_20",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "{'positions': 20, 'delay_ms': 40, 'name': 'Heavy Load'},",
      "suggested_constant": "CONFIG_VALUE_20",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 40,
      "current_context": "{'positions': 20, 'delay_ms': 40, 'name': 'Heavy Load'},",
      "suggested_constant": "CONFIG_VALUE_40",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1000000,
      "current_context": "large_data = [0] * 1000000  # 1M integers",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6,
      "current_context": "min_detectors = 6 if use_real_pool else 4",
      "suggested_constant": "CONFIG_VALUE_6",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "min_detectors = 6 if use_real_pool else 4",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "monitor = RealTimePerformanceMonitor(monitoring_interval=0.5)",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "time.sleep(0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.8,
      "current_context": "return {\"hit_rate\": 0.8, \"pool_size\": 8}",
      "suggested_constant": "CONFIG_VALUE_0_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 6210,
      "current_context": "expected_dpmo = 6210  # 4-sigma level",
      "suggested_constant": "MAGIC_CONSTANT_6210",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.5,
      "current_context": "self.assertEqual(sigma_shift, 1.5)",
      "suggested_constant": "MAGIC_CONSTANT_1_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 66807,
      "current_context": "3.0: 66807,",
      "suggested_constant": "MAGIC_CONSTANT_66807",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 22750,
      "current_context": "3.5: 22750,",
      "suggested_constant": "MAGIC_CONSTANT_22750",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6210,
      "current_context": "4.0: 6210,",
      "suggested_constant": "MAGIC_CONSTANT_6210",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1350,
      "current_context": "4.5: 1350,",
      "suggested_constant": "MAGIC_CONSTANT_1350",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "'max_analysis_time_seconds': 300,",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "'parallel_workers': 4,",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 6210,
      "current_context": "'defects_per_million_opportunities': 6210",
      "suggested_constant": "MAGIC_CONSTANT_6210",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"\\\\n\" + \"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"\\\\n\" + \"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 20,
      "current_context": "if method_count > 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "elif file_count <= 20:",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.8,
      "current_context": "'performance_overhead_target': 1.8,",
      "suggested_constant": "CONFIG_VALUE_1_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "self.executor = ThreadPoolExecutor(max_workers=4)",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.583,
      "current_context": "baseline_comparison[suite_name] = 0.583  # Mock improvement",
      "suggested_constant": "MAGIC_CONSTANT_0_583",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.583,
      "current_context": "if improvement < 0.583:  # Below target improvement",
      "suggested_constant": "MAGIC_CONSTANT_0_583",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "'passed': performance_improvement > 0.2,  # At least 20% improvement",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "assert len(builders) >= 4, f\"Expected 4+ builders, found {len(builders)}\"",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 5000,
      "current_context": "if response_time > 5000:  # 5 seconds",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 90,
      "current_context": "if retention_days < 90:",
      "suggested_constant": "MAGIC_CONSTANT_90",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1500,
      "current_context": "\"response_time_ms\": 1500,",
      "suggested_constant": "MAGIC_CONSTANT_1500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2000,
      "current_context": "elif response_time > 2000:  # 2 seconds",
      "suggested_constant": "MAGIC_CONSTANT_2000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 15,
      "current_context": "15: {",
      "suggested_constant": "CONFIG_VALUE_15",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80.0,
      "current_context": "if result.cop_reduction_percentage < 80.0:",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80.0 typically used in network_port context"
    },
    {
      "value": 4,
      "current_context": "self.executor = ThreadPoolExecutor(max_workers=4)",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "if result.cop_reduction_percentage < 80:",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.5,
      "current_context": "def simulate_malicious_behavior(self, attack_type: str, intensity: float = 0.5) -> Dict[str, Any]:",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "def simulate_cascade_failures(self, failure_rate: float = 0.2) -> Dict[str, Any]:",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "assert results['malicious_detection_rate'] > 0.7, f\"Detection rate too low: {results['malicious_detection_rate']}\"",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "assert results['success_rate'] > 0.7, f\"Success rate too low under load: {results['success_rate']}\"",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.1,
      "current_context": "time.sleep(0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.7,
      "current_context": "'system_performance_maintained': completed_tests / concurrent_tests > 0.7",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "if success_rate > 0.9:",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "r.get('detection_rate', 0) > 0.8 for r in malicious_test_results.values()",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "lock_sequence=[f\"lock_{j}\" for j in range(random.randint(1, 4))],",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "current_context": "file_weight = 0.6",
      "suggested_constant": "CONFIG_VALUE_0_6",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.4,
      "current_context": "incremental_weight = 0.4",
      "suggested_constant": "CONFIG_VALUE_0_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "current_context": "if combined_hit_rate < 0.6:",
      "suggested_constant": "CONFIG_VALUE_0_6",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90,
      "current_context": "if readiness_percentage >= 90:",
      "suggested_constant": "MAGIC_CONSTANT_90",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "return readiness_percentage >= 80",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 70,
      "current_context": "print(\"=\"*70)",
      "suggested_constant": "CONFIG_VALUE_70",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.35,
      "current_context": "\"cache_efficiency\": 0.35,",
      "suggested_constant": "CONFIG_VALUE_0_35",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.45,
      "current_context": "\"memory_utilization\": 0.45",
      "suggested_constant": "CONFIG_VALUE_0_45",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 75,
      "current_context": "elif readiness_percentage >= 75:",
      "suggested_constant": "MAGIC_CONSTANT_75",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "comprehensive_results[\"production_readiness\"][\"status\"] = \"passed\" if readiness_percentage >= 80 else \"failed\"",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 70,
      "current_context": "print(\"\\n\" + \"=\"*70)",
      "suggested_constant": "CONFIG_VALUE_70",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.7,
      "current_context": "\"cache_efficiency\": stats.hit_rate() * (1 - abs((memory_usage[\"utilization_percent\"] / 100.0) - 0.7)),",
      "suggested_constant": "CONFIG_VALUE_0_7",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "current_context": "if hit_rate < 0.6:",
      "suggested_constant": "CONFIG_VALUE_0_6",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "current_context": "await asyncio.sleep(0.01)  # Simulate work",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.95,
      "current_context": "targets['high_success_rate'] = current.get('success_rate', 0) >= 0.95",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "if concurrent_load.get('success_rate', 0) < 0.95:",
      "suggested_constant": "MAGIC_CONSTANT_0_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "if integration_success_rate < 0.90:",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "targets['performance_improvement_target'] = improvement >= 0.50  # Allow some tolerance",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "targets['throughput_maintained'] = current_throughput >= baseline_throughput * 0.9  # 90% of baseline",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.5,
      "current_context": "should_fail = (self.call_count * self.fail_rate) % 1 >= 0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "await asyncio.sleep(0.01)  # Simulate async work",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 40,
      "current_context": "assert 10 <= rollout_percentage <= 40  # Allow for hash-based variance",
      "suggested_constant": "MAGIC_CONSTANT_40",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "assert rollout_percentage_phase2 >= 50  # Should be closer to 75%",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "await asyncio.sleep(0.1)  # Simulate analysis time",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.1,
      "current_context": "assert phase2_dpmo <= phase1_dpmo * 1.1  # Allow for some variance",
      "suggested_constant": "MAGIC_CONSTANT_1_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "assert overhead < 0.1  # Less than 100ms overhead for 100 calls",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "await asyncio.sleep(0.01)  # Simulate async work",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.05,
      "current_context": "await asyncio.sleep(0.05)  # Longer simulation",
      "suggested_constant": "CONFIG_VALUE_0_05",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "'duration': 0.001,  # Very fast",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "'result_size': 1000000,  # Large result",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "await asyncio.sleep(0.01)",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "current_context": "await asyncio.sleep(0.01)",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "tasks = [run_analysis(i) for i in range(50)]",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 5000,
      "current_context": "iterations = 5000",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "iterations = 5000",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3000,
      "current_context": "iterations = 3000",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 3000 typically used in network_port context"
    },
    {
      "value": 5000,
      "current_context": "iterations = 5000",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2000,
      "current_context": "iterations = 2000",
      "suggested_constant": "MAGIC_CONSTANT_2000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "assert disabled_duration < 0.1  # Less than 100ms for 10k checks",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "assert enabled_duration < 0.1  # Less than 100ms for 10k checks",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.05,
      "current_context": "assert abs(disabled_duration - enabled_duration) < 0.05",
      "suggested_constant": "MAGIC_CONSTANT_0_05",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.05,
      "current_context": "assert overhead < 0.05  # Less than 50ms overhead",
      "suggested_constant": "MAGIC_CONSTANT_0_05",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "assert duration < 0.1  # Less than 100ms for 5k nonexistent checks",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "assert overhead_percentage < 50  # Less than 50% overhead",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "assert overhead < 0.1  # Less than 100ms total overhead",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "assert enabled_duration < 0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "assert disabled_duration < 0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "assert creation_time < 0.5  # Less than 500ms for 100 flags",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "assert cleanup_time < 0.1  # Less than 100ms",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.1,
      "current_context": "assert second_run <= first_run * 1.1  # Allow 10% margin",
      "suggested_constant": "MAGIC_CONSTANT_1_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "assert results[100] < results[10] * 20  # Not more than 20x slower",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "assert len(self.matrix.controls) > 20  # Should have many controls loaded",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "assert cached_duration < 0.01  # Very fast for cached calls",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "assert duration < 0.1  # Should be very fast even with many features",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)  # Small delay",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "assert len(self.generator.components) >= 4",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "self.telemetry.current_session_data['opportunities'] = 5000",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "expected = (5 / (1000 * 4)) * 1_000_000",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "assert dpmo == 1_000_000  # 100% defect rate",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "expected = (10 / 5000) * 1_000_000",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "assert metrics.dpmo == 5000  # (5/1000) * 1,000,000",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "assert metric_data[\"dpmo\"] == 5000",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "time.sleep(0.1)  # Small delay",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1000000,
      "current_context": "large_dpmo = self.telemetry.calculate_dpmo(1000000, 1, 1)",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000000000,
      "current_context": "assert large_dpmo == 1000000000000  # Very large DPMO",
      "suggested_constant": "MAGIC_CONSTANT_1000000000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000000,
      "current_context": "small_dpmo = self.telemetry.calculate_dpmo(1, 1000000000, 1)",
      "suggested_constant": "MAGIC_CONSTANT_1000000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "assert small_dpmo == 0.001",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "expected = (10 / 5000) * 1_000_000",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 7000,
      "current_context": "self.telemetry.current_session_data['opportunities'] = 7000",
      "suggested_constant": "MAGIC_CONSTANT_7000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "expected = (3 / 7000) * 1_000_000",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "assert abs(dpmo - expected) < 0.01",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "expected = (5 / 10000) * 1_000_000",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "assert abs(dpmo - 3.4) < 0.1",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5.9,
      "current_context": "assert sigma_level >= 5.9",
      "suggested_constant": "MAGIC_CONSTANT_5_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "assert duration < 0.1  # Less than 100ms for 1000 calculations",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6.0,
      "current_context": "assert sigma_level <= 6.0",
      "suggested_constant": "MAGIC_CONSTANT_6_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 7000,
      "current_context": "expected = (3 / 7000) * 1_000_000",
      "suggested_constant": "MAGIC_CONSTANT_7000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 10000000,
      "current_context": "dpmo = self.telemetry.calculate_dpmo(defects=34, opportunities=10_000_000)",
      "suggested_constant": "MAGIC_CONSTANT_10000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)  # Ensure different timestamps",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 999999,
      "current_context": "sigma_level = self.telemetry.calculate_sigma_level(dpmo=999999)",
      "suggested_constant": "MAGIC_CONSTANT_999999",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "sigma_level = self.telemetry.calculate_sigma_level(dpmo=0.001)",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3.4,
      "current_context": "assert abs(dpmo - 3.4) < 0.1",
      "suggested_constant": "MAGIC_CONSTANT_3_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6,
      "current_context": "return passed >= 6  # Require most tests to pass",
      "suggested_constant": "MAGIC_CONSTANT_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 23840,
      "current_context": "\"total_loc\": 23840",
      "suggested_constant": "MAGIC_CONSTANT_23840",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 13410,
      "current_context": "'algorithm': 13410,",
      "suggested_constant": "MAGIC_CONSTANT_13410",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 11619,
      "current_context": "'name': 11619,",
      "suggested_constant": "MAGIC_CONSTANT_11619",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5701,
      "current_context": "'type': 5701,",
      "suggested_constant": "MAGIC_CONSTANT_5701",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4894,
      "current_context": "'execution': 4894,",
      "suggested_constant": "MAGIC_CONSTANT_4894",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1857,
      "current_context": "'estimated_loc': 1857,",
      "suggested_constant": "MAGIC_CONSTANT_1857",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "'connascence_reduction': 80,  # 80% reduction target",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 28778,
      "current_context": "'violations_fixed': 28778  # 80% of 35973",
      "suggested_constant": "MAGIC_CONSTANT_28778",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "time.sleep(0.2)",
      "suggested_constant": "CONFIG_VALUE_0_2",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 8890,
      "current_context": "server = MockGitHubServer(port=8890)",
      "suggested_constant": "CONFIG_VALUE_8890",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 25,
      "current_context": "\"Missing response caching\": 25,",
      "suggested_constant": "DEFAULT_RETRY_COUNT",
      "justification": "Operational parameter that may need tuning"
    },
    {
      "value": 4,
      "current_context": "max_nesting <= 4",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "\"analysis_timeout\": 300,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 8000,
      "current_context": "self.assertLess(analysis_time, 8000, \"Supply Chain analysis should have medium impact\")",
      "suggested_constant": "MAGIC_CONSTANT_8000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "self.assertEqual(timeout, 0.1)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.1,
      "current_context": "return 0.1  # Very short timeout",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 0.2,
      "current_context": "time.sleep(0.2)  # Ensure server is ready",
      "suggested_constant": "CONFIG_VALUE_0_2",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.2,
      "current_context": "time.sleep(0.2)",
      "suggested_constant": "CONFIG_VALUE_0_2",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 8888,
      "current_context": "cls.server = MockGitHubServer(port=8888)",
      "suggested_constant": "CONFIG_VALUE_8888",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 8889,
      "current_context": "cls.server = MockGitHubServer(port=8889)",
      "suggested_constant": "CONFIG_VALUE_8889",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 300,
      "current_context": "\"analysis_timeout\": 300,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "\"analysis_timeout\": 300,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 300,
      "current_context": "\"analysis_timeout\": 300,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 9999,
      "current_context": "return {1000 + package_idx * 100} <= id_value <= {9999 + package_idx * 100}",
      "suggested_constant": "MAGIC_CONSTANT_9999",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "self.assertLess(first_duration, 0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1.1,
      "current_context": "time.sleep(1.1)  # Wait for TTL to expire",
      "suggested_constant": "CONFIG_VALUE_1_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "current_context": "@retry_with_backoff(max_retries=3, base_delay=0.01)  # Fast for testing",
      "suggested_constant": "DEFAULT_RETRY_COUNT",
      "justification": "Operational parameter that may need tuning"
    },
    {
      "value": 0.01,
      "current_context": "@retry_with_backoff(max_retries=2, base_delay=0.01)",
      "suggested_constant": "DEFAULT_RETRY_COUNT",
      "justification": "Operational parameter that may need tuning"
    },
    {
      "value": 2000,
      "current_context": "analysis_duration_ms=2000,",
      "suggested_constant": "MAGIC_CONSTANT_2000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300,
      "current_context": "cache = APICache(ttl_seconds=300, max_size=100)",
      "suggested_constant": "CONFIG_VALUE_300",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)  # Simulate network delay",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 45,
      "current_context": "result = self.run_node_test(test_code, timeout=45)",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 1250,
      "current_context": "'messages_sent': 1250,",
      "suggested_constant": "MAGIC_CONSTANT_1250",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1248,
      "current_context": "'messages_received': 1248,",
      "suggested_constant": "MAGIC_CONSTANT_1248",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 9850,
      "current_context": "'requests_completed': 9850,",
      "suggested_constant": "MAGIC_CONSTANT_9850",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2500,
      "current_context": "'princess_failure': 2500,  # ms",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 5000,
      "current_context": "'consensus_timeout': 5000,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1500,
      "current_context": "'byzantine_detection': 1500,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 3000,
      "current_context": "'context_reconstruction': 3000,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 15000,
      "current_context": "'full_restart': 15000",
      "suggested_constant": "MAGIC_CONSTANT_15000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 95,
      "current_context": "status = \"\" if success_rate > 95 else \"\"",
      "suggested_constant": "MAGIC_CONSTANT_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1850,
      "current_context": "'memory_mb': [512, 980, 1850, 3600]",
      "suggested_constant": "MAGIC_CONSTANT_1850",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 90,
      "current_context": "'production_ready': success_rate >= 90 and error_tests == 0",
      "suggested_constant": "MAGIC_CONSTANT_90",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 95,
      "current_context": "'status': 'PASSED' if success_rate > 95 else 'DEGRADED',",
      "suggested_constant": "MAGIC_CONSTANT_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 95,
      "current_context": "'status': 'PASSED' if rps > 100 and success_rate > 95 else 'DEGRADED',",
      "suggested_constant": "MAGIC_CONSTANT_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1500,
      "current_context": "analysis_duration_ms=1500,",
      "suggested_constant": "MAGIC_CONSTANT_1500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 5000,
      "current_context": "for i in range(5000):  # 5000 violations across 1000 files",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "self.assertEqual(len(json_dict[\"violations\"]), 5000)",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2500,
      "current_context": "analysis_duration_ms=2500,",
      "suggested_constant": "MAGIC_CONSTANT_2500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15000,
      "current_context": "analysis_duration_ms=15000,",
      "suggested_constant": "MAGIC_CONSTANT_15000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 45000,
      "current_context": "analysis_duration_ms=45000,",
      "suggested_constant": "MAGIC_CONSTANT_45000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "column=i % 80 + 1,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 1500,
      "current_context": "analysis_duration_ms=1500,",
      "suggested_constant": "MAGIC_CONSTANT_1500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "analysis_duration_ms=5000,",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "return found_terms >= len(expertise_terms) * 0.7  # 70% of terms found",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "analysis_duration_ms=5000,",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 30000,
      "current_context": "analysis_duration_ms=30000,",
      "suggested_constant": "MAGIC_CONSTANT_30000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 999999,
      "current_context": "line_number=999999,  # Very large line number",
      "suggested_constant": "MAGIC_CONSTANT_999999",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 999999,
      "current_context": "column=999999,",
      "suggested_constant": "MAGIC_CONSTANT_999999",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "description=\"x\" * 1000000,  # 1MB description",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "recommendation=\"y\" * 1000000,  # 1MB recommendation",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 100000,
      "current_context": "code_snippet=\"z\" * 100000,  # 100KB code snippet",
      "suggested_constant": "MAGIC_CONSTANT_100000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "recommendation=\"y\" * 5000,",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 100000,
      "current_context": "context={\"attack\": \"a\" * 100000}  # 100KB context",
      "suggested_constant": "MAGIC_CONSTANT_100000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "column=i % 80 + 1,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "end_column=i % 80 + 10,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 2500,
      "current_context": "analysis_duration_ms=2500,",
      "suggested_constant": "MAGIC_CONSTANT_2500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"-\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\" * 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "assert violation.position.column == 80",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "assert v2.position.column == 80",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "column=80,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 15.0,
      "current_context": "timeout=15.0",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 45.0,
      "current_context": "timeout=45.0",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 202,
      "current_context": "assert response.status == 202  # Accepted",
      "suggested_constant": "CONFIG_VALUE_202",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 202,
      "current_context": "assert response.status == 202",
      "suggested_constant": "CONFIG_VALUE_202",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "for _ in range(50):",
      "suggested_constant": "CONFIG_VALUE_50",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "assert memory_increase < 50 * 1024 * 1024",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.75,
      "current_context": "assert post_failure_health[\"system_health\"] == 0.75  # 3/4 nodes healthy",
      "suggested_constant": "CONFIG_VALUE_0_75",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.66,
      "current_context": "assert health[\"system_health\"] >= 0.66",
      "suggested_constant": "MAGIC_CONSTANT_0_66",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 180,
      "current_context": "coordinator.mesh_nodes[\"api-docs\"].last_heartbeat = current_time - 180  # 3 minutes old",
      "suggested_constant": "CONFIG_VALUE_180",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.66,
      "current_context": "assert healthy_nodes >= len(coordinator.mesh_nodes) * 0.66",
      "suggested_constant": "MAGIC_CONSTANT_0_66",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "large_violations = [{\"tool\": \"flake8\", \"rule\": \"E501\"} for _ in range(15)]",
      "suggested_constant": "CONFIG_VALUE_15",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "await asyncio.sleep(0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "assert result[\"total_nodes\"] == 4",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.67,
      "current_context": "assert healthy_count >= len(coordinator.mesh_nodes) * 0.67",
      "suggested_constant": "MAGIC_CONSTANT_0_67",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 30000,
      "current_context": "mock_tool.timeout = 30000",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 15.0,
      "current_context": "assert processing_time < 15.0  # Under 15 seconds for 10 concurrent streams",
      "suggested_constant": "MAGIC_CONSTANT_15_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "assert violations_per_second > 50  # Over 50 violations/second total",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "assert generation_time < 0.1  # Under 100ms for 1000 violations",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "violations_per_second = violations_count / max(execution_time, 0.001)",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "correlations_per_second = correlations_count / max(execution_time, 0.001)",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "correlations_per_second = result[\"total_correlations\"] / max(processing_time, 0.001)",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "assert metrics.files_per_second > 0.1  # Over 0.1 files/second",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 120.0,
      "current_context": "assert execution_time < 120.0  # Under 2 minutes for 20 files",
      "suggested_constant": "MAGIC_CONSTANT_120_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "assert files_per_second > 0.2  # Over 0.2 files/second",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 300.0,
      "current_context": "assert execution_time < 300.0  # Under 5 minutes total",
      "suggested_constant": "MAGIC_CONSTANT_300_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.5,
      "current_context": "assert time_ratio <= node_ratio * 1.5  # Allow 50% overhead",
      "suggested_constant": "MAGIC_CONSTANT_1_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "await asyncio.sleep(0.1)  # Simulate work",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "tool_manager.updateSuccessMetrics(tool_id, i * 0.001, mock_result)",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.5,
      "current_context": "assert time_ratio <= file_ratio ** 1.5",
      "suggested_constant": "MAGIC_CONSTANT_1_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "for _ in range(20):  # Sample for ~10 seconds",
      "suggested_constant": "CONFIG_VALUE_20",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80.0,
      "current_context": "assert avg_cpu < 80.0  # Average under 80%",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80.0 typically used in network_port context"
    },
    {
      "value": 0.5,
      "current_context": "assert successful >= task_count * 0.5  # At least 50% success rate",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "executionTime=i * 0.001,",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "await asyncio.sleep(0.5)",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "if len(all_violations) >= 4:  # Need enough violations for correlations",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "\"column\": 80,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "\"column\": 80,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "\"column\": 80,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 30000,
      "current_context": "self.timeout = 30000",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 1500,
      "current_context": "assert flake8_alloc.throttleInterval == 1500",
      "suggested_constant": "CONFIG_VALUE_1500",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2000,
      "current_context": "assert allocation.throttleInterval == 2000",
      "suggested_constant": "CONFIG_VALUE_2000",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2000,
      "current_context": "throttleInterval=2000",
      "suggested_constant": "CONFIG_VALUE_2000",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "await asyncio.sleep(0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 88,
      "current_context": "rules={\"max-line-length\": 88, \"ignore\": [\"E203\", \"W503\"]},",
      "suggested_constant": "CONFIG_VALUE_88",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "assert len(safety_report[\"recent_violations\"]) <= 50",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 45.0,
      "current_context": "\"performance_gain\": 45.0",
      "suggested_constant": "CONFIG_VALUE_45_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.85,
      "current_context": "assert pattern[\"pattern_strength\"] == 0.85",
      "suggested_constant": "CONFIG_VALUE_0_85",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2000,
      "current_context": "large_content = {\"large_data\": \"x\" * 2000}  # 2KB per entry",
      "suggested_constant": "MAGIC_CONSTANT_2000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "assert abs(matching_trend.improvement_percentage - expected) < 0.01",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "max_entries=5000",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "executor.submit(store_entries, thread_id, 20)",
      "suggested_constant": "CONFIG_VALUE_20",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 4,
      "current_context": "with ThreadPoolExecutor(max_workers=4) as executor:",
      "suggested_constant": "CONFIG_VALUE_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15,
      "current_context": "executor.submit(create_correlations, thread_id, 15)",
      "suggested_constant": "CONFIG_VALUE_15",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 6,
      "current_context": "with ThreadPoolExecutor(max_workers=6) as executor:",
      "suggested_constant": "CONFIG_VALUE_6",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2000,
      "current_context": "metadata={\"large_data\": \"x\" * 2000}  # Large metadata for compression test",
      "suggested_constant": "MAGIC_CONSTANT_2000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.95,
      "current_context": "'confidence_interval': 0.95,",
      "suggested_constant": "CONFIG_VALUE_0_95",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "minimal_drift = [0.1] * 10",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "assert metrics['risk_accuracy'] > 0.6",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "assert theater_metrics['ensemble_accuracy'] > 0.5",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "assert avg_prediction_time < 0.5, f\"Avg prediction time {avg_prediction_time:.3f}s too slow\"",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "assert metrics['accuracy'] > 0.6",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 8001,
      "current_context": "'port': 8001,",
      "suggested_constant": "MAGIC_CONSTANT_8001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "label = 1 if effort_impact_ratio < 0.1 else 0  # 1 = theater",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.08,
      "current_context": "label = 1 if effort_impact < 0.08 else 0",
      "suggested_constant": "MAGIC_CONSTANT_0_08",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "'code_duplication': np.random.uniform(0.0, 0.3)",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "'user_value': np.random.uniform(0.1, 0.8)",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "'user_value': np.random.uniform(0.1, 0.8)",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "'lines_added': np.random.randint(5, 80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.5,
      "current_context": "'code_duplication': np.random.uniform(0.0, 0.5)",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "'code_duplication': np.random.uniform(0.0, 0.1)",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.4,
      "current_context": "'code_duplication': np.random.uniform(0.4, 0.8)",
      "suggested_constant": "MAGIC_CONSTANT_0_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "'code_duplication': np.random.uniform(0.4, 0.8)",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 4,
      "current_context": "'methods_modified': 4,",
      "suggested_constant": "MAGIC_CONSTANT_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.6,
      "current_context": "assert metrics['accuracy'] > 0.6  # Should achieve reasonable accuracy",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "'code_duplication': np.random.uniform(0.0, 0.1)",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "'code_duplication': np.random.uniform(0.3, 0.7)",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "'code_duplication': np.random.uniform(0.3, 0.7)",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "theater_classifier.config['epochs'] = 20",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "theater_classifier.ensemble_weights = [0.8, 0.2]",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "theater_classifier.ensemble_weights = [0.8, 0.2]",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "'artificial_coverage': 0.1,",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "assert theater_classifier.ensemble_weights == [0.8, 0.2]",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "assert theater_classifier.ensemble_weights == [0.8, 0.2]",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "assert metrics['ensemble_accuracy'] > 0.7",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.4,
      "current_context": "'user_value': np.random.uniform(0.4, 0.9)",
      "suggested_constant": "MAGIC_CONSTANT_0_4",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "'user_value': np.random.uniform(0.4, 0.9)",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "'development_time': np.random.uniform(8, 15)",
      "suggested_constant": "MAGIC_CONSTANT_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "'user_value': np.random.uniform(0.0, 0.3)",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.0001,
      "current_context": "simulated_work_time = 0.0001  # 0.1ms per operation (fast real-time work)",
      "suggested_constant": "MAGIC_CONSTANT_0_0001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "cv_passed = cv < 0.1  # Less than 10% variation",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "max_passed = max_monitored_time < 0.001  # Less than 1ms maximum",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.0005,
      "current_context": "p99_passed = p99_time < 0.0005  # Less than 0.5ms for 99th percentile",
      "suggested_constant": "MAGIC_CONSTANT_0_0005",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1.2,
      "current_context": "return overhead_percentage <= 1.2 and all_passed",
      "suggested_constant": "MAGIC_CONSTANT_1_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 96.7,
      "current_context": "'cache_hit_rate': 96.7,",
      "suggested_constant": "CONFIG_VALUE_96_7",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 36953,
      "current_context": "'aggregation_throughput': 36953,",
      "suggested_constant": "CONFIG_VALUE_36953",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 54.55,
      "current_context": "'ast_traversal_reduction': 54.55,",
      "suggested_constant": "CONFIG_VALUE_54_55",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 97.4,
      "current_context": "'cache_hit_rate': 97.4,  # Exceeds target",
      "suggested_constant": "CONFIG_VALUE_97_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 36953,
      "current_context": "'aggregation_throughput': 36953,  # Meets target",
      "suggested_constant": "CONFIG_VALUE_36953",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 54.55,
      "current_context": "'ast_traversal_reduction': 54.55,  # Meets target",
      "suggested_constant": "CONFIG_VALUE_54_55",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.05,
      "current_context": "self.assertLess(coordination_metrics['precision_targeting_ratio'], 0.05)  # <5% files modified",
      "suggested_constant": "MAGIC_CONSTANT_0_05",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.33,
      "current_context": "'fault_tolerance_ratio': 0.33,  # f < n/3",
      "suggested_constant": "MAGIC_CONSTANT_0_33",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 36953,
      "current_context": "'aggregation_throughput': {'before': 36953, 'after': 36953, 'tolerance': 0.05},",
      "suggested_constant": "MAGIC_CONSTANT_36953",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 36953,
      "current_context": "'aggregation_throughput': {'before': 36953, 'after': 36953, 'tolerance': 0.05},",
      "suggested_constant": "MAGIC_CONSTANT_36953",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 54.55,
      "current_context": "'ast_traversal_efficiency': {'before': 54.55, 'after': 54.55, 'tolerance': 0.02},",
      "suggested_constant": "CONFIG_VALUE_54_55",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 54.55,
      "current_context": "'ast_traversal_efficiency': {'before': 54.55, 'after': 54.55, 'tolerance': 0.02},",
      "suggested_constant": "CONFIG_VALUE_54_55",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.02,
      "current_context": "'ast_traversal_efficiency': {'before': 54.55, 'after': 54.55, 'tolerance': 0.02},",
      "suggested_constant": "CONFIG_VALUE_0_02",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 43.0,
      "current_context": "'memory_efficiency': {'before': 43.0, 'after': 43.0, 'tolerance': 0.02},",
      "suggested_constant": "CONFIG_VALUE_43_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 43.0,
      "current_context": "'memory_efficiency': {'before': 43.0, 'after': 43.0, 'tolerance': 0.02},",
      "suggested_constant": "CONFIG_VALUE_43_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.02,
      "current_context": "'memory_efficiency': {'before': 43.0, 'after': 43.0, 'tolerance': 0.02},",
      "suggested_constant": "CONFIG_VALUE_0_02",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 96.7,
      "current_context": "'cache_hit_rate': {'before': 96.7, 'after': 97.4, 'tolerance': 0.02},",
      "suggested_constant": "CONFIG_VALUE_96_7",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 97.4,
      "current_context": "'cache_hit_rate': {'before': 96.7, 'after': 97.4, 'tolerance': 0.02},",
      "suggested_constant": "CONFIG_VALUE_97_4",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.02,
      "current_context": "'cache_hit_rate': {'before': 96.7, 'after': 97.4, 'tolerance': 0.02},",
      "suggested_constant": "CONFIG_VALUE_0_02",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "'cache_method_addition': {'overhead_percent': 0.5, 'max_acceptable': 2.0},",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15.0,
      "current_context": "'byzantine_coordination': {'overhead_percent': 10.0, 'max_acceptable': 15.0}",
      "suggested_constant": "CONFIG_VALUE_15_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1080,
      "current_context": "return np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "MAGIC_CONSTANT_1080",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1920,
      "current_context": "return np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "MAGIC_CONSTANT_1920",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1200,
      "current_context": "\"avg\": 1200,",
      "suggested_constant": "MAGIC_CONSTANT_1200",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1500,
      "current_context": "\"burst\": 1500",
      "suggested_constant": "MAGIC_CONSTANT_1500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15.0,
      "current_context": "\"velocity\": [0.0, 15.0 + np.random.uniform(-5, 5), 0.0],",
      "suggested_constant": "MAGIC_CONSTANT_15_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1920,
      "current_context": "image_width, image_height = 1920, 1080",
      "suggested_constant": "MAGIC_CONSTANT_1920",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1080,
      "current_context": "image_width, image_height = 1920, 1080",
      "suggested_constant": "MAGIC_CONSTANT_1080",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "assert avg_track_lifetime > 0.5, f\"Average track lifetime {avg_track_lifetime:.2f}s too short\"",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "object_sizes = [20, 30, 50, 80, 120]  # pixels",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 480,
      "current_context": "height, width = image_data.shape[:2] if len(image_data.shape) >= 2 else (480, 640)",
      "suggested_constant": "MAGIC_CONSTANT_480",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 640,
      "current_context": "height, width = image_data.shape[:2] if len(image_data.shape) >= 2 else (480, 640)",
      "suggested_constant": "MAGIC_CONSTANT_640",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "bbox_w = np.random.uniform(20, min(200, width - bbox_x))",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "bbox_h = np.random.uniform(20, min(200, height - bbox_y))",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "visibility = np.random.uniform(0.7, 1.0)",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.3,
      "current_context": "occlusion = np.random.uniform(0.0, 0.3)",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.2,
      "current_context": "truncation = np.random.uniform(0.0, 0.2)",
      "suggested_constant": "MAGIC_CONSTANT_0_2",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1080,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1080",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1920",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1080,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1080",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1920",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "if occlusion <= 0.5:  # Low occlusion should maintain good detection",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1080,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1080",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1920",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20.0,
      "current_context": "np.random.uniform(-20.0, 20.0),",
      "suggested_constant": "MAGIC_CONSTANT_20_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "position = (np.random.uniform(-20, 20), np.random.uniform(10, 200), 0.0)",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "velocity = (np.random.uniform(-5, 5), np.random.uniform(20, 40), 0.0)",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 40,
      "current_context": "velocity = (np.random.uniform(-5, 5), np.random.uniform(20, 40), 0.0)",
      "suggested_constant": "MAGIC_CONSTANT_40",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1080,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "MAGIC_CONSTANT_1080",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1920,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "MAGIC_CONSTANT_1920",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1080,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1080",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1920",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1080,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1080",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1920",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1080,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1080",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1920",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1080,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1080",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1920",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1080,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1080",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 1920,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "CONFIG_VALUE_1920",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.6,
      "current_context": "assert recall >= 0.6, f\"Recall {recall:.3f} too low for occlusion level {occlusion}\"",
      "suggested_constant": "MAGIC_CONSTANT_0_6",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1080,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "MAGIC_CONSTANT_1080",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1920,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "MAGIC_CONSTANT_1920",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1080,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "MAGIC_CONSTANT_1080",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1920,
      "current_context": "image_data = np.random.randint(0, 255, (1080, 1920, 3), dtype=np.uint8)",
      "suggested_constant": "MAGIC_CONSTANT_1920",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20.0,
      "current_context": "np.random.uniform(-20.0, 20.0),",
      "suggested_constant": "MAGIC_CONSTANT_20_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "position = (np.random.uniform(-20, 20), np.random.uniform(10, 200), 0.0)",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "position = (np.random.uniform(-15, 15), np.random.uniform(5, 100), 0.0)",
      "suggested_constant": "MAGIC_CONSTANT_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "velocity = (np.random.uniform(-10, 10), np.random.uniform(0, 20), 0.0)",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "relevant_gt = [gt for gt in ground_truth if abs(gt.occlusion_level - occlusion) < 0.1]",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.9,
      "current_context": "\"meets_benchmark\": current_value >= benchmark_value * 0.9  # 90% of benchmark",
      "suggested_constant": "MAGIC_CONSTANT_0_9",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "position = (np.random.uniform(-15, 15), np.random.uniform(5, 100), 0.0)",
      "suggested_constant": "MAGIC_CONSTANT_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "position = (np.random.uniform(-10, 10), np.random.uniform(5, 50), 0.0)",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50,
      "current_context": "position = (np.random.uniform(-10, 10), np.random.uniform(5, 50), 0.0)",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 15,
      "current_context": "velocity = (np.random.uniform(-5, 5), np.random.uniform(0, 15), 0.0)",
      "suggested_constant": "MAGIC_CONSTANT_15",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "self.error_rate = 0.001  # 0.1% error rate",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.002,
      "current_context": "time.sleep(0.002)  # 2ms processing time",
      "suggested_constant": "CONFIG_VALUE_0_002",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.99,
      "current_context": "assert successful_operations >= num_concurrent_requests * 0.99, f\"Too many failed operations: {num_concurrent_requests - successful_operations}\"",
      "suggested_constant": "MAGIC_CONSTANT_0_99",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.8,
      "current_context": "assert sustained_throughput >= THROUGHPUT_MIN_OPS_SEC * 0.8, f\"Sustained throughput {sustained_throughput:.2f} ops/sec below acceptable level\"",
      "suggested_constant": "MAGIC_CONSTANT_0_8",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "cpu_percent = process.cpu_percent(interval=0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80.0,
      "current_context": "assert availability >= 80.0, f\"System availability {availability:.2f}% too low after multiple failures\"",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80.0 typically used in network_port context"
    },
    {
      "value": 75.0,
      "current_context": "assert availability >= 75.0, f\"Degraded mode availability {availability:.2f}% too low\"",
      "suggested_constant": "MAGIC_CONSTANT_75_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.025,
      "current_context": "await asyncio.sleep(0.025)  # 25ms detection time",
      "suggested_constant": "CONFIG_VALUE_0_025",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 50,
      "current_context": "if redundant_system[\"primary\"][\"health\"] < 50:",
      "suggested_constant": "MAGIC_CONSTANT_50",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.05,
      "current_context": "await asyncio.sleep(0.05)  # 50ms activation time",
      "suggested_constant": "CONFIG_VALUE_0_05",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "self.failure_rate = 0.001  # 0.1% failure rate",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.005,
      "current_context": "processing_delay = np.random.uniform(0.005, 0.015)  # 5-15ms",
      "suggested_constant": "CONFIG_VALUE_0_005",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.015,
      "current_context": "processing_delay = np.random.uniform(0.005, 0.015)  # 5-15ms",
      "suggested_constant": "CONFIG_VALUE_0_015",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 20,
      "current_context": "for _ in range(20):",
      "suggested_constant": "CONFIG_VALUE_20",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.01,
      "current_context": "drift_values = [0.01, 0.02, 0.04, 0.06, 0.08]  # Increasing drift in meters",
      "suggested_constant": "MAGIC_CONSTANT_0_01",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.02,
      "current_context": "drift_values = [0.01, 0.02, 0.04, 0.06, 0.08]  # Increasing drift in meters",
      "suggested_constant": "MAGIC_CONSTANT_0_02",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.04,
      "current_context": "drift_values = [0.01, 0.02, 0.04, 0.06, 0.08]  # Increasing drift in meters",
      "suggested_constant": "MAGIC_CONSTANT_0_04",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.06,
      "current_context": "drift_values = [0.01, 0.02, 0.04, 0.06, 0.08]  # Increasing drift in meters",
      "suggested_constant": "MAGIC_CONSTANT_0_06",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.08,
      "current_context": "drift_values = [0.01, 0.02, 0.04, 0.06, 0.08]  # Increasing drift in meters",
      "suggested_constant": "MAGIC_CONSTANT_0_08",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.7,
      "current_context": "assert lidar_data.confidence < 0.7, \"Degraded sensor confidence not reduced\"",
      "suggested_constant": "MAGIC_CONSTANT_0_7",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.85,
      "current_context": "assert fused_obj.confidence >= 0.85, \"Camera confidence not properly weighted\"",
      "suggested_constant": "MAGIC_CONSTANT_0_85",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "assert avg_position_variation < 0.5, f\"High position variation: {avg_position_variation:.2f}m\"",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20.0,
      "current_context": "if ego_distance < 20.0 and vehicle.position[1] > scenario.ego_vehicle.position[1]:",
      "suggested_constant": "MAGIC_CONSTANT_20_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "if np.random.random() < 0.1:  # 10% chance to change direction",
      "suggested_constant": "MAGIC_CONSTANT_0_1",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.02,
      "current_context": "if np.random.random() < 0.02:  # 2% chance per frame",
      "suggested_constant": "MAGIC_CONSTANT_0_02",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "pedestrian.heading += np.random.uniform(-0.5, 0.5)",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.5,
      "current_context": "pedestrian.heading += np.random.uniform(-0.5, 0.5)",
      "suggested_constant": "MAGIC_CONSTANT_0_5",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 50.0,
      "current_context": "if ttc < 2.0 and distance < 50.0:",
      "suggested_constant": "MAGIC_CONSTANT_50_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80.0,
      "current_context": "position=(0.0, 80.0, 0.0),",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80.0 typically used in network_port context"
    },
    {
      "value": 4.0,
      "current_context": "elif ttc < 4.0 and distance < 100.0:",
      "suggested_constant": "MAGIC_CONSTANT_4_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 150.0,
      "current_context": "elif distance < 150.0:",
      "suggested_constant": "MAGIC_CONSTANT_150_0",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.1,
      "current_context": "time.sleep(random.uniform(0.1, 0.5))",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.5,
      "current_context": "time.sleep(random.uniform(0.1, 0.5))",
      "suggested_constant": "CONFIG_VALUE_0_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.85,
      "current_context": "'success_rate_target': overall_success_rate >= 0.85,  # Overall minimum",
      "suggested_constant": "MAGIC_CONSTANT_0_85",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(f\"\\n{'='*80}\")",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(f\"{'='*80}\")",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.3,
      "current_context": "if random.random() < 0.3:  # 30% chance of violations",
      "suggested_constant": "MAGIC_CONSTANT_0_3",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(f\"\\n{'='*80}\")",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(f\"{'='*80}\")",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(f\"\\n{'='*80}\")",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 80,
      "current_context": "print(f\"{'='*80}\")",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(random.uniform(0.001, 0.005))  # 1-5ms per file",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.005,
      "current_context": "time.sleep(random.uniform(0.001, 0.005))  # 1-5ms per file",
      "suggested_constant": "CONFIG_VALUE_0_005",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 600,
      "current_context": "'memory_usage_mb': 600,     # > 500 MB",
      "suggested_constant": "MAGIC_CONSTANT_600",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 20,
      "current_context": "'cyclomatic_complexity': 20  # > 15",
      "suggested_constant": "MAGIC_CONSTANT_20",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 5000,
      "current_context": "'total_loc': 5000,",
      "suggested_constant": "MAGIC_CONSTANT_5000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3000,
      "current_context": "'total_loc': 3000,",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 3000 typically used in network_port context"
    },
    {
      "value": 1200,
      "current_context": "{'lines_of_code': 1200},  # Critical",
      "suggested_constant": "MAGIC_CONSTANT_1200",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1500,
      "current_context": "{'lines_of_code': 1500},  # Critical",
      "suggested_constant": "MAGIC_CONSTANT_1500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1500,
      "current_context": "'large_files': [{'lines_of_code': i} for i in range(600, 1500, 100)],",
      "suggested_constant": "MAGIC_CONSTANT_1500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2.5,
      "current_context": "large_file_processing_time = 2.5  # Simulated time",
      "suggested_constant": "CONFIG_VALUE_2_5",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 2000,
      "current_context": "max_acceptable_response = 2000  # 2 seconds",
      "suggested_constant": "MAGIC_CONSTANT_2000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 90,
      "current_context": "if results['success_rate'] >= 90:",
      "suggested_constant": "MAGIC_CONSTANT_90",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 36953,
      "current_context": "'aggregation_throughput': 36953,           # violations/sec",
      "suggested_constant": "MAGIC_CONSTANT_36953",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 54.55,
      "current_context": "'ast_traversal_reduction': 54.55,          # percent",
      "suggested_constant": "CONFIG_VALUE_54_55",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 43.0,
      "current_context": "'memory_efficiency': 43.0,                 # percent improvement",
      "suggested_constant": "CONFIG_VALUE_43_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 96.7,
      "current_context": "'cache_hit_rate': 96.7,                    # percent",
      "suggested_constant": "CONFIG_VALUE_96_7",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 73.0,
      "current_context": "'thread_contention_reduction': 73.0,       # percent",
      "suggested_constant": "CONFIG_VALUE_73_0",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 58.3,
      "current_context": "'cumulative_improvement': 58.3              # percent",
      "suggested_constant": "CONFIG_VALUE_58_3",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.9,
      "current_context": "'memory_efficiency': 0.90,         # 90% of baseline",
      "suggested_constant": "CONFIG_VALUE_0_9",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.95,
      "current_context": "'cache_hit_rate': 0.95,            # 95% of baseline",
      "suggested_constant": "CONFIG_VALUE_0_95",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.85,
      "current_context": "'thread_contention_reduction': 0.85, # 85% of baseline",
      "suggested_constant": "CONFIG_VALUE_0_85",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.85,
      "current_context": "'cumulative_improvement': 0.85      # 85% of baseline",
      "suggested_constant": "CONFIG_VALUE_0_85",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "time.sleep(0.1)  # Simulate processing time",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 90,
      "current_context": "if results['success_rate'] >= 90:",
      "suggested_constant": "MAGIC_CONSTANT_90",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.01,
      "current_context": "time.sleep(random.uniform(0.01, 0.05))",
      "suggested_constant": "CONFIG_VALUE_0_01",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.05,
      "current_context": "time.sleep(random.uniform(0.01, 0.05))",
      "suggested_constant": "CONFIG_VALUE_0_05",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 75,
      "current_context": "elif results['success_rate'] >= 75:",
      "suggested_constant": "MAGIC_CONSTANT_75",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "print(\"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 89.7,
      "current_context": "return 89.7",
      "suggested_constant": "CONFIG_VALUE_89_7",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "print(\"\\n\" + \"=\"*80)",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 96.8,
      "current_context": "return 96.8",
      "suggested_constant": "CONFIG_VALUE_96_8",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.999,
      "current_context": "'availability_target': 0.999,",
      "suggested_constant": "MAGIC_CONSTANT_0_999",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.999,
      "current_context": "'sla_target': 0.999,",
      "suggested_constant": "CONFIG_VALUE_0_999",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.995,
      "current_context": "'availability_target': 0.995,",
      "suggested_constant": "MAGIC_CONSTANT_0_995",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.995,
      "current_context": "assert custom_system.config['availability_target'] == 0.995",
      "suggested_constant": "MAGIC_CONSTANT_0_995",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.999,
      "current_context": "'availability_target': 0.999,",
      "suggested_constant": "MAGIC_CONSTANT_0_999",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.999,
      "current_context": "assert sla_result['target_availability'] == 0.999",
      "suggested_constant": "MAGIC_CONSTANT_0_999",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.999,
      "current_context": "'sla_target': 0.999,",
      "suggested_constant": "CONFIG_VALUE_0_999",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "'check_interval_seconds': 0.1,  # Fast checks for testing",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.999,
      "current_context": "'availability_target': 0.999,",
      "suggested_constant": "MAGIC_CONSTANT_0_999",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.999,
      "current_context": "assert integrated_safety_system.config['availability_target'] == 0.999",
      "suggested_constant": "MAGIC_CONSTANT_0_999",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "time.sleep(0.1)  # Simulate work",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 15.0,
      "current_context": "timeout_seconds=15.0,",
      "suggested_constant": "DEFAULT_TIMEOUT_SECONDS",
      "justification": "Should be configurable for different environments"
    },
    {
      "value": 95,
      "current_context": "'available': i < 95,  # 95% availability",
      "suggested_constant": "MAGIC_CONSTANT_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.001,
      "current_context": "time.sleep(0.001)  # Small delay",
      "suggested_constant": "CONFIG_VALUE_0_001",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 95,
      "current_context": "'state': 'available' if i < 95 else 'unavailable'",
      "suggested_constant": "MAGIC_CONSTANT_95",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 0.1,
      "current_context": "time.sleep(0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.001,
      "current_context": "execution_time=0.001,",
      "suggested_constant": "MAGIC_CONSTANT_0_001",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 2000,
      "current_context": "(\"Frontend Development\", 2000, 140, 0.88),",
      "suggested_constant": "MAGIC_CONSTANT_2000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3000,
      "current_context": "(\"Backend Development\", 3000, 180, 0.87),",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 3000 typically used in network_port context"
    },
    {
      "value": 1500,
      "current_context": "(\"Unit Testing\", 1500, 90, 0.92),",
      "suggested_constant": "MAGIC_CONSTANT_1500",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 100000,
      "current_context": "self.assertLess(dpmo, 100000)  # Should be reasonable",
      "suggested_constant": "MAGIC_CONSTANT_100000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 3.2,
      "current_context": "collector.collect_metric(\"sigma_level\", 3.2)",
      "suggested_constant": "CONFIG_VALUE_3_2",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.1,
      "current_context": "time.sleep(0.1)",
      "suggested_constant": "CONFIG_VALUE_0_1",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 100000,
      "current_context": "self.assertLess(metrics.dpmo, 100000)   # But not too many",
      "suggested_constant": "MAGIC_CONSTANT_100000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "expected_dpmo = defect_rate * 1_000_000",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 1000000,
      "current_context": "expected_dpmo = (2+8+45+5+0) * 1_000_000 / (50+100+1000+200+25)",
      "suggested_constant": "MAGIC_CONSTANT_1000000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 6210,
      "current_context": "(6210, 4.0),   # 4-sigma",
      "suggested_constant": "MAGIC_CONSTANT_6210",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 66807,
      "current_context": "(66807, 3.0),  # 3-sigma",
      "suggested_constant": "MAGIC_CONSTANT_66807",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 500000,
      "current_context": "(500000, 1.0), # 1-sigma (approx)",
      "suggested_constant": "MAGIC_CONSTANT_500000",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 102,
      "current_context": "\"test_3\": 102",
      "suggested_constant": "CONFIG_VALUE_102",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.99,
      "current_context": "\"hit_rate\": 0.99,  # Suspiciously high",
      "suggested_constant": "CONFIG_VALUE_0_99",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 0.98,
      "current_context": "\"efficiency\": 0.98",
      "suggested_constant": "CONFIG_VALUE_0_98",
      "justification": "Configuration value requiring external control"
    },
    {
      "value": 80,
      "current_context": "\"execution_times\": {\"test\": 80},",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 1200,
      "current_context": "cost=CostInfo(usd=0.43, prompt_tokens=1200, completion_tokens=800),",
      "suggested_constant": "MAGIC_CONSTANT_1200",
      "justification": "Unusual number pattern requiring verification"
    },
    {
      "value": 80,
      "current_context": "return x + y + 80",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 80 typically used in network_port context"
    },
    {
      "value": 418,
      "current_context": "return x + y + 418",
      "suggested_constant": "HTTP_STATUS_VALUE",
      "justification": "Value 418 typically used in http_status context"
    },
    {
      "value": 429,
      "current_context": "return x + y + 429",
      "suggested_constant": "HTTP_STATUS_VALUE",
      "justification": "Value 429 typically used in http_status context"
    },
    {
      "value": 443,
      "current_context": "return x + y + 443",
      "suggested_constant": "NETWORK_PORT_VALUE",
      "justification": "Value 443 typically used in network_port context"
    }
  ]
}